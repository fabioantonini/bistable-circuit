%!PS-Adobe-2.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: pscdev3.dvi
%%CreationDate: Tue Dec 02 09:39:15 2003
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMBX12 CMTT12 CMR12 CMTI12 CMMI12 CMR8 CMSY10 CMMI8
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: C:\Programmi\texmf\miktex\bin\dvips.exe pscdev3
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.12.02:0939
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 117 /u put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueID 5087383 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124C2B6534F3CD1866AF92009D93B97F763AA3D44E59639592171DBFD3
BF5B688694C410BD8B5C208DAC763366C7236F4522E2B8645C5FA76836387049
5A91CADC64DA3DAD9C335DF828D6E28CE14F0AFBA103C93BBA334D9878EA076A
79533EEAD8C0CC8753AD2A142F767BC84930B832E82600AAD09282648CC13440
B5F60DAE9F5C156E9E7F972AC60DA72309C746BA14F8F7EF50E3C5666BD8DB48
529E8EEFACD95CCDCBDAEC33D66FDD527EF38B3321BCBDEEBFA55E40BFBC96FE
40F4F80A84E44D9700C57AE6B2770F0BF5BBB6BA8045B08389B145769661D892
1E25A9C7B0091CC67AEE0403FDC5B68A698D0CEFD2CF5F157D9455596124CCD2
F17EB128A69C49F2C5C673012B7FD664718CE1080F85F5E59CFFFD614966F1D0
C9D35C1E4188A99F8CA8F9ABAA304D9BC80EF0025FAD406E189920267938F624
307B7FF24A65AB16563F3237561302543BAE513E983BD01A910A5791CB07C0CB
DA2190930DC5D8F00D6E61E498AA4E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703711DA090312BA3FC00A08C453C609
C627A8B1550654AD5E22C5F3F3CC8C1C0A6C7ADDAB55016A76EC46213FD9BAAF
03F7A5FD261BF647FCA5049118033F809370A84AC3ADA3D5BE032CBB494D7851
A6242E785CCC20D81FC5EE7871F1E588DA3E31BD321C67142C5D76BC6AC708DF
C21616B4CC92F0F8B92BD37A4AB83E066D1245FAD89B480CB0AC192D4CAFA6AD
241BD8DF7AD566A2022FBC67364AB89F33608554113D210FE5D27F8FB1B2B78A
F22EC999DBAAFC9C60017101D5FB2A3B6E2BF4BE47B8E5E4662B8C41AB471DFC
A31EE1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 49 /one put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueID 5000791 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762B86FECDA8944
AA3B20AD6019056E01677B9584AEDEAEF247E83E36D8083D6CC3B27038022CD9
C39B042567C58D46C5CF9251A15BF5AEBBFB257DF0795F7CD23D66F42C96A736
B3843EB1992185F5EF8F04DA7E18E4303548D93E34B6F1ADC6A6C62741DD0299
5039C560EC3AAD4724E10C499943C15E0878164B69461460F23A81B724A69641
D516E2E43BBB60455F6BFD9A4F9CFAE045AC781034EEA7163EDD21DDC14C3303
2B5FD1C1104F8296F6B605360E68785A4782BA25630DEBB907C71E620BC59670
C991AADEE0EE32270CFD813744FCC4D105331A7CB971AFF9E23537B5FC09278F
07C27DB443BB11B299342E99AB002E234DD53B96D9937E3EB4980994DECE6AC5
6ADAF39BC1E75E4DBD86621E07F335C3CF163CC393D6F7DA00EA97E9C09226F1
50DAF34E255012E11B854EB649B11E890A360ACB231D057ECB60C7E090C0EC52
DE7E507E327B084FE6ABD1632C823A143B5766165B37A13073D103893430F0B3
E8B7179A2C3CC34500178C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /N put
dup 103 /g put
dup 105 /i put
dup 116 /t put
dup 118 /v put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueID 5087386 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0BD00ACDE6F57014D23479A3581A3357123162295E05EE27FFB5970941A35B
E8C2473AB47A517E7F4D92C7AB7F010C1E4C647E0FDC8A5126A210A21A9A2DCF
16ABB0B90E9C887DBE33662046A1DF2127B8355281641799994DEBD48FC73D61
6143FFB86CADC5548C3E694D40620979205AAA2BFE5EEF8F1D03DD7A3799CCE9
C49BBBF38583042A2D4B25C77BFAC5FD4CCB61CC8B279A83B37EECE68CE51197
5D6DE89ED11A2258BB34CDE1A6B86679411B5E93236B6E38251125385AF1647A
4E4169D825AAC0866A0AF08A289F9378231D5B159C63BEDBC8B663A937636B89
0F72473F24F37CDE6ED8050A9C99E9CEA17F453BC0C120073E96DD4AE86F0222
60FCFE119FD463EEB31FF49F512CEFB665519E7E1450E00BB9D0279C98E76D8C
6F0A941885A6D4F83425F4644334171966B702279E15456C72C9D5D0A44F2547
C832BA3D991C37B604E4DE22C24947C31261DFE88A93AE4E6C759EC26A048C8A
EAE9C9724A170FAC6BCF6A85AA31C1BB7D7002FA394244CDD63239F480705C1D
172991FC1A0531E9CA18F182EF865BE434330FD6B8572443E109AFC869D720DE
E0FD278EF3FE724AB849B4CD288D6981C46327C16278EBDA432267B7341E9AFD
5F6E12D0A47DAAB60FAF8B43F9409392E4D9197B434AFA1C9983FC2C330B4F75
B2FB0D5A087CE736B14E6BB73F4ACB4686C259A563B4CB5D0A92BA592D70C071
238352899F804686FF83758D612268B74D87ED6BA3F76E8F256506B93D6EE539
D1A0F5CCC2ACA3F3D9F5E15847793B8211B401A7A96D436E30FAE8675B930F69
12E085ABC5DCA1BF876899F3DABA1A0B6570F52E527631EA04CADC8A87ECFB5D
7ABE49DB6B0A5A4534B34DC0975E8E5B522BD8CDC840ED51B226EAB73EBD0A75
AB3B09EE9E88372B64ECA8B387291C9F65A9D197127904757543A5C270C8605A
D50F370CF33468486BDFBD725512056DDA17790938C5C0B4997A7E7D82A7D0F4
762E1CE1B5575E16D3BC8CCC29FEF0BD704C055BC7BFEA229928FAA6EA862AC9
89D9053BDE3E443BCB324C90D4274A316B55C00CD7F0BD52CE1025C87FB184D5
F339D15770E07E2E77D1356BD0F4FF4A911B9199B4268D30FAC6BE45EE5A4C4E
A0428EA22B50CE7159C9FF7DE81F68FCC7F304E95A8FE3B61868508ADCBF639C
015BC912FD48047074168F3244F4EAE48946505D1F419FCB608F5089D8BE564B
B342E6479750E9666B5B461EF06558A9585BE2C41D66E587E43794477A06E9EC
B43A3ED1457F8B28A3B242DA3EBC20BE1EA991B9F69D228D9123CD1FA5863647
697945F1F68CEFAE617BD1C781B4C5D9540081BAD9B00D3F9C5D80F9B0466AFD
9EB6D02B9E6FF75E193AA8DB0B92A216E1C790E77AA65A9DD4D4531C4965DDB9
FFF0CAED71EDD32E24A697DDFD9242625D4707A66B5BF77C2573BC00F2C0CED7
2A83C0EC27DAEE9B8A221979515FD3EEADD41EBC804EF606B5803CB76B5534D6
7E83149A7CFA784291A22D282C47A6081FA41E745823610379B053E34336A86E
062AA1C895B79126B8D7D361A0ACB8E425218FCB484E2E89878479F068248692
6B68216FC26BE1B08705233599E708FC8FF12DEDA487DCC9083F66F1E114CFFA
C05E9C3A82F9B873032857DB9A803DE55D87F5527F3F61798EE024F20BB1F4E4
C4590A9C9190FA6E38D064497D23C67819F7DDAC86853C6C5BA6E12DEFDAE4CB
6258EF37CEE31B22377A80E45EA0CB99768A9E0151175692AF98D80EA2DE8509
89018D738881F84695136474E9964162FF8E0436F6956F398A603C9C2C033BC5
A813FB3F802595DDCA69638731303015422786A45E79839FD50DBB45E324C039
565E29CF6D0F90689EDE767F2346625FFCEB3649F66A11E399630830C3A4D4FD
AAA6D6FAA4C2507D0FB2BDBCC949510F84FED898236A54F52CFDC1C7163B36B5
2067D03142E690F2F4493FEB2F99F5720F09EB16A45F7D343912C2A9C90DF6D9
8F76E6B8C96DBF27B720A33B37B4571835E1C050326D54C8FA4AE3F64175BAEC
31CFA14E1B1C569B8BDB38390FED36FA7E144F61B993CDC4BCCC879E1E863F73
FD5690F2294E0A2C307A1CDE7BF963613F457507C3CC9A2C4AD2AA251917EF3F
BDCF2F2FE5EE00B2AFDBF97084E15C33382FEF0209B8737AA7393841CE4B368E
327C892086F5614F87653E8DA7F3560098947FDA8EA8973CE7F50277E1846FE6
7343079AD4A96990FEB5852A3D21613433AD3BC07F59EB1D652A4A1021BA24E8
8A70FC01F6FDDA8BF4E62CC6C4AEEF00E0A6ED3AB94E869D7A87B41C25815CF4
BC670ADC4B3A5AA5803F2BDD6F8DA0C60F701C564443128F5610A8428B46645B
6899AB4980992938CF128FB71BE262ECC3FE41909DBFBF2C76C525F99F2EA7F5
E0B814BD6013
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
dup 109 /m put
dup 110 /n put
dup 111 /o put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
/UniqueID 5000829 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EF696E091A9D51510BE264701A41C04FA8125A48F306ACA7A83E35D5BA0C296A
BC594ECA2CB27E92FED95B595C21E5BF0DA724D40761CB377BDE5FB98C9D152D
6C0DC98C4083E9656321BFC445CD6FCC142DEF16E27DD6FAD0B3185223B1A7D6
779F39C70793184F2C3B721FD0AE6D8E063BD47804785DAEA74AF8C75483B713
6506165480677A22AC6A1EBDC56F88EB49ED2449DD177B82D02705C08668BE9D
117E35B5CD01F5D90480406C73C24D1A520D42E5C3343FD688AD36C7074D32D7
14A3EDC6B784B6DB2F382F35F42A9EE8DD530CEB22A11BEAD47CA0BA6EFC43FC
CBD5E012BA6BC40AFC31A39CB9567F797ED10E3265254DC1DCB28A702BF2A6F2
323D85764D27065510B8C86F630648E7CDD36D3DF74FD49EEF6713C082689431
6E56C2A81FB74E6CD791C56A76EAC2B45290D5EA40D1240D5AEDDD7C4E26A474
7062C8542B07AD32713209694F26C67774B79EBB976DCE8649A179F1F7351096
D1996D9118A15FA30B3BC05F4AD4BA9700DE92BF5F79D3534971E68A04658DB6
C85A4C5FF63C3E81A48CC7BB93D50ACB64D3AF330037794C21E9B9A3A396876B
0BE33F62D68EB8C93AC58D4430ECB6B903257CF8E5D0F0982B774D523A656342
F98A89D39078B6E0499D1AD37B07D401E0A85DD191164DF286AB288AE7C718BD
7C0DE6DB0A614CC7AE8F974F36A3C778D644EAF8815C842E3DAB9E1F92AB3748
6A10A73742AD302A3A28FF3C510778E7A4326E19D26385E16BCA6EED7E55781D
401D49572B533213BD5A18FDBDF34DFA53C4101E8D987CDED15C0E989DBAD620
98EFA4F9BF8FA5EAB78B5487B1920942BC2BAFA4BAE8C3EF3615C0D69BF01701
A9D46700A7E666481143204511F3BE823ACCAC1D35DFDAAF2AA62E7B7A0D0CB9
C1E9B956B706770A803223D0A60431F3DEBF3FF55BF07EAA5D4FA853DA0CC411
C3EC0526DC8E302DFDD1FA5CC607C710A09E2775A07575C241FFCD5C425E278A
9A58A126663B70FE0BFB080B173C8427122712018BDA1C054A0239A05B591397
CD105C44026846FA26794A0984BFBDC2DB4C88C83FCFEC2790D1617D17C96198
1C6735041099D9ED7B1C78BF34C20360DB7C029E5BB2C25DA99D379C1CC95457
B62E496D4B2D68424102A4119CBF2220EEAE39FC0E489A362A5CB434E7E6CDD0
29D143E49E50BB1421E92606D09C679507CD5F2FF8FDC8A6A19842BB3ECC0B24
C7CBAD8539812DA3898837E2A22F562350AA759A0AB4C2183FBB06E86FE8B966
832E42D4D04708ECE879ED87C122B48156D4F02D4CB1DE59B407283C97E8E8F4
B92B939A90673D913DFB0F3513B65F3AB015786ACAA51EE644CDFF68DC3A6D2E
3743F3634A4EDCC4C45A99F3D44B21E079BF5E0D50FD822B04AFE06B061CC4FA
58BF3F4573AE494E5F8DC23F0F1BA1F532E08379
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT12
%!PS-AdobeFont-1.1: CMTT12 1.0
%%CreationDate: 1991 Aug 20 16:45:46
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 36 /dollar put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
readonly def
/FontBBox{-1 -234 524 695}readonly def
/UniqueID 5000833 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660FE13FF01BC20148F9C480BCD0E
C81D5BFC66F04993DD73F0BE0AB13F53B1BA79FE5F618A4F672B16C06BE3251E
3BCB599BFA0E6041FBD558475370D693A959259A2699BA6E97CF40435B8E8A4B
426343E145DF14E59028D4E0941AB537E34024E6CDE0EA9AF8038A3260A0358D
D5B1DB53582F0DAB7ADE29CF8DBA0992D5A94672DFF91573F38D9BFD1A57E161
E52DA1B41433C82261E47F79997DF603935D2A187A95F7A25D148FB3C2B6AA32
6B982C32C6B25867871ED7B38E150031A3DE568C8D3731A779EAAF09AC5CE6C5
A129C4147E56882B8068DF37C97C761694F1316AF93E33FF7E0B2F1F252735CE
0D9F7BCE136B06EE967ABE0C8DF24DCBBF99874702ED252B677F407CB39678CC
85DDFC2F45C552BA967E4158165ED16FECC4E32AC4D3B3EB8046DCDD37C92FDF
F1F3710BB8EF5CA358ABACA33C7E5ACAD6BF5DC58BDFC3CF09BA2A38291D45A4
C15FF1916FE2EC47FDC80911EB9C61F5D355BEDFC9DB17588547763AC5F0B1CC
12D2FFB32E0803D37E3281DA9CE36C5433655526ACFB3A301C56FAB09DF07B5D
048B47687348DEB96F3F9C53CE56DDD312B93D3918CD92AF53FB9461864D11B8
0138918D0B1270C54873C4012CDE6F886DB11BCEA04B023EBB43E0D0A06BE725
741D08B9DB688731A6C9886C15A83C28DADCC81385EA239E045E8F3670CE03DB
9EE77ED067036595C9F3B1854343BE3A12E486B6E5A2F8AC44FA5378D28DCCEE
306B0E283AA444423F9A4FF38E2B56DCF67A39CEB2C643DAE86865517D5D0371
CB8797208ADEC637330A3A57902C9A88EDB75A7C16FA9850075D9F19578EC666
1353CC1FC512D59DFF847ACCD72B56698531954A794518DA13E7233051358B06
BA0E359EF0291E2A12D89F8C652C38B0A6E21EE2297394CD3CF0869A41217B38
C83949AEC0C814B05128CA348D1F700033BA12BB755DD0A0D74259ADDBC1CD91
08B1086A130411FE83622A86A22EB556917855CF3C3FF7119A1993E87CA61DAC
46EA7B0EFEE9231371AEB3FC1A9889CEFBB00DCA8D48D02AD81C06106700F8A9
7C5C309C3888DEE346F4E8CCFDA4DB5180FD357DFACECB24FA7A36124B3671D3
96FD24AA46FAB4D581FDE50C8C2BA15C89B1D2B3AFB1C221ADD55A8BB9791FA1
4A1F5F1A49AF6E49079CDD34C451E353DD463C49C004C49FF8D3E548F11A0F6F
0D16E21A55057118D14A323A658C7AA0278AAAB1008EA14C35B16ACE0FEC5F1F
F9EDF25848522EB30D7E87AABB4BD7EE634B042DCAEE267FF7493AFE0085368B
44E123C6461241051447E2AEB791CA9E483327732254235E613195BCFA59FCFF
86788DEC96E50F8C0E7AF9877D440ADC5444DA097D2DFD5F05B7840805D9FFB8
1D19B2C2BE0E8B22AC4F3AF3519BDC6EF5CFB38880135923C341451B60DB9C7B
3FD53C015396FDA18A11D2E16FE7CF6053B6461088FAD5BDCF34EF18A5EEC472
CF932599F0601949342666F3F48B9AB78AF0C51708D04105644509D63E908FE8
8DBB0E00567DB6F071E3E62DFC18BBBAB6A7311D2392069BC001A6C2AF5AA531
6DB2F2AB8C12D5BCB0E25F4CB4EA90E8E889ED45FFA15E0F89879FDC289F3250
391D6AC1B9C2B1885791D60F724DFC0C8915874FAEDD9C074009C528E351AC5E
2091B631A942B5B7A6D130C7A38C33DDF5A224B602B23C4A80E4753885C6E374
7460716D19BF4CD067D4808EBFAAC3DBABFBA545EE6EAD1F74114C6EB717735B
B5F7B6887697FA075959FC6463A2685D81DAF987DABF5EDB77582EC76ADD0350
22F38D25E22FCD80BCFE5A1417C470AAF661795AEB91E576244534F891C60AA0
28563CFC1E6BE91874E0DC9780341E85D24D02C603BA14A4B839FD6BEEB9818D
9BB194A32640765818BBACCD6B94F574028D26278417D3496D68A89115AF719A
D2B20047AF5C8CDC1D3B19A487FC3219BB0E29120A814BE876CFCB1E95432082
97ED7E59D3CE0DAA3090D62DF183A3B12AAAC070244ECD6E0B68E798D550D197
FA468E462B1D80E65FB07B26C2FE38322575FDD5C9BDCA7B79DBCC54D5EAE0E1
84BFB2EF968642C2C8EA06608448A1E356EF07BEBEF038D2B43CC68F1103DFEE
93ABBAAB05E6B3A23DDFE99CB43F55B01ED8FF27E7CDC1914E39D53F6B411463
DCE4C668099E9C0B2F6122B5D39F8289C01B411C535587F492F9EAEB65336107
3A0483A1C722E92E755851867BDFA8CE0530A807A5B8AA0FD6DE864B5DC60A24
7AEEC8734A4094644D7D99F4C81812D07D089C3E2ED96247A7C65EC76A3B1859
C12A4C90C6A769D65AD56A34A47EB4D439BC9CD1751EB38E52CFE528C5967F95
79C2E0E3E85830FE5B9116324EB7DD73E35356DD3340A1A536824217CA2A6618
777185A81B3424C80D0F15D091EF17C9C84BD2EEEDDE52749BC43C9E776F769A
8BCC31BEB2FE451580E45A50A8C9BD5B313965D15EED29723B3C1439D93F349E
B426E990DF954ECB3FCA38F9C96E87A49F043D998EDC24E9890F0FE64C9E1F55
BD46A894ECDC591F04B2FFEF80ACA6FD3685029AE42DF44A0C87D3597CBEC127
BEB2481818962B7C91F445D57B61F247B7E575622F88B6E7118C371530FFB849
199807F7E202FBB43146BE0ADB3AA47F8FAF835E7D36FFB167DDD883EB9B4664
2A82628E5CFD5134AD00066DFDB5B1ED30D8D76D355481E992ED1F7BFEB92FBC
1C796C9582A7DD581C2BBD6B1B614F1A74EBD5818CFB0591A81AB9E7C50FF358
74D14FE240A220F872ED372460508D38536601D3E3D89F3DE2058F981C71E64A
8DCBFE6E8EDAA0B5790E9CF06E894A975B8B9628D4C1F837E3857B8C401D44D4
0AFBF49545C2E3526021C3D1F239DE262CA6D8E7B33E1F3542FF6D5D7EC5CACE
E335991F3B01F814823C27C07B84CDEEB6C6B4530A066BEA293613D00BE0D304
426E6692DFA55262FD697368E2BC6CD6ACE04988D91AD731DF6A8849D45F3E0A
9A3CFFCA0260B8FFA05345A1FF5E768F95FDF35017AE766E692BF8A77B7CBFD9
F39A291C62EE6DB7D8FBD0DE9CE4D63B2571B7EAC4CB9061FBEEEB1F3F3E33EC
7B4637CFC135C7F538768C7EE1EDF53DEEA80074ED80E38E9F6DE89BB921B0F3
B48360E40D7BFC8005324F452EC58ADBAC32130F2F6412A03DEC7154CAFE2AA9
597014D3D0F006D9E5A18BCF48A4496CA88E94D49417D3D36BBEEA72B0944D75
49AA0F4C3BE3DE4699C17A16CDBEA8CC630AACFC3ADB1C61287E6CAFAC7DB9C9
2A204DBB384AD2473203871BCD48FCA6E6B8C33D863404F60FD037D21615CA06
E7EB2C6C2A3DB80FB7136D499CE919301808E2BD18135EEBE4101ECDE107DFAD
7363C501FD1EF90B6F02F40C5D140426E16CC228809EF2B3373E04A3DA3390F7
5E42918DFF1DDD2AA7E4740FE3066A49AE243101A491CA0BA101CE79062FEBEF
61810CDD87250A9B459CBDE9086B6C72F36327C0B08DD7A4C3901B5C4B163318
AB89EAF11FDDCB28C2F1D75BB0E8F903E81309654B21E85071B9F5B2B837BCBE
64D1BCEE5C3B97A4C458AE5B93150C1475A7466E68B40ACE2B06BDA82389021A
BBAC43C99978A328E17B61D3C4DCBE671137E6D10F52CE122FF388AC43A642A3
0FD531346CD73F2EA3134DF4EDB8672F5AFDC9D5900EF34D4A3060D051546C95
D120995222F149F0AD8E9C3CC03FFCA84DCDE6840C0BEC8DE1156F3CE149A6DD
41DB395FC95350F9E082DBA8C242130203DD05E9326B8C72DE68CF2B304C5722
A98F3EF5959D4B3E22E2E3F70A1B9A80B31837E45796145180E1971AAE997E43
F8775FC74B31D93283449C63A9553B263DCBC53FBF3B5418552D0D00FD61F994
7A91DC9D98473D5050D4644C344F830EF4DD937522CD06D58CF6B5B631A2743B
0339437757216CB75F89EAAE046697146DDC5A9E368167ED84D10E9C8A80567B
91A192F73B22FE0984D0E68B617AC50A5475488D056DBB49AAA858E8FF165C54
07AEA0220228E7AA6C99350392CCB1173545E3E58B0048E9EDE837EF2F8FA83F
D7C48C81972DE656A0158E6064537FB9E1307411EFE217F0ACC84ED8C46E7F7F
782C09F0C07BA7F2FCDFAEEC0CB100D1967A81392A19F9101C82E5E9F03BC844
04097C792F21595AC14C0C2A9D2CF5FC2A5A8ABAFA2546F28028BB45683CF10A
376C70E807C9AA1015A6CF774677AF2D4374845B2905D4EFB69720C126CCDCA2
C603C4134A6BF959B1DF99AEF569DE0BD2745C9C87D814B6256287D833D2FC2E
A62DF6BF0EE27729250F9CEB8952D66AB67756D65C059DDA085178BF48BB96DC
437FD1AB83F5E8075A3C4FBDD32E1B5ADADD88D84ACB1D4C2C8B188C106B1BD0
80D0658477A330549941D8200E80F2212513BA259E49FC3FA025841E18758AEA
366498F4E0D42F8A37E4CB06D3401F6528DDAB07B3A04E3B54D78E4A2D00EA90
85DCEF596114FE93E9CEA36DC5B004914034A406BE99EDA85EE23BEC04BACF6C
C7E34396D4D1DC40C3CCD887B159CFF313F56F094F817261DF9991ED1063B7A0
C9F04B4D57FAEDB5186F3BD1D4C4E51515CFD810ACF590DC652050336E5BD7A6
41F4263EF925DC50118EF0A0A27AEDC0903D538FBCDFE5A4300EFA533D0F2E40
DE35D47A67096D28A97FDC0F821F880A8AFC03E84B82D7F786732AA7BB3567F7
F85F4A8A5D45ADFE6AFF8C1C842A1B029F49FBC02C3FB731CC44F1C8450FE167
F47C04767BDE09C231628AC03AC4596CBB282289B59881C412851540DEC82806
C82A0CF1393F5BA85AACDCB292171FBED63D4448511BEE27AC119A6ADF09EBBC
9191553DB5CC568EE93DDEC2BA94A9B3CC15FDB927D44E0FEBD0F97F4CC605C2
9274A20DD6FB2FA7C7277E43EEEC89E925EE03636DA5A32940F395AF17C0E4C9
434B09CEFE314A7064FEF5C115BF181119E853728590258F777317E81A929364
3EF47EBDC971EB98E767197D5C76B1DFE01221FF08496DD9716620DBF4292789
68BBEB9068E2788A9010725D44514D3F68A47540131C27C51EDCD563C77E5397
5ADE810E1209A231BAE068E3E4ECE3655620B6688B523112F90CC42990D2B8F7
ACC14F638884B5274D183E05251DBF4A377EA0518A106B1CA1F5EE0E7EC8E084
65CEF39DB51472E78AE08C5B5C2EB02A5E03143E26D94342AA7611F7433BACB8
2295CE3112DA20C8027A436EDDD043423FB42FAAA82F6036F975043ED3E989BD
8C582F57491A1BDEE8F1B8E5AF0A2927D868EB25619EAB615BD54E9595988A4A
C7AF030FE92AD020DC0BB71D669801635A5019FD64B594E3EE808B530E66AE4D
F0E3EAB8ED97560441C5FB77B06CDE13E80C5A3C86B4B046C47983C78A3F138C
F99B1079DA2171B4A993631F8A1AF5B215D22F984C2E76C2059985C60B0279E9
63692C0443CA37ADD049361807ABA79605D6AC557F26F9DCCFF616806B96D688
16724E5C645BD215A633788EFC0CDDAD63AFA93F2C8713C05EDC335D5F545670
9FEC1A4B847D84F343B1202CD463BAFB2B7FAA6EE1AFF0C658B8E98278BA66FD
5010116846CF101ED37C2E87BAE521F249D619531274113137F8BA7F0C7FD6B9
628D16FD606A8B87E87717F25D923C32B527972D260BC4DD0752BD5AB2D06C91
AD7D30EA6A12D1E00539E10E4BC92CB205E307BB4F3CBF125546BB35C76ADEB1
2982B2E60F34C327465F76DD1FE8FC30B8F5DCF3E209C6CDA7130C9BB4E98546
68CDD159B28DD5BD2523A707526B6F8D40DAF791B17C0AF76B78D26FBF43C06A
B9D8F98171A27C5FFD8B248D4B6C0C2A988201E495968EA9B34550B251194E17
48B388D399F0E223175AD591D767D1BDFD49F381A105DBD9DFD3754E8E770533
8504A843DC17AE20780FE0B28FA3DA9F1D9698D11BF37E29B87F5550CF4F1DB0
BD45500E034DD8A60BF725EF646E13C810985F872351189A2E22DD5002E34739
74FCFF38260C227E1852BE4AC3A6FD800D7EBB6764F2F1D32172023C5A297703
A6699648A5FA000792B4F23433A4DBB1D6493D2533F02899CE5C4F64B67B8893
6468E8DFBDD6C2EBCE75FBD2E8CB8B3D7D3D7983D57AF1438E86609EDF467A92
EABBA576D30C4A03CDBAA5216ED30370BDE8ADC67597C75D20042CD4C3E7109C
7AF5C7ABEFED53E490264C3611E4B116E54B1004A37F1D59184C49C62ED7B323
C3E22A40C04AF91367BD91927745626B11A4530BC57205368C47882F1320C78A
F117735A925AA213BF589A8ED33ACC12F57A1996C33DC366B8CBF143B886E7BC
1F33F968440511122179DAB3AA263BD729802A7AE7E3CF9AEE3F2E133840E1F1
D9F047F806C7DE896225844BA9E0C3F51C441603A519B06E2D1263EDB0D6791E
A1F238931ADD8FF3DE43D1E7609F56262FBDEAF210527E93148D26AC443D4718
DD23AE4D917D680B059AD79B191F5D782CEE87A7B19A85D0D845AB4D9D7EE80C
CA89B1A8D20E5F78A1F53D8AF311CD0F8CABC877243D39659CBDBDE02FE37F97
0484F3F3A95F6A8EAFDDD502419E4AD09163B829F82F1499FFD4E263DFEFA90E
4725F00F42DEE009D725BFCE62CEC30E89E7710A46316DFDC8922B22B20F24BF
1743D03132976D6FE810EE3B46A972F5713545B79D26D819778269CE723B7987
3E4E9A7C6CEE551DBCCEF780565A5D02A4A3E8FA015D2651C7A66154764FC44B
0E78126FBD6138F046083235401A2DF61A589155F17948BA05BE25B5B4645127
B39C5AE0418432D73E1E89671BC88785E5463816A0AD2AAD4ECD0EE06B3244FD
85D49C191B1CE1B1F09E0ACE4000E6F860A85BCB980D9F64F0729A5A3D8C655C
10404090E6B992EBE5336CFF9542072F7E3582C016A302171C2B908F0FD1EEB9
0DA080C14A5B4FC8F58DA5AB892E1A1EFA71CE2B94DABB4A489FBECD7ACE8857
34BA1460914818C6D5DC6CACCD1E903BA44CADB139FEFA8C3703114D478556A8
2322002142210B0F153BDBAAEE08CBFDFECDF4B378899DCE77E8B979F0480945
8AB1680F875C1AC21F1546A7323C6C6530EC50969D7DCF92F3B9EAEDBEBEA10B
B3F993D9EA23A75753EC8D0F0834DE035B01BBDF32DB1020DA12E01A812C21E1
F7E47B7C38271B70B05A73CA2F73345E17F5E460981655D3A2172D5D28E6EC58
8BD1DBF85CDC63E0B5E98D1EFB82B1D795BED5DC70FC45FAA75C597247DCD946
79EF071FDEB13E93ECA4058CE602ADF1B883E333831214E428A455F8E28EE575
A7D8BE1BE11CC9D8C1DC2F1C2B9F41EC1B43EE3C913BB2224EC4CBF317BD2274
9CBEE17B1B9695F50A89665E304B3CB44D3560485C34D129033FA44E3BCE4FAB
A81390FBDE3609CDC5AA8B86C083470CC714EE242660C4C53280D008A68A5279
EBB0E34DF85D3CCDE54E5F5C16232B14B0E50344C9C5A3F43FBD64C66A106F73
28026B5A6D8819D309469394F38EA93967C2299AD2D5ABBB9EDDC412F9799609
5547F918A9279E1A55A8BA5ABA8ED7A0AB9B3DCD40279A943C136FDFE8C8FB40
555F961E1AC031CFB11E6A98573640ED536383FC5532355C78FE440CA69F6206
59E300C9A31A47847663B0BBBB51A5F2BE86FF2A49B4828145CA60C909D7EFB7
069328E9E772E9854373342EC183D796C43DD921D2F1E4FA7381A9A37DF111A1
5EDBD55E5F3DF9E4F01C5E2CA8C8928CFF699E199A2686DC0CFD68BEBB6CD0C6
AF066ADE509A7139790D3E80EC34169392CA6E81407B05339718FA996360CFE0
E3E7ED5D0CA7BF3DF7C6E9E5535E43CDCD556BA10C877CF5F622C72467578249
727FF31E0F5B4E431EB2EBE828E04B4180C3F7B077B29419970AC528BF9C5A00
DE0D531D69961D007157FA859728E044932D455CAE3388D1E3E2B9B24F098E27
8A494D8B33AC61F46ABBFC04FAC4ECF5FA5FBD13185C41144700D386CDD3F018
DF904B127DEF9CE701081A05EB0F766E4DFC3C17A11634D1653B342B5A63C42E
1142BD48A2D7D38947D4E8301A575411DE76F7F46F3370AD65B2BA8B3C5D5961
C3E4223B8BE850775CAE16A6D7AA9EFA535C84AECE0398B5064C249A542C9AA1
198BD918B6BE1A84C85C2F4E5ED9EEFAD8E506CA945C9DBD3119DE3D32EC18A4
0BE2630B734C0E09D7DEC29ABB7387F9BDDEFA84C22F0D0C680C094917DDD1EE
1F53FFEC5A9AF85E888A67745AEC04334FADC96B8A6C7E2DA5F5A5CE192851A7
34C8C69B97CBA5A20659E935A930650398BD4D8BE13A9C1C04AE8311D31D103F
0BEE8C1D2E8CFACE53A31C2F812F6E330004C083AF8837EE117FB8A8A7624348
D1D02A58ADCE650591313FB79DD103D6952D7102BC80A2C2284E39D0746D4D86
F721084B39114580BB0EE9115F90B57D05E735DC1B13960A01115E306EB9E666
411AD943361D97048372C48B1971FC1ABF6045D5CE90DE0A127353DB1ED76F51
B9493F38B4FBCCDC800C919FC657A9F2949FF4BABE78E82D26114E5D2D96C282
C23C694D90ED4353CEC156A8859E59D9D61B3A6D01AEFA61E0EBF3022578E227
25D0FD026980155E8AE4741CD726779549E4111DDD489D90BA6AF997426A4DB8
CE041DEEC7E4378A34C49EF616C446D1519B44C84BF781220F93130A482A3F2E
A80EEDAB69FA73518C543843ADD9C45137166A05DA9658AA236A7354277CF9FE
8407F5D54C8387471678BE9CBEC5963163108EF39840896AEC6AFAFE0D354065
59E6EAB2E5CB8E079F3CABF47426391A1450DB11376F448A11284BFB2F9B1B87
F62CBA68145943B28404E11ECA0A39EE2F8602B2285066D018073AC376E9290C
03EB455453BB1645F3F0688BD93FB93E44D40F7D807840C55760F24FFABBFF89
2E3E7EC8241443C98E559DAB50CC11BFB57ACE6D87477A95949A7EC45065E8E6
C7E1251968E82504269EDF72EB2C3205943A3A30BBED6A22CBC722094CB5BB7B
33C46335F48BC3B4F631EFFD94444491CB58F745037A507B8D1FBD094D9722A9
332F5233467C85D8BD4723AF445CF5BDB0C2662CDAC84B68E93A2828EBD9CE79
9641DF7CB5AF1151B0D72503D13CA8F6CCFC87534F2778C4B93CA5A5CF18E317
80CC627A567926BBE9779BEE3CBBA2D6AC424D70B6C951FCA9EA8C38813D354C
91EE23E4A88475813047704ACED7ABCC568062C20C8393D58F5498DA3F21D32F
43B08E866FC9E6269C4FD641C2B805B99EC0402018E0250F46E2DC3162AF7C2C
9756125A6186A3DABD5B64E7051F7FCEC5F86B77CF0B5A0382947EB302E1F179
BC9F175EAC5064622742B3C0FA77024FF7B28815E6281939BCCFBF3736374C5D
4C4257642D5F3CE4095281DA4B35A6198CFD63D8C3D791DF2709B7F34EB045C4
AC5812BDA9C0538A5EEEDC04AEE329AF07B254A482E844B2330F100B70953B2D
6C5CFEE6A23ED9028D86AD09388E895C4C3954BF45886BF3B14E90D54E0A6866
7E08828DE2344BE7B95CB4E06E78A066F78E4A618BA86AB0B14932DE91924247
F048F5B344C0F1B2EEFB9E877E260AAB28E8EA2205EFDB90EFE529A728CF2ACC
1A36DAFC1E80B8B4AE6056AFB815D22F2B9D2D5B2BCA64D526C780BDC02CA759
D31603B960F55443DF7D52F0F214F75EB4F7BF6F71E08C10B971E454DCF6AAF6
9B50B724D3FF9B4F9CFC0BC8355CD7E43B411064C87DC0D7241EDA02683C241F
C4F2AB567F116527D01E13C01AA98996A2C66F8CE700F017315766AFDDFB0E3E
496C6674604E29FEB42976DC73C30BF9C899937FF84B9735B32BBBCD12A2EDDC
9E06301E451492E8F0965135F5375EAEECA6732F4EF3C5F2FF19FE2C8AFC4E7F
A6AC3133CB06123ADF4A357D2BBE73BDA997D23A0D0E1F54AB2E225D60E95848
F29B7F3C7FA842B46C51A1340338BE3A3F88915EB26B9F90141CEAC69960014A
3787C661CC526D56B82940DEE88AB14A8867081B3ADDE78CB4D4342C23BD20E9
B1763804388FCE5B937D67C914A9F684CEC42A135BDFC83E56BFF7C986FE9C21
28B3EC7E16004B163A2C0B7C6C63155A9E982CBE55052B09218B0EFA353CE997
ADAD8003C7774AA396665BD0ED1B8DED6C9F39E5C32B051A2338E3F6358E6040
6FF16B522ED4AFBA40440F8A4AF0CD223FAB5291A10503EE4F9AE237645A5C91
8A44D1F0EC76C99997EDC7BBA669CDECE97F063A7FDB746D92855FD9F071E2C3
0BA2B60BE4C8D49B8CF604B7E71D99E51271B4EA7548582534EE757F37626289
14F93C682E78EC5DA20B597470801DD4CD66D8528859C65776B562D832FDA548
83A6DAA3613866C418C4C962501E20FF5F01457EDEBCC4888BDBDF23CE661D93
6E23BA23C4976F6E90EFE43F9D6F40F2FFA9C06246A7F380CF33489A6B3C86A5
FE6FD4241DD3DC3F8345464B81D94850DBC42662D28EB0DBAFA9D692C49CB015
44E2BE3EC33707430E2EB020087D3FEEC32ADD10E579E56C5D4EAEFA110A16B2
3386EE27FEC23F484CAACFC4D6FF0E09FE2D3EA213AFE5D7EA29C044AA1FE3FB
7A43851E881F7EC9CDCAF9D59B1BCC084C44FF677FFE961A0C181A8179BBC032
97397929F0B5C70D95A6D70B7F0C9897651EC70223475C6A22CB60A28730EB35
78264201B2B9263E2A3FD12F762AA00824C9D54E919757D7FFAB95D57221B3C3
36EA8DD3EA76AFC08420048D4E8248EE5AD3D7F60140D422ECBE2C014447C499
7C180B7DC6A70F327B3411A63D1FE97894A403D6B0E6736FE92124F1244DF670
A3DAD23CFA0D18772797BF7B117D45DC99EAC1871E88E31ECE3FF759434F7AD3
FF2198E23EC252BBDAD0AF2AC29B3643CF429B553E5A1139001FC70A68696347
96A114D18497112011BAE3123EF88C97F67467116A7370BB3BAD7AA24DC5983B
AC9C3F71CF90893B2F79E3342807573F41D1FD9C0F352D16E07E6F4F0FF1C3C5
03B3E5C0F223FEF0249D817043A2CA755A4590FE26444753140778E4A23A62B2
344F1C2DD95BCD2D4083A5ECBE88B104750175BFCA03F2EEEBBE4F8ED3AAA3FD
4C5781842022B259151F45DC63C273A1665B5F3A1677E45CF36D9FF299B8AFBB
08B0DA692D30B11DF07ECEA29C011FE2B4F53025B24CFF5F4267FA707C6BA4E9
5629C5B59F3AEDBE1F5CFC5B32B3D77257C10AA4F3F2EA93D4F3ED9337625B1F
FC8FC1F283219104B21BD0B6CA6F9B2BFC23301BAFBC972E567DBF47DB719732
E777CAF65FE7738B2254E3E6B7BAC545A6869B14B76BFA5E5377E13AA718D8CE
4EF029028394A97407DEED68CE9E11ADF5BB1382FAEC0942E07C87E89F2EBC2D
2DABBE3ED4F3FA84AC6C2BAE7169449C92BD53DF330A53F0D37D53E7111A9FAC
E6C863FA4A8CCE9CED77AC93768741C31F0E7916D0C246348AE997B7D68A1EC8
9FDECA32682392C66B3A33D8905E5A7C126DFE64869D8F737F60B93CE2946525
0CDE484D36D200ABEDBA0E6AF87E522675D24FA4044BB06A6BB037F89DA8281C
6B507C3F96DC2A6583E4967A4BE69F2D0DADCC5F980896600428E851056D0746
6C03199E6C2366E849F6BF43A6F32640E00B8208E5F724E1694082B4F1A70CB0
A2EBBE26C75F04ECB7B4A6C2C297C84918947D5AE47B115726630A2D798A5B11
E7EB57C30AB4C383B18DAFCC8F7C43BBCCC5C6023B569A16182B1E98360570AD
AF01435761E0836B69A06CABAC75EEF9413B15A34C107EF1A48CD87BAB5C062B
28E391C77C087F765E31D0B2AA8EFC89B0521A899F7E8DA11EAD68E94BB90D32
FA9C3EC75C88EF39923BF1485BC77E8AC9E1D137F46F156D7BD3F054247CA31B
FB0893D2745525869372C1837B95F5BAD405A361D45B9B04BF09995FDE4983DF
AD9FD9EBAA2A28B9000EE275EABCB2315348D6737F78289C21FE5E088CF8BA7B
7A42311BB769A223E305736913B642D4E9A784669B4AF927476EFFC1652CF233
0352CCC50EB09B12AE0B3FA4356BAFA3C4015C2506D0516F35D1AA7FE5BAE579
FB852DC95D611C70CAD69D25F1E8D7B326BCAD21A297A9900D458DAC71ADB0FA
42B7CFA5B9BFE0BE4FFF270FFF1087BCB1D435ABD35DE44E706AFB24DC84DB20
882197FE73A8F8B0D2DB31014776BC582BC3AC5973CA35E90F837971FD5A03C2
FB6602BAA1FE03F557725A50570F2471C35066A585CBEB0C4C3594821C712592
56C4F6B414CB2BE929A95C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 18 /grave put
dup 49 /one put
dup 50 /two put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 122 /z put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueID 5000769 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE291DD4A5
757C184ECF75F70F3D1A0FA7662D4B5EC6A0B846E6F3B971818E7B299F2B40C4
0AB266C3FF1CCE637153C51865D15E19F4DBB773FDAD87F28C3B655B85DBFBA7
307EE7833122E80641652EDEC6A6C737B5CE7EBCA715659556B9B352455691FB
A7956DCBF229F970A8E87CA1F6724BADBCCE31C693C837EE7725DF32F2CEC78E
DD42DFE2469298D41DC1CF39B9DC20E02E9AFC4B4FC9883F8E24D5B90160937D
3A03929E9C37939DEA4355604DFA3AD28054415B067C8E64C0E0862366A131BD
40BD5369F8B112C0E4E045B31316108C5E0256ED77C54F998AAAB849826A8C6E
DDA1459B4BA57FC03BCAA2D272F723935E0B4D31992E1C76A452139903C71A41
6B2D49AA8DC9CF85A53A6D8192A5A5FBADAB2ADCA2C0B1340AF918DCCCEBCC40
1CF7BC4CAC0D42B6AB11330E374E17D90626188B2C706232E9C926A4E1958651
9BDE30D8E7179AB31C704952056165BF543E267FE64A26232649148650317CAE
8551136DA765309B0D22C7258A2CBE86BD3A7A537608C50EFFF91DFDF351B319
61C0A36967359F5D07340CE1826ECD3E1233534CB9318CD91117AB3F4B9E0670
8E9F358848D206B84773AE88137597D5005BA96964BB805C56A075CFE060E641
46B1A9B196CC02FAB30F1A63A3DFCAF3422A039E98D210F454F8C2C291EB3BC7
B00DD9E8FF68FD5BFF6E088477C0F97DA6DFFC066867BD70491509B0162C658F
4BA8244704B4D38F8CF6EFC9E1B85A53D02D699CB4CFD586A6F7C1E4851DEAD7
24EA920676D72CE439277A8FB8630D5A5AFE4801906D463BBFDB57BC254CC696
80C369714591B37AAD85C804E966ECAD77AE5450C221DB9E7F814976157DCA65
FAD55620437FDB652BC2AA813596647AAF6B637044F4ECE78F22682F13CC4C73
6CF2F96C15E57282127CF12720146558E6C2F0A631EBB4D86D7DD9B7514F13EB
34972ABBE8452781D399F941A18CDAFAF37AC9486E761978AA565E1947A1C796
098EE35B8CFFD8B8EC0DA330594A10736C311ED37377C56429D4AC8FBB5AF579
9F1522CD543FF47724DE2C7DC62E5B73D1801153B951886C2EC45B5142A5445A
CA4294CAE9F43D8D96F455BC1F552A72FD08DDBEF3FA6FA4DF08C0C3386C3913
C7A17FF281C8C4D0650F02D36E4835BB19422C5A6D4D672D130C596111ED0633
4290C4FF511C0BCED0BE6DD59081E4B512B78F6AFE285D91AD9F31D72AA7F521
D7F65F5D0A0071C81CA99D1800711712CB7CD67475D4221133061CC3D5E69EDC
0FDCF8338821A644231CA98D0D7A426C7934DA14C156B0A244C7E0B32FF9B3D6
EE5C176760B952CAE9D819BE72DB4246A1358F1AAFAF4357BC27F71AEACA1914
F1848F295BD47D3423839DA1554E92B56C14CA40E35F70EB387FDB256E84F110
ED2E8EDED727543E9C38A75D3B98293BF80B6952FACB2CACBFB80E324A94E42D
CB9B6EB10420B236F113650BFCC285E13027F29D79F43195039EEBE882FAB5DC
397902A1F2008E6D5AFC8A5F89FD9DF13B32A1EDD6F77A5D64229C1FAF941345
E571BB252A540E8945E6807B7D2A3C7C890FF9B3ADBE55B90CB4388B72CA4039
B224177D9ACC137A910836F63386CD357FB0F302412745C90D48902C93E5F650
6CC9730B476652D1DDC4EEE3769478F1A06EC2CB65BC9E42225470AECD0B48C8
A6F54A8FE719A329168B32D0808AC7096F4428A1ED21D62F6E5C2669E8C813C9
23EE5215E32BDCAF96EF19AF8442B5CA9B9BC44214D127C767CEDA4BE7938CCA
6C5289396FBAC7B7EB0AB7BA1AA69785BD37C0EDFF3CA0E69E07A436A78B4F45
6CBE1F7B1877226AD7F0E3823987161B8FC9A7D8AD5826755C60FE373C7206A8
8D42CAF4031841C9D3E00BEC68051C3060B429D08BBF4819AE34EBB5ED1C5566
3E414FFC3E0C2FF0CBA186563D5FE97CBFB4014B44265C6C7E6EB2CB56214422
C83486F51C2B4A7D95256348DA7523D6E0073C984B53C283ABC6691653DBFAB4
B214802ED65A927E218BF4DB05F27B35C3C4817EF1DBE8452F756B059D959A62
7B31F8674D8377818E9A47ABF99AA9460BCCD978FD4842A0BB7D5972C4CBCD7C
5DA87226EBCF517C9B82F2C571B7D18E9E54C8CE9FB711BE82AE0CB223F3B0E9
FA873C12ADDF5D04EF84C7B775C7989FF7297F9E25B98AB9E305E84E74773E30
2DD9E9C7FEC4EA97CC35BDA48F7A4259A7DA3F8EB09DCF028BB3675FA5B161D8
4A10B8D5703C0D75FFA50431F79D84617266CAEB754055D9145934972BA63F57
50A06AAC1A5C046C2CC07BFF509C0BC8985131D82005909AD864BE6F4E37DFE5
D3B358E28110117099AC6113CDDEDAEDE3DDFF2E256B5E6F04BDA38DE544B944
2478C8F3E857C0794E680BA562BF9A9281EF450E9E464FDFE7D2082A811BDC26
465E28AAAE909726C55D378152BC78E8ED4C575C5B8F14673B7F6AA6EAEF9E67
327D6B33412FB148C10F34CAA0C40EA9B17416882E9C2F25D873955A90AFA322
4D013E38418B728A57E54C7B1B1858D9CE104BA0177E62E3F32170E921EAB165
5CC2BDBDA0B31C1272FCCC97DA2E8DA057B9709A2782999303EDBBED5F60ACBE
9687C216F94347FE7A3501144C26FB4C8E9F09E18DBBAC844E1B60C6C57C13E6
0DF461AB6F417C896646C506644C3EF1F240C47EDA5E3045018FF9EF2A8313B5
FA00D964ECD1A7DCA7F9E5D47631A8F86A6B88DBEC5C749F64C95D88BA38B05A
4DA012AB0BA0559B5BC0A85D6A9CE8331BB427D0A4A0191A1783B347B7843358
032E03F2DE5863B6F469D5F4865EA8C8CAF919F4F3778C96DF2DC85021F3166D
6588708754D77F0DEA2E3B285D5D29EC9A277697D49055BC0172C04CEA125362
0934C2E398A5F9B1EBD26D16B02ACE16B1806C8414E05957FCC7150D8EC706DA
E1C0E42F21CEF3A0C821A4465A5CBB149A7112693D2B4D846A8048C553606AFD
1150B461DD3DE117C8116727652D981F9AEC4ED22A257A51C78855B153EB4904
FCF271CDB556725F5E49EB5AEB0A9546A91AF121CBB22FBCBED05CAAB45DF4F0
0C2B68A67E341741215E5899F99853BE6633FBCA376291E61C147D75B2384D4D
6DB40B1DD0F1C705944576CC69694E177DBCBC928845414D87260DC6344F58E3
7D738A61C942E349445C220C5C3F4EAEAC1F6A95B239C84BBC0C62B5CBAAC8E9
8718CA28E0E8869C2E2C9122F84C0598F4EFDBE97E3A45023EA1585F1F7779CC
3DE44546D98B5AD9241DEC30B28B284E522EE8EB02F3E21193AB6CFE5A3269B3
8C5CFBA1F0E8EA09557369E098A9EBFD928E61566CE428E62CCD7D06C3EE548F
A451621EB3AD83F25CF73145A172ACD51D9BF6ECF251141E14CB9776B6C2D39D
D79438F91144F4726C0F8CD235ED121A252AFABFD5262666B01B5B8FA9B0E2FC
589C8B6179606512FFB4E00BD75E0EF41377C4E4CB3E64892FBDA3FCA3BC2B1C
06ACFED0C925F8E72B6AD6C6B0672F89D91863FFA036963C69F3B7692EE1DBBB
F0E34858D6D06B125A7EAB38EA49E3BC94E5770A0E3BB9D0F2599C720056733A
318F6EF2BAF87DFE507E2106669EDC24E740F25355AA463F211AB6974150CA7B
AA986DE6A90214071F1AB40FEC90BA9BDFBF8CD353A92BD95DC1148ACBB788AD
15F6D382EDFAE82E15930FCD23FF55867C1ADC2772459D2CFA9A3F8526C87F58
33C2C69F48D4E7CA9CE2E73D877194F90AC35196A044FD998A06BD7374122615
AF78DE93E6E31E9CFEE82B11BC43D532506131FC2B19A87288200505C01B17D3
F661263BB90B2264C0A33D8463A7C7B50033D6E8D8C47F8F22DED7D7B2385FE6
033F3A517C3FF0808F53B0344BEAC17C1183AA643A93DDCD98C0E20201A8832D
6831AC04345D63D8B3624F2821F4D950A6CB531C30112D2AF38C7A7B7A61A08C
EDCE7C5C777F52792F8B4BC76F1D4EE8CFAE9317159D605C728598E0C75E5817
C1F8164A7189E44A01B7E6136BCE9D8FA93B59B9A3319F7584937310BA307B9B
60A403F20BFBD4B673F1D06BA2549F6F885BCECB36E15EC6994EB16D9CB6753D
E763F7C0C61DBF8100DB3591863CDEC747957C7E2A724C5DAAD72609547E78BE
769ACCB5078A5CDFF704233003A3150282F71C09BDF2FBE8AEC07B371CD4378A
6C2F5678160569A02B9D5EB5F2B1C1D34038848D482BD69DE82C139664D94ADB
ED3F1C1C042B60B713826C3A91A4A6EE556D747C13490F3D43FC97FDAEBC9FD5
6E1F6D3AAB47BE30A5C2DD1B6368A73E92BB834CECB89CBC27C1F26FA235EF98
1AD4A5A9D70B84350184D10E293366EDAB8F1F5A2BF70C114499A15358B9C630
8E26CF31FE467C087775E1B6841B57D11EB044C3D3BA6263983605D85C943949
1B6CE59A08C02C80EF935EBD2BC6BFC48E30D2543C852B77267849F05C542115
6A5FA2212C2A87327421DE0A116C02775E35AF39FBD75B0A23289E965C2E13BE
84AD366F163BA91A48F1C7D6FC839E69F4F3D462DC50AF34DD3D222FD447DBC7
81B1D1B462E931C4975171E98C3B38B11C1BB8B7451428B9B2F2FF5DD3668105
708D387CE2F746A87E1583030C8DE12627686ED10F2C865863E9ECE2DF70F184
E38BF571A2840BD00A77D1B8E083517ACDBCC24A7F9A67C90DC3DE09060C5E3E
F7E651725BC64D956602E23F843A6DA249FCBB8472F14D09EF9DF38D35D26849
3222E240B77C2EF0CCDC1EF410EBF14951FD9164DB5C5CE4912FD9FE7767BD19
7B8C1CC20F04D9D2575BAD14D0A30F5BA7DD72E08FE3C747156DBEE5E46DC2FF
2A60CBB508525139D806F542DE69594FFF16CAE68894B0FEB2DD74D822E29878
30C36A242C14BCE2F0A3E5D1456DBD822F4CBCA5AA876C77DBC8248EEBB0CB3C
CE6CAFBA687E1F6266F052008EBED9CA720303B443A4457AC485E0F3AFF62E7A
0FD0B7F7095C04AB6564A337446F16865459A14DE847D5C27E40298CFEA13044
1C15A629986E952407151004DD4011E144FCB405A012FF440761B741FFE242FE
75DA8C4C8DFA535993B65ED63E37E102F66F78256905633CD157071E6FDF083F
9A373FE175947A6ABF7FD282BDC6D2508E7CAC08EE72B69C062A3AE1E76DC7A1
02F49210635B0BD6F030C386369FE2AD972335F239E70D3037E8803FD79C5263
C1DB88B371878CE721E3F81C4640C4942B27482194584C21787262E875BE2803
7608F414FB214812C55033273288CAD5F5EB091E32B1FA6FDB6893644776462E
0504B57D66ADA9D8CCEE27479E7AA35FC780D9ED51D7B4B9171C5E1AC466E6C9
665D519C029E64C9A76E6F30E2C6B70E3FBA1214BFBE0B2D86EBC7FA9FCB4BA1
F699D0369DB67B3E868AB9F0884A3BC2B77630CCAB936B946D5A207D4A6F7424
D303DCFBF7727AE488EC296061856F33C4AAE4D7A0EEAC3490D2598AE892BA5B
843793ABD2D315F205939BA682F2A86467E81C949CEBA4D113961F8351422C72
27E935B0C207A2BB167F9E967F8EF33764A2FAB44AD944F192341593AD4639B9
69255269A65D51B0BDE0C503BB3485389343FEFE06109E95CE03098CCE25D0F2
5BB1501EC5D60FA784F7BCA20DFB0FF1C4D8EA77AAF149B615FE30225D9C95B8
27E27AA348A186E60E0CA224D40738AFAD740FCFD10B5D4422A551D268BBAD90
A81669607F0918DFF00204E8190E5E338F1B0DE5F7766389755E8D05810B71F9
C11B32A677033FA5612DB842D6995D0085F0CD7C3642DEFFEE781598EDB9020D
A1F2ACC531DB7BDF0748008CDFF1379723F3ADAACADEF5CBACD003BBDFD2B9D4
D8620A8A245D4AB8AE4AA5B258194AE8112A8B8A7C9C69355174F5991F3B476A
57FD47206574FDCA6EB1214CB90B41F2754CA54E2C2385B8D49712F7E9DD3855
6A915A1978C9F5FD701E556931BE3DE43333A4A5B3ED6A64A51886D037F7A4F0
FA2D57862C68430D7E0DF83EF4CA4A639E0F221F1230B9DCF28D70445E99A855
E17D07C6671C20BB46418B1FE6E38A03D5CED0AE671BD043BC47D0EBC3B4BC3C
7CD88AAE80E6D015C66DA29836F89C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 18 /grave put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 81 /Q put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 90 /Z put
dup 92 /quotedblleft put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 122 /z put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueID 5000794 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671C9B689298FD0
3F95166B5E887CC150EC18D5FEBBD4AAB13D2981E47337BBDA31A03E8E2DF945
745F9D82E94AB8F96B5B0E49B8BD2FADAE01A68C8A87F7F2FBF5FF9A8D3AE6CB
ECF24922CE6C24336E8899798039710C1A1A420F5435B2541888F5874AB3E711
06D38CF63248EA7DEF7C0D2CE0C27F337DE1D46E408099C93A2D440002EC2D18
290EDADC8910C312618EEBA1810EB3C2A2ACF245F6B5B76841D3EB1F222F9462
7EAA79B2AE59C427D70C23B39738EABE309776F21589A9575A4E2E53257861C5
22FB99CECBCF5EB5E21724F9C0D6D28D71C5BE63A5A4235207E605E4F87693E3
F45CC018DB49E3C9EB46C942F41101DF9B29C9FECE0E26AF0FB7632650D1E5F5
4643555A0356D2D228B3ED60BBA0AFE81CD2D1C0DAD2E3BE2E40EE1D834A63FE
A8B3D60C73EED063557E265F2B52B25B7629CF2C8AC1D4268B6D3CF3DEC4B278
A0E83B71789757A325F69DAEE887CD68324BD8B183F6799BD90A67E87F78FE35
43560DBCAA0A11C2E8FE7A2A6FC285A4B9848595D245D90D5FEBAC573BD62AFA
0B03EC1AF6987FF260E785A6EC53D51114A5B77FB00091FE964C0EC6BA193AD4
6F39CFCC8A0CDB53284AD741DB06B5FC5A6A765F7F0DA982FC40921EF1466F1E
C081E6B605F523660CB12E66445EA4A59AFFE5E9C18EF3919F881ACEB80B8C2A
039257F6BD09FCE9186A50C860B04466D67686848B50978AFB7F0E0F456BCDE7
3ED7523C750CCF22C840069AF23F9E2D915F062F52431FD4F957D852FE7D3393
5C1D3F8BABAAA33AB690331093EEEC793F2F1209027EDD3836F336EAD955B20E
0C2BD3595EB2FE1D5312A1438723118139C3059A84A86E5B65A00FC8DC7DFFCF
B7ECEE5220FD03BD621C10A57B7F7FB8A40A833301DED8FA51D68EC6821EED6B
D00E5B371C243B48F5BED726C868A9B95592033EBB01AFFA8CAF14F0C76EAD39
B149BE45082186E9F03EC024D275DFA545F750B19AC45292A17DCB2E49D021F9
15C960D7BA5F93B81A9A98965A51422633CD1E7B011E465FBD69F6B3D8D8A7B7
62ED0C101368A65749FE7157C34FBC008D27E0AE0DE977BBAE4DE20FB66AFD44
FA74008E0D8B788386515A7D4E3B009261BD655779EC91315EC3FE1B4ADB6EE2
381258F56D14209E65FFDD1C756D369E5C22FD754CC589F8D3D46DCCEBBF247C
676155EF3D7DEA72EDA23DF054C0F8B4DD2101D51D82C99F5B28DFDEFCB08341
C836877A341F9D31525B15EE50E016503E49D61194A5A3CCCA6BB7D63B6FC3FA
23EABE1C93013D5DD2CB6D5B4D6F0102D15110A21DA1C88B7811362D5A782E76
4AFD2E783E122BCA79E6E650F59FAC14CD53C9BA5218EBD890A9D4D0D813A635
EB0C5ED2CA716023D269C4639D4B85FA0FE0FE1FE4C3968DF606E2E4D85AECEF
CAD4B3287B125B4B2CE7CD54858D5D632228057741464FA39387D7841B2FE35A
161871E3A2957090C2E2BEBACB68C23A5691D797935661E81C299ADD7F869248
84A31867A2A31D0D0CE81D4AFEF3DD776A05570B8CDA477329EE569119680381
F060B13120AF022CD64697203DAC05C728E6893783AE401DEDC953C27EDDCC14
13875D75A74AC48E55CB9AA295E5DAADE70F17CC5CAB3C7629FF63CF027C2E32
FD722E44979463EFE556CE0ECCE5407EE21C5927F3473B73DAE61D9D6EBE6C03
EF717DA611BAF718A4744235E549F7984102DE6FB34F8ED1368247D9CC13260F
76EE869402852CB0B0B814BE4C966B0B797D900E3EB5FD675BD90AE94310055D
1E9E90499ADFD8923EE25FCAFBE213DAE1445AE7704750CE48EE41001EB46816
C4A4B09A4FB80352A36A4CB8E1976ED6C594BD25C1795B1EFF07CC936D34764B
7A822479BE8E784D98E675DAF4B881BE737F90334564DA850EBC70F9F26B6214
CF349EE754A533F520CB39114EB1536BEBEF66E289523B4B0F1C5474CBFA7A88
B3E54E476CB3A80A6A8EB84F6DA5AA4D9A9612FE9A313945DBDA7CEFF736F94A
8073E0A0721EFE303CAC9CEE0F36665CBC31F791F6B927CD36525D77F90AC615
E4F91C5B67747959280DE7EB047B368E5B7ABFDBBCDA97B38C164FD55D465F5B
20DAC5C5085ECC707142B8918E1513CD7CB9531202615BF357C63AF632CBD9E9
4F8A27FB5FF38AEBE41C2B0F3DE440DF48C36B1C050546AE86EB8561A73F0C4C
F63BA5189722B0425AA1D6CF39984AF219F4720C680A9A22A0E7DF6122A0AE01
25CDB8924667B3B5C8AC58A48164D55F05C9957C11216C0514E5DC40BB188119
6CC6E52A9C4A33A9F6AE84A07C74CF1080CC2C2E46B44F5E512B0756ED8878BE
10F47E56D55F2BB4F73EABA3453299FFFB58BA605C71E858850E6C18D0331CF2
CF524FAB9A982AFF9F557651D0089F8858F4B11FFB93961E0C1BB1066733D045
F5386774EB1D79E5951D45A062A12E168DBEC258C332DA85A09FBD681C34D1A2
0031052987315C2BC9D4B23871F2873BB729067DEC892C0BF613FF9A3703C66C
CD235646DDA2BE5078C8844D36E4C205A21ABBD4410358C72919C48682E0001A
9DDFFDCCF3D1F6013A35FDC8C394D398554904C0B0FFF1D7B1C634C20F7E0F19
7A82FE8B44BF02A5555C45C14676A867F74112B24B859D81B14F6E24E9166A5A
DB5C1F3B5FAF2C1D86A5E895019D0188ADF78149407036AD276FC6AD3A65415B
9578091F36B7F3108DCAF3AA4874F2A12A39D7FD23140559FC9F10A330FD0052
C6251ADE77A9DFFEE7F68FB0A6CF5DBBC448E4D24824D10231FC2684D6C35576
5263EE42BE64D529DA761CA960A82E138420CA258DAD51919778F53CC0D2F10C
059C04E4B864B979B91BA515D617316E776B864145666027578E5AEB28778C92
5A0AE49A8F9405038ED9B1E1A47B8E11D5A65CB0C0BDB625889AB0338CE1DBC9
4508F037B94E2EDB3FED662F79073133B486F3FCA314BA4D346F634171CED985
4B827AB60F48F587EC92E2B6AD01B016BE4B3BCC186373E2522E0045689C0EFE
446D48E71DA42E0DAC4F0986F166BC41CD3E4DE68ED3E8C129DAC6863356F561
F48161351C90B2B9BDE71C21BAE2DD502ECB5DB13710292B8498D998E0CC77E6
5C82936BD1EADE6875FF4957DB364E10C9EE6B0ACFF42DD1E775CF5A315F45D7
46FF1D0189D898708F4E20CD3D077EC8F7972F8C8AC2A79D165B72F99DBA3BB0
7D00C9A031BC8BEB0BF9E99BCDE4F3919BABCBC9DB6697D79EE825541DE1EFF2
4C857454AABCC1E3647601ECD3C2B33517CF2A56C451F9D5B3058D360E47572A
7985E8FFB0BE10FB76E90FCF0E46440372D0B94208893AF1D04DA6549560A642
16F615A0A58B79774344699DD231A1D3F48EC537C5F34B0E6F53340F3815C476
3E54980223247770DC7550C97644326407B2E6D03F234D103A65B4C349546077
E24ABCB1C66B04C9E2E937D1AD145CD0911EB28BABB9E5FABCC0C1B023BE20BA
893F0C363E64BB9375B789BA2E87F7104AA5ADC211CB986815237963FB7B13A3
63C6373FE2DA4F9C3366DA6FEC37B45D7FC5E6250C9259ABDE309EB70AA6B837
AD96E4F764F0D810433B76E86250408F569EC2E50D88F727CACC2927FF3A4483
8F33643CEB02EE068207A8CDDEFB03122A9851402E81A4A55C53F4C64729E04D
00440AF3F8638643BD03E3BEEEF06D968F9339C50224FD3EC530F854962FCC5A
F1C09B27B5FAF56AC2A53AC8E708644D7735BC5325B509D880177A9ECA83E0AA
16B23B162ADB8391DEAEA141DA0E12A989C6DC9DBC5EE3C78DA48555072FBFAC
1EE30CDCF18D6188503323C7530654CDF1CF2B905C9B7EDD64D653C24F6E454A
B1DCC19A89E18C377E44ED0C82A2F40CDF93313C72E1EF76ADD4D3261FD2F74E
6FED06CA1B7C0EAB94C933E4E17068593D09BB1D96C089A7D418C8A868DAF31B
37E3951617B0A41BE340E91926BC5C4B03A28EEE7810BC30F23C5F364FA70447
DCC75C80EF6BE1BFC10B32A8A631834286D78E15C780C110003D771356B80FB9
FE746A4211161E267F2E1B61546498F5F61E0F5B6441B12F8F6F82114338B2AE
A6B8D8726B4082C5BA231ED30623F6EF63082B3A361C970E38C2CF0E40BFDF8A
78F7C36C89332B0B9A46DAA607C8F1CBE7FF24D72E0A6AD87C29CA1DF35871F0
1CA28CFD183F490E53475FA120B2AAA1F85D2F4C8BAB9414FEA35AE7CAA2A98F
751CED995AB600ADD5BC108919A965AFCD50FCE1A0BCF82108722D15AE2CD7AE
9D83795A226C02F168C84BAFFEE1D16D1D045D3D2D6FEBB27E0B1E9FA1E32AA3
A5149CBEE39E498257B849431FF79AB747AB2265A03F87635B1C85B758D59C4C
0CDD79F7E586804BA07DD2464DE4FB51D26DA87868DCBC97789C260ACD3B64A5
76537BF62FBC7A96E76BFB57343B0047C042B65CAD3369998F77D1DCB6D23780
66CDCB0EB6DBAB6EB263306ABEFD4548097D65285D663EF7C1724680A0D38FD5
735A2DFB54B52EB72AAF6DC80A14EDDADD47F8D1AE7366B4C1C25814C4C0367F
DFFFFB36E255E52886D37A92ED6B8DE7548F2E5D4D97E8D3F28628804BA5C4ED
C678F6BBF0D8E6ABAED5C3FC72430181F69EDB8EE2097C675907DAE83AF6C184
39756565FA5FC18A5E951B5298F5B77124E3C333C0CAEF47D7B75C0DC18FF9AB
C8F24105495E10C45C2429371232EF3768697DC3DBFB24300836FF7E7413C474
03FCAB7957127E892C9F2A1BF2F82E4AD9CB5A53453436AE368F1B1C004A3FD6
40DF8D589134EB251ACF74479BF528A45EF3233D74BAFF93F12479161DC3ABD8
50E4929DCE1A4FF1BC503A52D83447B3351F3AE078A69D2FCEBBE6493D56F5DB
6DCB7533A10DDE458DA5DE6C00978F40F2FB6AE94B6C5FD7BA61CDBAA68807F0
F37E96925D99223F4635D190BE095E67EF07BA4508F8C85F9E2A0146B45F6349
47E07769B26CED9B53F0C88AAB9707C716466FE8E4ED95677FE2E0C4480D9AD2
81DF701997F96C6F0049F4665308B355E38578A5275EC1081765543918B1779C
91DCF471645271EA8B2BEAF7E0FCF4D00E036160EAB6576B6FB219FEBBC543CA
DA53039B0A0A86B0948AE0E384EFEF51891ABBAB1C51D1081DB857ABBC5C2A37
8E3E99799DC678B6DBA29A1CF2DE9D5100A9B609125DA85C0D2442F5AADC4080
DE86613BF4ABDFB4086D320F6ECE7515740BF36FBBA04F7173F243EA55F0C14D
3725F0163B4FFCBD4E0A7B71EFE475B1BB15D0DBBEE3BB2BB0478BEE19BD4C1C
98985BCB485733C8B57E5C9E31DBEAFEF12AABE45032642E01BE5B55745CB67C
2A8DAF0FEAEDC1AA1CFE5BEBB8511F9812B37728E67D85479B02C2E7CAAB93ED
27A98243419108351C0FBCA4AF551F34511C445627677E39A76D832D25B68B02
26F1F1118F812A37C175A287D8D58E44999415135D4D645859EFCD099DF999B5
1084B94CF92B274272AC09C68CF7C9CFC7B8831CB2E6236058AAC8E8997EDB87
01F57CBD50055E5157DE0547F71FF29372A7429C3B1F4B53403EF0E63A731CA8
E910999870F0C2BB9ADF14FFEFEAFB1A8C0D7609DC2A784B5F2549C5B41D9A83
FD3C5B1E83E505E9C653DB523AC211CAEC0E748DDC442967FC2C2DFB46E9CF49
B6DE2C4ADCB8AAC918A98F9C730BEB6D42DC1E3AE6DBBCDD4D79BBCD95B9BAB1
30D7107D9FE04C6E2D24E5B1078279FFCCDAC74D151CBFBDBB4FA7F0F71CA44D
4D84DCB8F2F2681B3D4132685EA394047B36C3C3E8DC27DFCE9AB0EA031D5C04
D6DC73B38103DFF350C509A170FA4FDC57D0A9F6714E0460E28F290F0C51337A
6279D419D98E929089D2D5DFDECB512D0C1181F677FBA3B2CF1BB093C0AC7418
3DC79CCD208D7CB53FBDE333C294D5F28F6F3DF17592DAA830B8B73EC7521613
7B68E023575FA7AC15CFD388838CD9EF429FC0ED630A48153B47EE62DC5073D5
25DE3A102978B51EBD118497CD36DB8C3ACD468F583A15FB123BB8983048406A
F7F74A060811FCBADBD1B97EDC1745A1A551681BF306148DFF1CABB79843EBB2
55550C5F46F73BE5C8386A5DE4E27E7AF0CB357EE040299733E54D6F7B75EB4E
D246FFC5869DEBC2027EAC96D1B5531E2C43C490F4AE0C11076F8733B73A96AC
40385C431D7E00B21BD9C6AB25DEE4ED90CAAFC6322D09BF69CF8F494A0E3B7A
246F6D55D4ED8D0EBE2E6280112326F1B79DBF17A57F868DA2FF2DC72D6F7448
323CFE6E1A644B43CA03F5B6BFF1BBE4F49DB1DD937E83DE362376C6E7C25E0D
939CB6E8E6B2D1C2C04E308B0B8962EB2772BB45F064297AFEF19970217DA78F
E4829E1397633D2B25A4C99F73E78AB4F5D7B07C5B659901B2055FC20AE61A62
C015ABE5B4F3EAE7DEDDCE0506414B25C15AA2B785FDD28F4133A5DCA41410F4
61D0E558ACB0B67F5570CD61C8AAA9C039E34D952FF42ECC4B525629920BC69B
869657EF156E6BA7B8D7FEF636766A056F774C81B2938B82A69181DB689DCB52
3010B9B1981E20793B1284E2216E1A3741BD3F30395431E8C6C83671040264BC
514AFF908D8F9072875A3CE1DF82585DEEFDA57FB91CE8D71AC15FFD863393CC
A75D93427A27491143374183C5B8454F08C4A0D58015BA6B287AC8EEFE6C93F8
52196C89B4C056B21BAB4A13F26153BDCDAEA8B0A4AC1ED61670068D1036FE04
A3AF7DD9A01C286B36EE5EF363BA746C261DCDE52E53B3454FD7A644D667268D
5A623B9AA628356FADA3D4FBE09F53ACFEF65513A5EE11EA55894ED961854C5D
D39704D43FEECDA3D92B0C625F59D716EE79505D8B5653188CD9FB3A15E0B455
75AB163DB5ECC7ED5B07DD84C8942EA05C64AB50188B0F9C24E294B0F24F0728
D6A8E9420B9864A76B319451DAA3CE63F4A041ACA5FB049241EED6EB6E7EE4DD
2E54AC538204A9C7CF4A7D51AF5A07D00C19B7BA811BC577B46E84E8023F7C47
7FB60FABE15E7021C28C8707F4518CEB24F21EBE93E2D4E989472807A1527DF4
A1122037E7EC6D321812DC389FE11C226F586285CDF52D079BD8F6F8925A14CA
990D1873F78C200B0454B69B3EA379650AECE7B97BA8A1CBE10C7BB49F2FED9A
379E9166468BC3430C973A2E0B2425584A673F2E60F9DDE40399489F2383D1A5
19537ED5CEFB8BFEC7DFEA1F48366BD46083CF682EEF060E8505A05E4B111E3A
AE6D8BEC46B7A5757501C8ADBBB3872D135B5A8F6FC0DA55C3C86B394AF07EB8
BF60063D8FB1B7F731CF804794F64EA0F6CCA7A6966AB61F72D20F32C473E148
18BD05AA3CB0028F0448645FC07B425A42661BD7C0E42DC43A657AC01745AC79
1B93130E5A59E6760A0CA70CA05B0252C6DCE5F56690CB54B60435126B7F93B4
2A6C723A1ECA0022E4508059AD283B0621EE1C0C81B9A562C39AA99D58A4065C
53D3ED85B228DA252A0C6D0DC62821E50861274056758084FC0CD341EE83285F
AE0C51CBFE6B53599C4CC2187895D0BC065BCFF46FA6A90134EA8DA044BF1E94
A43A08813BD7910B10A47229A30E5E387118C92DBA7F37D74AC7A8698B7268EF
C3DCA4B3B2D7919DC05DC109CF4B90CA4BDCF1290F5EEEB6CDE14B104F301314
4A26B88F13D48A5C91A603E361197543828D9868A77E7CD0BFC4A8F81206B6C8
2DBDC60AA6DC4EC42D5F7EF21C29ACF42803841032BB1A45C50FD42EFFE34C1D
723C12D31209241DA09A6D81606A5A77CE9F203DB51A7F0BE40EBD1D9403EDC1
0CD617B9989836093D46BD86E6B5584FE052B6946CB96D1E64CEF5DFCDC233A2
0E9ED87C0ECC1C8AD9F9D1FC2E109650B7E8A2DCE166C18E203F63880561D4D7
26B228D4D1224EC68E24206EB7D34C5B39202A636E6BF8A54FC6A9A8BB1B5F5A
5C8E13B7581E5F4BE6B815A608FB3B2236C08FBA58BC7937762FFE198EA13302
D33167E1AE3CB9E694A01D3D20A6BB1F5A0342441827590B865F93C8D5B86D82
CD88F4DF852E8FB7E6EE1776AA60D04729E369EA9E0676F8B3246D7C2CA8303C
FC180B4C03753D765EC4ED7AEA000DF6E74739BD6A045ACA858FED730EF96FD6
03FF5969AA5254972D8C893ACB72A70539291BEBE5B116ADF2ED6DCB83BB206B
DC8ED5CA370325FF4BD2649CD7A3C5B020475B9F364A37D552EBCF4E5E367CAF
658A96C2DF9498B2A82ED9CCFFB876F41DB5047F06078610BCD6F87D0A017AF5
BD244B5F5794F30D57EDDFBCA5FAFDF1D8C28B8D90B0982F67062C4F1076A871
4F0FF1B0BE8B60E97E5E3DA99432B91A2C37E720EA1850492140FBE46147F7BC
C36E3CE03008D8B7092A846DE8C6DDEA85E9D61931F22CF0B1DCD2F6513F855B
F24FBF75A4EC6731019A7A85D0D792FE513DFFD1D9D209D92549F540A9049B04
ED8CDCAAD4FD933BA627429CF33ABD480EFCD38D0B7D1D43168804C412341807
81626A04B7D78C65C5ADDBE0A287E603C28916FE9D2E4B85DCE50BBB2AE12E8B
635E460F2DBA24AF8E6D84C502FA80A46CB5FF29D53802F05907FE68E7A1A6DE
A88A0AC8675F1B80F40F212164DFAE71A6B1763845033F4A6340326F0CBE34AB
66DD9FE2706A1436ED40C28DB509F5499D7D10F00CBE4B01A0838500B284C034
7D31DE44E025D9DC759900793622BF876856B9087BCC025A4C975E975BDEBE23
1DA7004FA1F7D05E784878538E5F688316378DB59EEE1E095253172F7B7D77BE
6E1D7A5DFBEAA4B2A5DB3514CEAD433D2ADC70AE970C0D59140266B20E77E122
FEF7B6DE18633C95B3B7C9A49F116F892239CD5762C96CB97EC64865C739C344
710162680B3EA36C2D1DB2566E24DF831EC04DA60ABCECC51CFEE5489D334316
92D279113910999D345085302AA24F71BA7D18409B0CFF3BCFA291D2C3783FBD
2F35E4F3BD100B002186C7809E7E106B81396139E05B036BDA7F7F23FE90F8E0
7F69E25A740FA4820C8FE7DEA722AE31BB355306C27192E927C9F17CCEBA11F9
D988AEB514AA2310771FE76C0547F92B84C832AEA6502F23B2E0ECABD75C23FA
71592491414285B3A132F417FAC147A8E92B24BE3DE85BB560B591CB026F63E0
3054399CA7A42CAD59F5976D40E3CAEDEB77B4CDA6B9FE7FB6D3576C7F6C975C
C9E1CC2A9D07DE3E129A6644729CB3FA812B3567AF86594214B3607054F0C95E
A0B175379395203EB00E1D227991A98960CF47DE865A334F6B8A27D0738D9F65
63EDA0EC8AE71DEC67D6412D9F9EF176B8B28C050A37418098CDEE1E0859CB22
BE1293ED1664F40E5891052173BD4370FC7A907D04006F560196D48EF0608432
DD8FB1DF7E66576A769AF59FB2C989E478324182ED60D33635B849D833AA193D
6BA153FBA4A181BC7ED0477888EC2DD4E2BE3F8820CC5C89EF75C1581548BE5C
529E488F9DC2F6C44BB8B2D39EED7E1C34B0CE489C3B5FC6FA6ECEE244287C5E
D0306F15147F1F434C7BA2B5F909EC8588764B0F9EAB657471AD79D6EC7DE9E0
4254A19D19E55155394C6E4F6886232C06654B6AADD003E9A56497E68DC3F9AD
49E630D21B33147A62B15ECDE2D031857931B9C0CFD88EF4037FFA426C7B755C
A8904BBD94DE920E26630B0E07774C559AFC373127C4DCCFAA6A3946D89241A4
286041483E00D88AF107AA768A725D917DDA007268E83DC6BCFAAECDF6625A91
1FFB6F99B43533A500D2BF95410620238970D922F011E3CFA67A5C6CCF14D960
0D4CA20794511C93C66B8774AA8C391C78ACB9894103476DF7760F9F600CD5DD
690E5DA3BF73E9B4792DE98B8BBB59A683A43A231465B8B20D03C2828C54EEDA
5E3BC1EB73F5633ED6DAB2AA87D27B2D2C6C8113B8BBF87B20E31D16BD21BBE5
F3EE00AD2A973963B02CD9DEA2C513C23DAD94ADE2A5F7AA994E0D0BD7771805
24B7222B840B29906593C75C77800226B703E16A64053375D1D2EDC0E529311C
7E36F4B41D0EC9AEA4CDA2E0ADB188B533C43108B2D6A8643F068106FCB96C9D
45BD5CFB8212736DF04952F161BE1490D0207EA981F4A8239549529F9A1B572D
4C650B4D6112EF856CE18B2FAAAC5384A4B6C89348C36E1AB43AEF36EDCE6089
45D34F23AB3A1B001AAE4F4342F9576C640137BC70AABC284CA3F0CA8369F3E8
9D2BAC41EE3AF9616C64563864CD601F3458D8D43AB25B46B528A6B56ADBDA6E
B324AC1B03DC80087B45ED1B158C7A5D6444B9A2BEC2E1C699E4EF919A99DFC0
353D35BF372ED10E2917257F4BF29D84CB38368EF4BA6A33218441F6859F5997
ED4A61C9C27E16D7239C09E7E48CF9AD8C3BC177B45243F5D405B576B583D549
862242B4321CB8FADC952B284F17EB2FC23D907D9B7322E8D6C166A65068CE53
DB1FC2D5B9C626D0C02085CCB491A602544AD798ABE082B92DC024BCCE92A297
3E3D3D5D38E7C0CE5FEA9A2BA04FD35502737C4F2A21330E44A6195E1D401B64
3C40C28D3F4A5EDA7DD2827B3FFCBD6C51ACE39C42709D6B6B2D7FB3EA061E4E
6F5EFEE3EF25BC2F6A112A1A188CE81E6D34C5E10BC350DD473A08D5B85040E4
40E30108144734427BFB1EF5A91A8A9061993CD51FB24B46FA554FA288D269CB
E03904A5EFDAF9A7E7BA2E54D2616B9CD5BE3AA0E507F3E6B1797677FE48D754
F96FB731B85DD943C708E6219B664034BC368C5257A9D12AF5B6A6898D13A85E
E5BD5F85DB276C874AD0FCD58DFD84EBD7309A3545E5EC11F414AD00A11CC6DC
5870B68B62565A3F045BBC1309D5011B5D8579F00D962D3E42BB7BF7135A548A
8519B3E1F5CF296998F2C4D1FCE8047E5EC5956C2CCDE6C472E48F4618954280
D98E49F08C5362034B28905FCAC2FBF4F1E165117D219696219F6A0674A3E0BD
6281284C3868FF420BE13A9237A2F29724299DDCD4B2DC161C0BCB62C5B7981B
AA9C6E0F76B9406036D2A1C312F51B82D72AC52EB8B77D4E33973993A6949E27
6688E248C436E9BDD17F71892B0F150FFBFB3DD8094FC720093D66C44F8B783B
9C05649DACA9A7BA311610F38862F971DF3FF254466609139BB29964FF13FBC2
F556892777DA9EAE22DE0E3E01113F27AB6A1B66B9BE7B218D3FC1ABE429AB91
78B7D3DE5DB7D6FACB61B2FABE6319C8BC083FC6F80965B057E5A1DF8E0A196B
F0F743F7E6EC01F860BAD7ADFBD46DECF8DC3F5FC0D1CE9031EC517A70B4C1B1
067F43917BA6ABB0D7D9FE24F0DBE750FB42D9D33D71CBE44D6EBC928C84E6A3
3B89B9290B34E49CF938788F9B05E3C05D26F3E8B2BF0E14DF8A3E5A98E23882
DB467B46B177E461F703579934E400B582A1884BFC113D2656C17AAAA06B51BC
BEA6608281CEB142C24C417BA10ABB84D38B286CEE11BC25340C3A6036BCE9FC
09390A14E389C78D29362839EC3DF0D7CEB1BE3BF7FCF3E0A747D5C045C0E9ED
0598F19887C4F1E4B11D10CD8AC20930B73D085070E9775C31EF5F69C49EC32F
1B1697209127631C9E2E23BE15B74FCDCF704867E6B751DF5E47328C3AE1991A
D336B6DCF9CB217F01962AFA68A66453E4E469CAD0BAAF2AF8FC320DF1E5ABC0
2BEE09B901ED32B4FB6AEB1DE5CDB93DDCECBF1BA52BA07DA1EB6DE5EE9CD34F
F9EB8BF5018C3D283097F259E0C34DC7ABB18CC9E67772AF6A77941DEF2E6BDA
A694076DBEE75C4AE40ABBDB9A87875E76D12C72F2B489FEE9E3DA3EECA39D4F
9FAEBF6CAC3488F079CC6E21D12E476EE3AFEBE49417879B47AF8F84973733A7
32E30DD6D26D5B4B9BC86CF199C958EB4D37B0FE9E2E4D6A53A9E2F520889BA3
FE3A2BDC860DEFC0A51C359207871A4F6D5566509E530342F58374BD7694BF02
97B2A17579DF2CA5FC0088D19CC93AC358191D6E46816F265E15CBFFA8B170F4
990EA1E9A70DFCCFEF0C0723CF54A2877A9D8D6AAE1504A527F47588B9462AB6
846EC36A5639D6CF4E5F425EFDC4481D44A96BDC23D6854AA869AE3FAACCA10B
A59F11A03E5C9D03B32FA1145A1A4AF44AB21267D0D2F8D2DAC7C54405E95DA8
AA8285C31F0D70EFE46A4091405DE016CE6B6360D692B3A9D31A5BB5E39930F2
6F5BB4B125925A2563741A1815E960D73368733D2739DABF455DEEA6C185B153
84477789E204AE927F737A1B07D5BA4B8947C45E40193F83254E25DA1F5C7B57
2B8AFF0D555E1046742903422923ED995D091E82E181937F96CEC826E436918E
928F25805DB3FB003977BFDF3ACAA43F253DAC3365638506F118E9893051F81D
9842CF06544C52DD456BE0C862E9718BF952B30FE1BFBDEEA54C2A301009C55E
3D15E7F00EB33B0CBB6B0A79A13A98321187B2EA86A82E5AF2733DD82AEBA54F
CAC0B7CBA88D2B424EF9A6A93E0010CD0805EE115AD4C0944825DDB2F3B9C2FD
E66EFA0B9C2B99B8D1AC74478558A58932EEC45048E9828D758416776CE148D0
269A5A120744E776257BA75EDB4F080417CF9F4A21085C28D3C12FDB8ECFC1E3
FE99ADB5319D6C82D7FF09D233DF63BE45453829C5EE0ED002CE10BD1F17CFA9
2E5A8464D8C78A032BF42696A0B95711BBBC5D3F96AFC50097E465BD9137E211
B10CF56351CBD69E2EB5F39C68BCBBB562D30670C8D98FA23ADE23C60068672D
5E57EC9085AE22387010A7AF7C3D9145886F4BCFC5C77AFE0D128EF9253F3E20
9D8F135F1DB0513675FCE5F6E354638900FAC1A3330787350536424189A85BCE
39B5B77E2093DF0E927571EFFF53B8A20ED7D2A2BD396FC9B75930CFF75ECF85
DC6BE610780818260F143C5F6FC4120785836394F5FFE83B6C84A14558766FD6
C70AF57C363F36A99D05D791F37B87199DF408D76D8E48CE3BBB71AC4FAB0C59
716E7D4650B2C4069213CA56001FCB226840681C623BDBD980CA8D7D6E40F3DE
EE5430004020EF0E39A6AE97487F23CE93892490BA73ED321BD0179A04777F95
8AF2BA62B45B51F7403C05B3E6629CF0AB0E05B13C8A584B18F23BBB402DC032
760D2483AF3857E097F58D7C9961692C199AB14FA775DE88A8A3AE837B84AA9F
14D6228BAAF5B9946D7F2CB579136A71A94DC6968805AE6A08D98E19FF1C75E4
60D3C10954D9211536A72D1C89D71B9CFC23342A076D767ACD8195BB2A5C4400
1FCABF796400AF9332C4B02ADA4904565BC629922D6148E539174C0E62D6053B
D6B85A471D443291FCFF61F7207596C47633A61C80BCCD25B814A1E3872664B2
A8833A38F9A93A05CE4A874813BD10638D8E1BDFCB9D79968D2DAADE3992CA3B
28815945C2F7A336EC91605E61347D3629A11F465639B7A3B9C66F871707C9EA
3E1D70CC2A6F25DFFCA37EBD4D88CB54D217227437C8FDE564C8494CE542613F
23EC5BFBCA510C1AFD2E0543EA22D48144C8EFDF79C7A9D01C508BA698079C90
8ADFC87AA4CA77D78539C0620CDA50A6C97229EBF34CA0192D4608391BB3FDE1
AB33C17CBD9D8D8A4335B6D4FD01886607E2F93836C947287A805F1E214AAA4F
7A22AA0A1E0B52CFD3461CE33CEA8F62C9DB7D47E3404E2D1233BEF789B70B71
4A371B187BF33040205403710AA8EF1B45BC4147B7F455B58BB8DB8F9802D396
22BB467B19DEB600B351232CF322043BBF33161189D8F6269ECA924899C78DC7
A53F3739C1E0EB8B14DDE9B79463B0E268BFFD18BBB511C45D47F95B8B2AB3AF
0BC4C2BC7C056C2988473468083101AF9BB87DCF1B450387798A5C2D8CEE2063
3492BC93E684111FB1284282903F26C3B1CB50731A22FF65313391745BAD06AB
179CDFD79034BC3D0B6469489B618689D67B7CAC63D0B9A73691C32ACB8DD777
0A40EF05AAFCB4BDF1BBEF48DBDC4C988CD5EE6A6CD1655FB895F04A96EF4C5A
8BB0C2E743D18721C84CB962622FDD5E9318C4EB3F2E1D29E560A82157AE523A
B63AF1003FD4C9000A832B3049771A1417B47877691B8646FE69734334ECED33
2B431E704864C29FEA142489C5B7D913E056DF90E33F3B23EB0E759D24249CB3
CB16C07014F840E5CF152B427958516093026D56274335E561B386341FB7A374
E5F2A6F0D8C834368D0336394495B59AE35B5B1BB88E0A7288BC5A2D3F7ACD0B
F3878946013BD3C3582CDE69EBB25E4D58609FD8023A49B08BAD5B423BEBF462
27BFA43074FA8CF6EAB539B1BBFD31B9E363EE2AD838AD0DD7AC58D8493053D8
B7BECACF542B8BF2F6265DD88F87E39A4D5CC3E71E1F8D07BC650019EE5DE332
69C28D9C45F59D31E1FE1F0F9E22663DBA81D305EEEA23D6F71F63B672A516F1
EB76061F5DE09353E1CE36C8D406CEEC1724DBBACC3F5C774F9C135A0DAD594F
138D6571B14BA4E00454494601B69A774523B1BD7EE589492F604438BCE21C7C
977D6048AD9917255A3BF76AD5D0620C5326285605596B3F6F7D3E981F7AB885
F4C191204B164B3B5BD893D4D3ED6261457855D3F6C68BE747CC91AA50AFBC59
7DFCB28F1E7E4EC306B26CE2BC4613106874F2D0AE2F1D348947AF5B7CDF9E90
B761E53503BC8B2D39B131F769828A378F02D78A74B74105AD6E4496E5948B15
17D0EAD8F973370D2255DBA37CAD8C79AF090659CFF2262F6BC7DF45671B9D2C
C19B3BA36BA3CF6E6C4800FE6B58AF101A3A8E004BD3F0D7B530029A6B7FCF21
C4C9440D582D1C2D3EEAA1EE0A87D0AE71270E161B494429D413ADD10559A949
A8D626EF81D6FFF900CA62BCE2D19002B4FE28B561906E25DB57FADF4AD85CDB
3E4D210A8561F5F9747C0F581F161C7242B9B5C6DC590CF7874E4FDEEE6D1C2E
8FE34AD3F88BAEA8BD3149A1579C9858B839F07466914A93C35960511D0A0E07
21E12BA5A3F040887F382B7BC0942975B38106FB31456FCD4F9170A503E8EE2C
68DEE5E9A8FDAC25C5C484DDD4524A28887BD6607755E14796F5B027FC92D5DB
4524BE5BA25BC18CFD8E5262B2E47B1DF8A3A2005CB0CDF0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (pscdev3.dvi)
@start /Fa 138[41 117[{}1 66.4176 /CMMI8 rf /Fb 255[77{}1
99.6264 /CMSY10 rf /Fc 206[35 5[55 43[{}2 66.4176 /CMR8
rf /Fd 137[47 1[35 10[33 1[47 24[78 78[{}5 99.6264 /CMMI12
rf /Fe 144[50 55 80 7[45 101[{}4 99.6264 /CMTI12 rf /Ff
130[51 51 51 1[51 51 1[51 51 51 51 51 1[51 51 51 51 51
2[51 51 51 1[51 51 51 51 51 1[51 51 51 51 51 51 6[51
2[51 1[51 7[51 1[51 51 51 51 3[51 3[51 1[51 51 51 51
51 51 51 51 1[51 51 51 51 1[51 51 2[51 51 36[{}55 99.6264
/CMTT12 rf /Fg 133[50 3[59 62 44 44 46 1[62 56 62 93
31 2[31 62 56 34 51 62 50 62 54 13[62 2[77 10[74 86 81
16[56 31[56 5[62 12[{}28 99.6264 /CMBX12 rf /Fh 138[90
63 64 66 1[90 81 1[134 45 2[45 90 2[74 90 72 1[78 13[90
13[106 18[81 81 49[{}18 143.462 /CMBX12 rf /Fi 133[43
2[70 51 54 38 38 38 51 54 49 54 81 27 51 1[27 54 49 30
43 54 43 54 49 27 3[49 1[60 2[100 2[70 54 1[76 66 1[73
1[61 2[35 73 77 64 66 75 70 69 73 5[27 27 4[49 49 49
49 49 49 1[27 33 27 76 1[38 38 27 4[49 15[49 3[81 1[54
57 11[{}62 99.6264 /CMR12 rf /Fj 137[62 3[46 2[59 1[98
3[33 3[52 2[65 59 18[88 107 3[42 15[59 1[59 59 7[33 46[{}15
119.552 /CMR12 rf /Fk 134[89 4[89 89 89 1[89 6[89 5[89
50[89 1[89 46[{}9 172.188 /CMTT12 rf /Fl 138[108 75 76
79 1[108 97 108 1[54 2[54 108 2[88 108 86 1[94 16[132
80[{}15 172.188 /CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -70 385 a Fl(Principi)64 b(e)h(struttura)h(del)e
(pacc)-5 b(hetto)65 b Fk(pscirc0.sty)1691 681 y Fj(I.)39
b(Maio)1494 914 y(6)g(No)m(v)m(em)m(bre)d(97)-69 1289
y Fi(La)43 b(de\014nizione)i(di)f(un)g(linguaggio)e(formale)i(p)s(er)f
(la)g(descrizione)j(degli)e(sc)m(hemi)h(elettrici)f(e)g(la)f(sua)h(im-)
-215 1409 y(plemen)m(tazione)37 b(attra)m(v)m(erso)e(macroistruzioni)h
(PST)-8 b(ric)m(ks)35 b(\022)-46 b(e)34 b(un)h(compito)g(di\016cile.)51
b(Dop)s(o)34 b(ten)m(tativi)h(v)-5 b(ani,)36 b(ho)-215
1530 y(rin)m(unciato)h(alla)f(ricerca)i(di)e(una)h(soluzione)h(ottima)e
(e)h(ho)f(scelto)h(di)g(o\013rire)f(pi)s(\022)-51 b(u)36
b(comandi)h(p)s(er)g(il)g(p)s(osiziona-)-215 1650 y(men)m(to)c(degli)g
(elemen)m(ti)i(a)d(due)h(terminali.)-69 1771 y(Questa)46
b(scelta)h(ha)f(tre)f(v)-5 b(an)m(taggi:)70 b(\(1\))45
b(lascia)h(all'uten)m(te)h(la)e(decisione)j(sulla)e(strategia)g
(preferita)f(p)s(er)-215 1891 y(costruire)33 b(lo)e(sc)m(hema;)j(\(2\))
29 b(\022)-46 b(e)31 b(conforme)i(alla)e(\014loso\014a)h(di)g(PST)-8
b(ric)m(ks,)34 b(c)m(he)d(\022)-46 b(e)31 b(fondato)g(su)i(comandi)f(p)
s(er)g(il)g(p)s(osi-)-215 2011 y(zionamen)m(to)i(di)g(oggetti)e
(gra\014ci)i(generici;)g(\(3\))f(separa)h(la)f(de\014nizione)i(dei)f
(sim)m(b)s(oli)g(degli)g(elemen)m(ti)h(circuitali)-215
2132 y(da)27 b(quella)h(dei)f(comandi)h(usati)f(p)s(er)g(p)s
(osizionarli.)42 b(Con)28 b(questa)g(scelta,)h(un'unica)f(libreria)f
(di)g(sim)m(b)s(oli)h(gra\014ci)d(\022)-46 b(e)-215 2252
y(p)s(osizionabile)28 b(attra)m(v)m(erso)g(n)m(uo)m(vi)g(criteri)g
(semplicemen)m(te)i(costruendo)e(n)m(uo)m(v)m(e)h(macroistruzioni)f(di)
g(p)s(osiziona-)-215 2372 y(men)m(to.)42 b(Co)s(eren)m(temen)m(te)30
b(alla)c(preceden)m(ti)j(osserv)-5 b(azioni,)29 b(ho)e(anc)m(he)h
(privilegiato)f(l'uso)g(di)g(comandi)g(primitivi)-215
2493 y(di)40 b(PST)-8 b(ric)m(ks)43 b(\(ad)c(esempio)j(p)s(er)e(le)g
(etic)m(hette\))i(e)e(la)g(creazione)h(di)g(macroistruzioni)g(con)f
(funzioni)h(semplici)-215 2613 y(risp)s(etto)33 b(alla)f(creazione)i
(di)f(macroistruzioni)g(con)g(funzioni)h(complesse.)-215
2946 y Fh(1)161 b(Struttura)52 b(del)h(pacc)l(hetto)-215
3165 y Fg(Sp)s(eci\014cazione)36 b(dei)f(pun)m(ti)98
b Fi(Il)31 b(pacc)m(hetto)g(sfrutta)f(l'estensione)j
Ff(pst-nod)e Fi(e)g(assume)h(c)m(he)f(sia)f(attiv)-5
b(a)30 b(l'op-)-215 3285 y(zione)41 b Ff(SpecialCoor)p
Fi(.)68 b(In)41 b(questo)g(mo)s(do,)g(i)g(pun)m(ti)f(del)h(piano)f
(usati)g(p)s(er)h(comp)s(orre)f(il)g(disegno)h(si)f(p)s(ossono)-215
3406 y(sp)s(eci\014care)34 b(in)f(div)m(ersi)i(mo)s(di:)-215
3526 y(\(1\))d(median)m(te)i(co)s(ordinate)f(esplicite)h
Ff(\(x,y\))p Fi(,)-215 3647 y(\(2\))e(median)m(te)i(nomi)f
Ff(\(pippo\))h Fi(do)m(v)m(e)g Ff(pippo)d Fi(\022)-46
b(e)33 b(de\014nito)g(da)g Ff(\\pnode\(x,y\){pippo})p
Fi(,)-215 3767 y(\(3\))f(median)m(te)i(co)s(ordinate)f(miste)g
Ff(\(pippo|paperino\))k Fi(e)c Ff(\(x,y|pippo\))p Fi(.)-215
3887 y(P)m(er)28 b(ampliare)f(le)h(p)s(ossibilit\022)-49
b(a)27 b(ho)g(aggiun)m(to)g(un)g(comando)g(p)s(er)g(assegnare)i(nomi)e
(a)f(pun)m(ti)i(sp)s(eci\014cati)h(atta)m(v)m(erso)-215
4008 y Fg(co)s(ordinate)38 b(relativ)m(e)p Fi(:)-215
4128 y Ff(\\pnoder\(x,y\)\(dx,dy\){pluto)q(})g Fi(assegna)c(il)e(nome)i
Ff(pluto)f Fi(al)g(pun)m(to)g(di)g(co)s(ordinate)f Ff(\(x+dx,y+dy\))p
Fi(.)-215 4388 y Fg(Connessioni)99 b Fi(La)36 b(tracciatura)h(delle)g
(connessioni)f(\022)-46 b(e)36 b(completamen)m(te)j(a\016data)d(ai)g
(comandi)h(primitivi)g(di)-215 4508 y(PST)-8 b(ric)m(ks.)46
b(I)33 b(comandi)g(primitivi)h(sono)e(classi\014cabili)j(in)e(tre)f
(tipi)h(div)m(ersi:)-215 4629 y(\(1\))f(semplici)j(\(esempio)f
Ff(\\psline...)p Fi(\),)-215 4749 y(\(2\))e(em)m(ulatori)h(di)g
(connessioni)i(tra)d(nomi)h(\(esempio)h Ff(\\pcarc...)p
Fi(\),)-215 4869 y(\(3\))e(connessioni)j(tra)d(nomi)h(\(esempio)h
Ff(\\ncline...)p Fi(\).)-215 4990 y(Nei)28 b(comandi)h(di)f(tip)s(o)f
(\(1\))h(e)g(\(2\))f(i)h(pun)m(ti)h(p)s(ossono)f(essere)i(sp)s
(eci\014cati)f(con)f(una)g(qualunque)i(mescola)f(dei)g(mo)s(di)-215
5110 y(p)s(ossibili,)34 b(nei)f(comandi)g(di)g(tip)s(o)f(tre)h(i)g(pun)
m(ti)g(dev)m(ono)h(essere)g(sp)s(eci\014cati)g(da)f(nomi.)-69
5231 y(T)-8 b(utti)36 b(i)g(tipi)g(di)g(comandi)h(sono)e(utili,)i(i)f
(comandi)h(di)f(tip)s(o)f(\(1\))g(p)s(ermettono)h(sp)s(ezzate)i(e)e
(curv)m(e)h(descritte)-215 5351 y(da)k(pi)s(\022)-51
b(u)40 b(di)h(due)h(pun)m(ti,)i(quelli)e(di)f(tip)s(o)g(\(2\))f
(gestiscono)j(automaticamen)m(te)f(parametri)f(ausiliari)g(c)m(he)h
(auto-)-215 5471 y(matizzano)36 b(il)f(p)s(osizionamen)m(to)i(di)f
(ulteriori)g(elemen)m(ti)h(sulle)g(connessioni)g(e)f(quelli)h(di)e(tip)
s(o)g(\(3\))g(aggiungono)-215 5592 y(ulteriori)e(gradi)f(di)h(lib)s
(ert\022)-49 b(a.)1852 5873 y(1)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop -215 337 a Fg(Sim)m(b)s(oli)38
b(n)m(udi)98 b Fi(La)32 b(parte)f(principale)i(del)g(pacc)m(hetto)d
(\022)-46 b(e)32 b(una)g(libreria)g(di)g(sim)m(b)s(oli)h(ausiliari)f
(\(no)s(di)f(elettrici,)-215 457 y(teste)f(di)e(terminali,)j(teste)e
(di)g(frecce\))h(e)f(di)g(sim)m(b)s(oli)g(di)g(n)m(uclei)h(di)f(elemen)
m(ti)h(a)f(due)g(terminali)g(\(cio)s(e`)g(elemen)m(ti)i(a)-215
577 y(due)25 b(terminali)g(priv)-5 b(ati)24 b(degli)h(stessi\).)42
b(I)25 b(n)m(uclei)g(sono)g(tutti)f(disp)s(osti)h(in)g(p)s(osizione)g
(orizzon)m(tale)g(con)g(il)f(morsetto)-215 698 y(p)s(ositiv)m(o)30
b(\(oppure,)g(p)s(er)g(elemen)m(ti)h(non)e(lineari,)i(quello)f
(evidenziato\))g(v)m(erso)h(destra)f(e)f(sono)g(\\opac)m(hi".)43
b(I)29 b(nomi)-215 818 y(dei)j(comandi)f(p)s(er)h(la)e(tracciatura)h
(di)h(questi)g(sim)m(b)s(oli)g(hanno)g(la)e(struttura)i
Ff(\\ps)p Fe(nome)p Fi(,)f(do)m(v)m(e)i Fe(nome)k Fi(iden)m(ti\014ca)
-215 939 y(l'oggetto)f(e,)i(quando)f(p)s(ossibile,)i(segue)f(la)e(sin)m
(tassi)j Ff(Spice)p Fi(.)56 b(Esempio)38 b Ff(\\psr)g
Fi(e)f Ff(\\pstt)h Fi(tracciano)e(in)h(\(0,0\))f(e)-215
1059 y(orien)m(tati)d(orizzon)m(talmen)m(te)h(un)f(resistore)h(e)f(un)g
(elemen)m(to)h(generico)f(a)g(due)g(terminali)g(senza)h(i)f(terminali.)
-215 1319 y Fg(P)m(osizionamen)m(to)38 b(degli)g(elemen)m(ti)g(a)g(due)
g(terminali)99 b Fi(Ho)32 b(considerato)i(tre)e(regole)h(div)m(erse.)
-96 1522 y(1.)49 b Fg(P)m(osizionamen)m(to)38 b(del)g(n)m(ucleo)g
(attra)m(v)m(erso)f(il)h(cen)m(tro)29 1642 y Fi(Si)d(ottiene)h(con)g
Ff(\\rput{ori}\(pos\){\\ps...})41 b Fi(c)m(he)34 b(\022)-46
b(e)35 b(il)h(comando)g(di)f(p)s(osizionamen)m(to)i(principale)f(di)29
1763 y(PST)-8 b(ric)m(ks.)29 1883 y(L'aggiun)m(ta)32
b(di)h(etic)m(hette)h(si)f(ottiene)h(attra)m(v)m(erso)f
Ff(\\uput{dist}[dir]\(pos\){eti)q(che)q(tta})q Fi(.)29
2004 y(Questo)46 b(via)c(\022)-46 b(e)46 b(utile)g(p)s(er)f(la)g
(costruzione)i(di)e(strutture)h(particolari)f(oppure)h(p)s(er)g
(costruire)g(l'in)m(tero)29 2124 y(sc)m(hema)30 b(tracciandone)f(prima)
f(tutti)h(i)f(lati)g(e)h(p)s(oi)f(so)m(vrapp)s(onendo)h(ad)g(alcuni)f
(lati)h(i)f(sim)m(b)s(oli)h(desiderati.)38 2219 y(\022)29
2244 y(E)k(una)f(tecnica)i(rozza)f(ma)f(molto)h(e\016cace)h(in)e
(alcuni)i(casi.)-96 2448 y(2.)49 b Fg(P)m(osizionamen)m(to)38
b(di)g(un)g(elemen)m(to)g(a)g(due)g(terminali)g(dagli)g(estremi)g(dei)g
(terminali)29 2568 y Fi(Si)33 b(ottiene)g(con)g Ff
(\\ttput\(pos+\)\(pos-\){\\ps...})q Fi(.)29 2689 y(L'aggiun)m(ta)24
b(di)h(etic)m(hette)h(si)f(ottiene)g(proseguendo)h(con)e(i)h(comandi)g
(PST)-8 b(rics)26 b Ff(_{etichetta})h Fi(\(etic)m(hetta)29
2809 y(sotto\))32 b(e)h Ff(^{etichetta})j Fi(\(etic)m(hetta)d(sopra\).)
29 2929 y(Il)d(comando)f(traccia)h(l'elemen)m(to)h(a)f(due)g(terminali)
g Ff(\\ps...)h Fi(disp)s(onendo)g(l'estremo)g(del)f(suo)g(terminale)29
3050 y(p)s(ositiv)m(o)36 b(in)g Ff(pos+)g Fi(e)g(quello)g(del)g
(negativ)m(o)g(in)g Ff(pos-)p Fi(.)53 b(P)m(er)37 b(ora)d(non)i(sono)g
(riuscito)g(a)f(tro)m(v)-5 b(are)36 b(un)f(legge)29 3170
y(p)s(er)e(predire)g(la)f(p)s(osizione)i(\014nale)f(dell'etic)m(hetta)i
(in)e(base)g(ai)f(comandi)h(\\sopra")g(e)g(\\sotto".)29
3290 y(La)f(regola)g(\(2\))e(\022)-46 b(e)32 b(la)h(pi)s(\022)-51
b(u)32 b(diretta)g(ed)f(\022)-46 b(e)32 b(con)m(v)m(enien)m(te)k(nella)
d(maggior)f(parte)h(dei)g(problemi)g(com)m(uni.)-96 3494
y(3.)49 b Fg(P)m(osizionamen)m(to)38 b(di)g(un)g(elemen)m(to)g(a)g(due)
g(terminali)g(attra)m(v)m(erso)f(il)h(cen)m(tro)29 3614
y Fi(Si)33 b(ottiene)g(con)g Ff(\\ttputc{ori}\(posc\){\\ps...})q({hnr)q
(oot})q({len)q(gth)q(})p Fi(.)29 3735 y(L'aggiun)m(ta)f(di)h(etic)m
(hette)h(si)f(ottiene)h(come)f(nel)g(caso)g(\(2\).)29
3855 y(Il)25 b(comando)d(\022)-46 b(e)25 b(simile)h(a)e
Ff(\\rput)i Fi(ma)f(aggiunge)g(al)f(n)m(ucleo)i(i)f(teminali)g(in)g(mo)
s(do)g(c)m(he)h(l'elemen)m(to)g(disegnato)29 3975 y(abbia)i(lunghezza)h
(complessiv)-5 b(a)30 b Ff(length)p Fi(.)44 b(Inoltre)28
b(de\014nisce)j(i)d(nomi)g(dei)h(pun)m(ti)g(o)s(ccupati)f(dagli)g
(estremi)29 4096 y(median)m(te)42 b Ff(hnroot)p Fi(:)63
b Ff(hnroot)p Fi(p)40 b(\022)-46 b(e)41 b(il)h(nome)f(del)h(pun)m(to)g
(all'estremo)g(p)s(ositiv)m(o)g(e)g Ff(hnroot)p Fi(m)h(quello)f(del)29
4216 y(pun)m(to)33 b(all'estremo)h(negativ)m(o.)29 4337
y(Questa)28 b(regola)d(\022)-46 b(e)28 b(utile)g(p)s(er)g(la)g
(costruzione)h(dello)g(sc)m(hema)g(come)g(bigrafo,)f(disp)s(onendo)h
(prima)f(no)s(ccioli)29 4457 y(e)34 b(no)s(di)h(elettrici)g(e)g(dop)s
(o)e(gli)i(arc)m(hi)f(di)h(connessione)h(\(v)m(edere)h(Cap.)d(1)g(e)h
(2)f(di)g(\\F)-8 b(ondamen)m(ti)35 b(di)g(circuiti)29
4577 y(elettronici",)e(A.)g(Premoli\).)-215 4837 y Fg(Elemen)m(ti)48
b(a)g(pi)s(\022)-59 b(u)48 b(di)g(due)g(terminali)98
b Fi(Il)42 b(loro)f(p)s(osizionamen)m(to)f(\022)-46 b(e)41
b(molto)g(pi)s(\022)-51 b(u)41 b(complesso)i(e)f(non)f(sono)-215
4957 y(riuscito)31 b(a)f(tro)m(v)-5 b(are)31 b(regole)f(c)m(he)i(v)-5
b(alessero)31 b(la)f(complessit\022)-49 b(a)32 b(ric)m(hiesta)g(p)s(er)
f(essere)h(implemen)m(tate)g(in)f(PST)-8 b(ric)m(ks.)-215
5078 y(P)m(er)31 b(questo)h(ho)e(scelto)h(la)g(regola)f(pi)s(\022)-51
b(u)29 b(facile)i(da)g(implemen)m(tare)h(c)m(he)d(\022)-46
b(e:)42 b(un)31 b(comando)g(p)s(er)f(ogni)g(elemen)m(to)i(p)s(o-)-215
5198 y(siziona)e(l'elemen)m(to)i(attra)m(v)m(erso)f(il)e(cen)m(tro)i(e)
f(assegna)h(nomi)f(agli)f(estremi)i(dei)f(suoi)h(terminali)f
(\(analogamen)m(te)-215 5319 y(al)g(comando)g Ff(\\ttputc)p
Fi(\).)45 b(Con)30 b(questa)h(regola)f(gli)g(elemen)m(ti)i(a)e(pi)s
(\022)-51 b(u)30 b(di)g(due)h(terminali)g(v)m(engono)g(trattati)e(come)
-215 5439 y(no)s(ccioli)k(e)f(p)s(osizionati)h(p)s(er)f(primi.)44
b(Dop)s(o)32 b(il)g(loro)g(p)s(osizionamen)m(to)h(i)g(nomi)f(dei)h(pun)
m(ti)g(agli)f(estremi)i(dei)f(loro)-215 5559 y(terminali)27
b(div)m(en)m(tano)i(disp)s(onibili)f(p)s(er)f(p)s(osizionere)h(gli)e
(altri)h(elemen)m(ti)i(e)e(p)s(er)g(connetterli)h(agli)e(altri)h
(elemen)m(ti.)1852 5873 y(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop -215 337 a Fh(2)161 b(Esempi)-215
556 y Fg(P)m(osizionamen)m(to)31 b(di)g(elemen)m(ti)g(a)f(2)h
(terminali)98 b Fi(La)26 b(Figura)g(illustra)h(il)f(p)s(osizionamen)m
(to)i(degli)f(elemen)m(ti)-215 676 y(a)34 b(due)h(terminali)h(nei)f
(tre)f(mo)s(di)h(p)s(ossibili.)50 b(L'elemen)m(to)36
b(a)f(sinistra)d(\022)-46 b(e)35 b(p)s(osizionato)f(median)m(te)i
Ff(\\rput)p Fi(,)h(quello)-215 796 y(al)32 b(cen)m(tro)h(median)m(te)h
Ff(\\ttput)f Fi(e)g(quello)g(a)f(destra)h(con)f Ff(\\ttputc)p
Fi(.)45 b(Gli)32 b(ultimi)h(due)g(elemen)m(ti)h(sono)e(etic)m(hettati)
-215 917 y(e)h(i)f(nomi)h(dei)g(pun)m(ti)h(agli)e(estremi)i
(dell'elemen)m(to)h(di)e(destra)g(sono)g(sfruttati)f(p)s(er)h(so)m
(vrapp)s(orre)h(i)e(morsetti.)-215 1092 y Ff
(\\rput{45}\(2,2\){\\psatt})-215 1213 y
(\\ttput\(5,4\)\(3,1\){\\psatt}_)q({$N_)q(1$})-215 1333
y(\\ttputc{145}\(6,2\){\\psatt})q({B}{)q(3}^{)q($g\()q(v\)$})-215
1454 y(\\psth\(Bp\)\\psth\(Bm\))931 2484 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  gsave 0.8 SLW 0. setgray
0.0 0.0 227.62195 113.81097 0.0 0.0 28.45274 28.45274 1 10 { 0. setgray
} 6.0 Grid grestore end
 
@endspecial 931 2484 a
 tx@Dict begin { 56.90549 56.90549 } PutCoor PutBegin  end
 931 2484 a 931 2484
a
 tx@Dict begin 45.  RotBegin  end
 931 2484 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.84544 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 15.6491 -5.69046 15.6491 5.69046  /Lineto /lineto
load def false Line  gsave 2.84544 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial 931 2484 a
 tx@Dict begin RotEnd  end
 931 2484 a 931 2484
a
 tx@Dict begin PutEnd  end
 931 2484 a 931 2484 a
 tx@Dict begin tx@NodeDict begin {85.35823 28.45274 } false /N@@@A
10 {InitPnode } NewNode end end
 931 2484 a 931 2484 a
 tx@Dict begin tx@NodeDict begin {142.26372 113.81097 } false /N@@@B
10 {InitPnode } NewNode end end
 931 2484
a 931 2484 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 931 2484 a 931 2484 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 931 2484 a 931 2484
a
 tx@Dict begin NAngle  RotBegin  end
 931 2484 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.84544 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 15.6491 -5.69046 15.6491 5.69046  /Lineto /lineto
load def false Line  gsave 2.84544 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial 931 2484 a
 tx@Dict begin RotEnd  end
 931 2484 a 931 2484
a
 tx@Dict begin PutEnd  end
 931 2484 a 931 2484 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 931 2484 a 931 2484 a
 tx@Dict begin { 11.38092 tx@Dict /NCLW known { NCLW add } if 14.15903
8.2 1.79999 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1
add exch } PutCoor PutBegin  end
 931 2484
a 872 2511 a Fd(N)950 2526 y Fc(1)931 2484 y
 tx@Dict begin PutEnd  end
 931 2484
a 931 2484 a
 tx@Dict begin PutEnd  end
 931 2484 a 931 2484 a
 tx@Dict begin { 170.71646 56.90549 } PutCoor PutBegin  end
 931 2484 a 931 2484
a
 tx@Dict begin 145.  RotBegin  end
 931 2484 a 931 2484 a
 tx@Dict begin tx@NodeDict begin {-42.67911 0.0 } false /N@Bm 10 {InitPnode
} NewNode end end
 931 2484 a 931 2484 a
 tx@Dict begin tx@NodeDict begin {42.67911 0.0 } false /N@Bp 10 {InitPnode
} NewNode end end
 931 2484
a 931 2484 a
 tx@Dict begin RotEnd  end
 931 2484 a 931 2484 a
 tx@Dict begin PutEnd  end
 931 2484 a 931 2484
a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@Bm
known { /N@Bm load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } NewNode end end
 931 2484 a 931 2484 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@Bp
known { /N@Bp load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 931 2484 a 931 2484 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 931 2484
a 931 2484 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 931 2484 a 931 2484 a
 tx@Dict begin NAngle  RotBegin  end
 931 2484 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 2.84544 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 15.6491 -5.69046 15.6491 5.69046  /Lineto /lineto
load def false Line  gsave 2.84544 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
931 2484 a
 tx@Dict begin RotEnd  end
 931 2484 a 931 2484 a
 tx@Dict begin PutEnd  end
 931 2484 a 931 2484
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 931 2484 a 931 2484 a
 tx@Dict begin { 11.38092 tx@Dict /NCLW known { NCLW add } if 21.30672
9.0 3.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 931 2484 a 843 2509 a Fd(g)t
Fi(\()p Fd(v)t Fi(\))931 2484 y
 tx@Dict begin PutEnd  end
 931 2484 a 931 2484 a
 tx@Dict begin PutEnd  end

931 2484 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /DS 5.69046 0. CLW mul
add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1. setgray (b) show grestore (c) show } bind def
tx@NodeDict begin tx@NodeDict /N@Bp known { /N@Bp load GetCenter }
{ 0 0 } ifelse end Dot end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /DS 5.69046 0. CLW mul
add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1. setgray (b) show grestore (c) show } bind def
tx@NodeDict begin tx@NodeDict /N@Bm known { /N@Bm load GetCenter }
{ 0 0 } ifelse end Dot end
 
@endspecial -215 2737 a Fg(De\014nizione)46
b(relativ)-6 b(a)46 b(dei)g(pun)m(ti)98 b Fi(La)40 b(Figura)f(illustra)
h(il)f(p)s(osizionamen)m(to)i(relativ)m(o)f(dei)h(pun)m(ti)f(p)s(er)g
(la)-215 2858 y(costruzione)30 b(di)e(un)h(p)s(on)m(te)g(di)f
(Wheatstone.)43 b(Il)29 b(pun)m(to)g(F)c(\022)-46 b(e)28
b(de\014nito)h(in)g(mo)s(do)f(assoluto)h(men)m(tre)g(tutti)g(gli)f
(altri)-215 2978 y(pun)m(ti)h(notev)m(oli)h(sono)f(de\014niti)g(risp)s
(etto)g(ad)g(F)f(median)m(te)i Ff(\\pnoder)p Fi(.)44
b(La)29 b(parte)f(sinistra)i(della)f(rete)e(\022)-46
b(e)28 b(costruita)-215 3098 y(con)33 b(sp)s(ezzata)g(e)g(n)m(ucleo)h
(so)m(vrapp)s(osto.)-215 3274 y Ff(\\pnode\(7,2.5\){F}\\nput{0}{)q
(F}{F)q(})-215 3394 y(\\pnoder\(F\)\(-2,2.5\){A}\\npu)q(t{0})q({A}{)q
(A})-215 3515 y(\\pnoder\(F\)\(-2,-2.5\){B}\\np)q(ut{0)q(}{B})q({B})
-215 3635 y(\\pnoder\(F\)\(-4,0\){C}\\nput{)q(0}{C)q(}{C})-215
3756 y(\\pnoder\(F\)\(-5,0\){D}\\nput{)q(0}{D)q(}{D})-215
3876 y(\045)-215 3996 y(\\ttput\(F\)\(A\){\\psatt}\\ttpu)q(t\(F\))q
(\(B\){)q(\\ps)q(tt})-215 4117 y(\\ttput\(C\)\(A\){\\pstt}\\ttput)q
(\(C\)\()q(B\){\\)q(pst)q(t})-215 4237 y(\045)-215 4358
y(\\psline\(A\)\(D|A\)\(D|B\)\(B\)\\r)q(put{)q(90}\()q(D\){)q(\\pst)q
(t})931 5624 y
 tx@Dict begin tx@NodeDict begin {199.1692 71.13185 } false /N@F 10
{InitPnode } NewNode end end
 931 5624 a 931 5624 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@F known { 11.38092
0. /N@F load 0 GetEdge 0.0 0. AddOffset /N@F load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 931 5624 a 931 5624
a
 tx@Dict begin { 0.0 7.66798 8.2 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 931 5624 a 899 5658 a Fi(F)931 5624 y
 tx@Dict begin PutEnd  end
 931 5624 a 931
5624 a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@F known { /N@F load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 931 5624 a 931 5624 a
 tx@Dict begin tx@NodeDict begin {-56.90549 71.13185 } false /N@A 10
{InitPnode } NewNode end end
 931
5624 a 931 5624 a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@A known { 11.38092
0. /N@A load 0 GetEdge 0.0 0. AddOffset /N@A load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 931 5624 a 931
5624 a
 tx@Dict begin { 0.0 8.80824 8.2 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 931 5624 a 894 5658 a Fi(A)931 5624 y
 tx@Dict begin PutEnd  end
 931 5624
a 931 5624 a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@F known { /N@F load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 931 5624 a 931 5624
a
 tx@Dict begin tx@NodeDict begin {-56.90549 -71.13185 } false /N@B
10 {InitPnode } NewNode end end
 931 5624 a 931 5624 a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@B known { 11.38092
0. /N@B load 0 GetEdge 0.0 0. AddOffset /N@B load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 931 5624
a 931 5624 a
 tx@Dict begin { 0.0 8.32076 8.2 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 931 5624 a 896 5658 a Fi(B)931 5624 y
 tx@Dict begin PutEnd  end
 931
5624 a 931 5624 a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@F known { /N@F load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 931 5624 a 931
5624 a
 tx@Dict begin tx@NodeDict begin {-113.81097 0.0 } false /N@C 10 {InitPnode
} NewNode end end
 931 5624 a 931 5624 a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C known { 11.38092
0. /N@C load 0 GetEdge 0.0 0. AddOffset /N@C load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 931
5624 a 931 5624 a
 tx@Dict begin { 0.0 8.48602 8.2 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 931 5624 a 896 5658 a Fi(C)931 5624
y
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@F known { /N@F load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 931 5624
a 931 5624 a
 tx@Dict begin tx@NodeDict begin {-142.26372 0.0 } false /N@D 10 {InitPnode
} NewNode end end
 931 5624 a 931 5624 a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624
a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@D known { 11.38092
0. /N@D load 0 GetEdge 0.0 0. AddOffset /N@D load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 931 5624 a 931 5624 a
 tx@Dict begin { 0.0 8.97353 8.2 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 931 5624 a 894 5658 a Fi(D)931
5624 y
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } NewNode end end
 931
5624 a 931 5624 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@F
known { /N@F load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 931 5624 a 931 5624 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 931 5624 a 931
5624 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 931 5624 a 931 5624 a
 tx@Dict begin NAngle  RotBegin  end
 931 5624 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 2.84544 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 15.6491 -5.69046 15.6491 5.69046  /Lineto /lineto
load def false Line  gsave 2.84544 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
931 5624 a
 tx@Dict begin RotEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624
a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } NewNode end end
 931 5624 a 931 5624 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@F
known { /N@F load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 931 5624 a 931 5624 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 931 5624
a 931 5624 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 931 5624 a 931 5624 a
 tx@Dict begin NAngle  RotBegin  end
 931 5624 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 931 5624 a
 tx@Dict begin RotEnd  end
 931 5624 a 931 5624
a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } NewNode end end
 931 5624 a 931 5624 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@C
known { /N@C load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 931 5624
a 931 5624 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 931 5624 a 931 5624 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 931 5624 a 931 5624
a
 tx@Dict begin NAngle  RotBegin  end
 931 5624 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 931
5624 a
 tx@Dict begin RotEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin PutEnd  end
 931 5624 a 931 5624 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } NewNode end end
 931
5624 a 931 5624 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@C
known { /N@C load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 931 5624 a 931 5624 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 931 5624 a 931
5624 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 931 5624 a 931 5624 a
 tx@Dict begin NAngle  RotBegin  end
 931 5624 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 931 5624 a
 tx@Dict begin RotEnd  end
 931 5624 a 931 5624
a
 tx@Dict begin PutEnd  end
 931 5624 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ tx@NodeDict begin tx@NodeDict /N@B known { /N@B load
GetCenter } { 0 0 } ifelse end tx@NodeDict begin tx@NodeDict /N@D known
{ /N@D load GetCenter } { 0 0 } ifelse end pop tx@NodeDict begin tx@NodeDict
/N@B known { /N@B load GetCenter } { 0 0 } ifelse end exch pop tx@NodeDict
begin tx@NodeDict /N@D known { /N@D load GetCenter } { 0 0 } ifelse
end pop tx@NodeDict begin tx@NodeDict /N@A known { /N@A load GetCenter
} { 0 0 } ifelse end exch pop tx@NodeDict begin tx@NodeDict /N@A known
{ /N@A load GetCenter } { 0 0 } ifelse end  /Lineto /lineto load def
false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial 931
5624 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@D known { /N@D load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 931 5624 a 931 5624 a
 tx@Dict begin 90.  RotBegin  end
 931 5624 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 931 5624 a
 tx@Dict begin RotEnd  end
 931 5624 a 931 5624
a
 tx@Dict begin PutEnd  end
 931 5624 a 1852 5873 a Fi(3)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop -215 337 a Fg(Sc)m(hemi)54 b(informali)99
b Fi(L'uso)47 b(della)f(descrizione)j(median)m(te)e(bigra\014)f(si)h
(presta)g(alla)f(creazione)h(di)g(sc)m(hemi)-215 457
y(in)m(usuali)30 b(con)e(collegamen)m(ti)i(curvilinei.)44
b(La)28 b(Figura)g(esempli\014ca)j(l'uso)e(dei)g(comandi)g
Ff(\\ttputc)h Fi(e)f Ff(\\pcarc)g Fi(p)s(er)-215 577
y(la)j(creazione)i(di)f(un)g(parallelo)f(di)h(due)g(elemen)m(ti)i(con)e
(connessioni)h(curvilinee.)-215 806 y Ff(\\ttputc{0}\(3,3\){\\psatt}{B)
q(1}{0)q(}^{$)q(N_1)q(\(v\)$)q(})-215 926 y
(\\ttputc{0}\(3,1\){\\pstt}{B2)q(}{0})-215 1046 y
(\\pcarc[arcangle=20]\(B1p\)\()q(6,2\))q(\\pca)q(rc[)q(arca)q(ngle)q
(=20])q(\(6,2)q(\)\(B)q(2p\))-215 1167 y(\\pcarc[arcangle=20]\(B2m\)\()
q(0,2\))q(\\pca)q(rc[)q(arca)q(ngle)q(=20])q(\(0,2)q(\)\(B)q(1m\))-215
1287 y(\\psn\(6,2\)\\psn\(0,2\))1168 2370 y
 tx@Dict begin { 85.35823 85.35823 } PutCoor PutBegin  end
 1168 2370
a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {-19.91682 0.0 } false /N@B1m 10 {InitPnode
} NewNode end end
 1168 2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {19.91682 0.0 } false /N@B1p 10 {InitPnode
} NewNode end end
 1168 2370 a 1168
2370 a
 tx@Dict begin PutEnd  end
 1168 2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B1m
known { /N@B1m load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } NewNode end end
 1168 2370 a 1168 2370
a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B1p
known { /N@B1p load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 1168 2370 a 1168 2370 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 1168 2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1168
2370 a 1168 2370 a
 tx@Dict begin NAngle  RotBegin  end
 1168 2370 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 2.84544 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 15.6491 -5.69046 15.6491 5.69046  /Lineto /lineto
load def false Line  gsave 2.84544 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial 1168
2370 a
 tx@Dict begin RotEnd  end
 1168 2370 a 1168 2370 a
 tx@Dict begin PutEnd  end
 1168 2370 a 1168 2370
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1168 2370 a 1168 2370 a
 tx@Dict begin { 11.38092 tx@Dict /NCLW known { NCLW add } if 29.40886
9.0 3.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 1168 2370 a 1046 2395 a Fd(N)1124
2410 y Fc(1)1163 2395 y Fi(\()p Fd(v)t Fi(\))1168 2370
y
 tx@Dict begin PutEnd  end
 1168 2370 a 1168 2370 a
 tx@Dict begin PutEnd  end
 1168 2370 a 1168 2370 a
 tx@Dict begin { 85.35823 28.45274 } PutCoor PutBegin  end
 1168
2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {-19.91682 0.0 } false /N@B2m 10 {InitPnode
} NewNode end end
 1168 2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {19.91682 0.0 } false /N@B2p 10 {InitPnode
} NewNode end end
 1168 2370
a 1168 2370 a
 tx@Dict begin PutEnd  end
 1168 2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B2m
known { /N@B2m load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } NewNode end end
 1168 2370 a 1168
2370 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B2p
known { /N@B2p load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 1168 2370 a 1168 2370 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 1168 2370 a 1168 2370
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1168 2370 a 1168 2370 a
 tx@Dict begin NAngle  RotBegin  end
 1168 2370 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 1168 2370 a
 tx@Dict begin RotEnd  end
 1168 2370 a 1168 2370 a
 tx@Dict begin PutEnd  end
 1168
2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B1p
known { /N@B1p load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } NewNode end end
 1168 2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {170.71646 56.90549 } false /N@@@B
10 {InitPnode } NewNode end end
 1168 2370
a 1168 2370 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { yB yA sub xB xA sub Atan dup 20.  add
/AngleA ED 20.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1168 2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {170.71646 56.90549 } false /N@@@A
10 {InitPnode } NewNode end end
 1168 2370 a 1168
2370 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B2p
known { /N@B2p load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 1168 2370 a 1168 2370 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { yB yA sub xB xA sub Atan dup 20.  add
/AngleA ED 20.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1168 2370 a 1168 2370
a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B2m
known { /N@B2m load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } NewNode end end
 1168 2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {0.0 56.90549 } false /N@@@B 10 {InitPnode
} NewNode end end
 1168 2370 a 1168 2370 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { yB yA sub xB xA sub Atan dup 20.  add
/AngleA ED 20.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1168
2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {0.0 56.90549 } false /N@@@A 10 {InitPnode
} NewNode end end
 1168 2370 a 1168 2370 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B1m
known { /N@B1m load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 1168 2370
a 1168 2370 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { yB yA sub xB xA sub Atan dup 20.  add
/AngleA ED 20.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1168 2370 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /DS 4.26773 0. CLW mul
add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto (b) show } bind def 170.71646 56.90549 Dot end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /DS 4.26773 0. CLW mul
add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto (b) show } bind def 0.0 56.90549 Dot end
 
@endspecial -215 2630 a Fg(P)m(osizionamen)m
(to)g(di)g(elemen)m(ti)g(con)g(pi)s(\022)-59 b(u)34 b(di)g(due)g
(terminali)98 b Fi(La)29 b(Figura)g(illustra)g(l'uso)h(del)g(p)s
(omando)-215 2751 y Ff(\\psccoa)j Fi(p)s(er)e(disegnare)h(un)g
(ampli\014catore)g(op)s(erazionale)f(disegnato)h(in)f(v)m(erso)i(cc)f
(\(coun)m(ter-clo)s(c)m(kwise,)i(cio)m(\022)-46 b(e)-215
2871 y(in)m(v)m(erten)m(te,)34 b(non)c(in)m(v)m(erten)m(te,)k(uscita\))
d(con)g(orien)m(tamen)m(to)h(arbitrario.)42 b(I)31 b(nomi)g(dei)g(pun)m
(ti)g(estremi)h(dei)g(termi-)-215 2991 y(nali)h(sono)g(creati)g(con)g
(la)g(regola)g Ff(hmroot)p Fi(m,)i Ff(hmroot)p Fi(p,)f
Ff(hmroot)p Fi(o,)h Ff(hmroot)p Fi(g)f(e)f(sono)g(asso)s(ciati)h
(nell'ordine)g(ai)-215 3112 y(morsetti)g Fb(\000)p Fi(,)h(+,)f(uscita)g
(e)g(terra.)46 b(I)34 b(nomi)g(dei)g(pun)m(ti)h(estremi)g(sono)f(p)s
(oi)f(usati)h(p)s(er)g(tracciare)g(la)f(connessione)-215
3232 y(di)g(fan)m(tasia)f(c)m(he)i(compare)f(median)m(te)h(un)f
(comando)g Ff(\\psline)p Fi(.)-215 3460 y Ff
(\\psccoa{10}\(4,2\){a1}{4})-215 3581 y(\\pnoder\(a1m\)\(-3,-2\){P})
-215 3701 y(\\psline\(a1m\)\(P|a1m\)\(P\)\(a1)q(g|P\))q(\(a1g)q(\))-215
3822 y(\\rput\(a1g|P\){\\psgr})931 4905 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  gsave 0.8 SLW 0. setgray
0.0 0.0 227.62195 113.81097 0.0 0.0 28.45274 28.45274 1 10 { 0. setgray
} 6.0 Grid grestore end
 
@endspecial 931 4905 a
 tx@Dict begin { 113.81097 56.90549 } PutCoor PutBegin  end
 931 4905 a 931 4905
a
 tx@Dict begin 10.  RotBegin  end
 931 4905 a 931 4905 a
 tx@Dict begin tx@NodeDict begin {-56.90549 14.22636 } false /N@a1m
10 {InitPnode } NewNode end end
 931 4905 a 931 4905 a
 tx@Dict begin tx@NodeDict begin {-56.90549 -14.22636 } false /N@a1p
10 {InitPnode } NewNode end end
 931 4905
a 931 4905 a
 tx@Dict begin tx@NodeDict begin {56.90549 0.0 } false /N@a1o 10 {InitPnode
} NewNode end end
 931 4905 a 931 4905 a
 tx@Dict begin tx@NodeDict begin {0.0 -28.45274 } false /N@a1g 10 {InitPnode
} NewNode end end
 931 4905 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 0.0 14.22636 tx@NodeDict begin tx@NodeDict /N@a1m
known { /N@a1m load GetCenter } { 0 0 } ifelse end  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 0.0 -14.22636 tx@NodeDict begin tx@NodeDict /N@a1p
known { /N@a1p load GetCenter } { 0 0 } ifelse end  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ tx@NodeDict begin tx@NodeDict /N@a1o known { /N@a1o
load GetCenter } { 0 0 } ifelse end 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ tx@NodeDict begin tx@NodeDict /N@a1g known { /N@a1g
load GetCenter } { 0 0 } ifelse end 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  [ -28.45274 -28.45274
-28.45274 28.45274 28.45274 0.0  /Lineto /lineto load def false Polygon
 gsave 1. setgray fill grestore gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
931 4905 a
 tx@Dict begin { -19.91682 -14.22636 } PutCoor PutBegin  end
 931 4905 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.85355 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 4.26773 0.0 -4.26773  /Lineto /lineto load
def false Line  gsave 0.85355 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.85355 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 4.26773 0.0 -4.26773 0.0  /Lineto /lineto load
def false Line  gsave 0.85355 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial 931 4905 a
 tx@Dict begin PutEnd  end
 931
4905 a 931 4905 a
 tx@Dict begin { -19.91682 14.22636 } PutCoor PutBegin  end
 931 4905 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.85355 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 4.26773 0.0 -4.26773 0.0  /Lineto /lineto load
def false Line  gsave 0.85355 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial 931 4905 a
 tx@Dict begin PutEnd  end
 931 4905 a 931 4905 a
 tx@Dict begin RotEnd  end
 931 4905
a 931 4905 a
 tx@Dict begin PutEnd  end
 931 4905 a 931 4905 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@a1m known { /N@a1m
load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 931 4905 a 931 4905
a
 tx@Dict begin tx@NodeDict begin {-85.35823 -56.90549 } false /N@P
10 {InitPnode } NewNode end end
 931 4905 a 931 4905 a
 tx@Dict begin PutEnd  end
 931 4905 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ tx@NodeDict begin tx@NodeDict /N@a1g known { /N@a1g
load GetCenter } { 0 0 } ifelse end tx@NodeDict begin tx@NodeDict /N@a1g
known { /N@a1g load GetCenter } { 0 0 } ifelse end pop tx@NodeDict
begin tx@NodeDict /N@P known { /N@P load GetCenter } { 0 0 } ifelse
end exch pop tx@NodeDict begin tx@NodeDict /N@P known { /N@P load GetCenter
} { 0 0 } ifelse end tx@NodeDict begin tx@NodeDict /N@P known { /N@P
load GetCenter } { 0 0 } ifelse end pop tx@NodeDict begin tx@NodeDict
/N@a1m known { /N@a1m load GetCenter } { 0 0 } ifelse end exch pop
tx@NodeDict begin tx@NodeDict /N@a1m known { /N@a1m load GetCenter
} { 0 0 } ifelse end  /Lineto /lineto load def false Line  gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 931 4905 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@a1g known { /N@a1g
load GetCenter } { 0 0 } ifelse end pop tx@NodeDict begin tx@NodeDict
/N@P known { /N@P load GetCenter } { 0 0 } ifelse end exch pop } PutCoor
PutBegin  end
 931 4905 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 0.0 -14.22636 0.0 0.0  /Lineto /lineto load def false
Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 10.243 -14.22636 -10.243 -14.22636  /Lineto
/lineto load def false Line  gsave 1.13791 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 6.40204 -17.21378 -6.40204 -17.21378  /Lineto
/lineto load def false Line  gsave 1.13791 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 2.84544 -19.91682 -2.84544 -19.91682  /Lineto
/lineto load def false Line  gsave 1.13791 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
931 4905 a
 tx@Dict begin PutEnd  end
 931 4905 a -215 5165 a Fg(Esempio)i(\014nale)99
b Fi(La)30 b(Figura)g(illustra)g(un)h(esempio)h(complesso)g(con)e(due)h
(elemen)m(ti)h(con)f(pi)s(\022)-51 b(u)29 b(di)i(due)g(termi-)-215
5285 y(nali.)43 b(P)m(er)33 b(primo)f(viene)h(p)s(osizionato)f
(l'ampli\014catore)g(e)g(median)m(te)h(i)f(nomi)g(dei)g(suoi)g(pun)m
(ti)h(estremi)g(v)m(engono)-215 5405 y(de\014niti)46
b(gli)f(altri)g(pun)m(ti)h(notev)m(oli)g(dello)g(sc)m(hema.)83
b(Gli)45 b(elemen)m(ti)i(rimanen)m(ti)f(sono)g(aggiun)m(ti)f(usando)h
(una)-215 5526 y(miscela)34 b(delle)g(tecnic)m(he)g(descritte.)1852
5873 y(4)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop -215 337 a Ff(\\pnode\(7,2\){C})-215
457 y(\\psccoa{0}\(C\){a}{4})-215 577 y
(\\pnoder\(am\)\(-3,-1\){tpc}\\p)q(node)q(r\(am)q(\)\(5)q(,-.5)q(\){oa)
q(})-215 698 y(\\pnoder\(am\)\(5,-2\){ob}\\pno)q(der\()q(C\)\(0)q(,1.)q
(5\){F)q(})-215 818 y(\\pstp{0}\(tpc\){tp}{2}{2})-215
939 y(\045)-215 1059 y(\\ttput\(am\)\(tp21\){\\psatt}_)q({Z\(s)q(\)})
-215 1179 y(\\ttput\(tp11\)\(tp12\){\\pstt})-215 1300
y(\\psline\(am\)\(am|F\)\(ao|F\)\(a)q(o\)\(o)q(a\)\\r)q(put)q(\(F\){)q
(\\pst)q(t})-215 1420 y(\045)-215 1540 y
(\\psline\(tp22\)\(ob\)\\ttput\(a)q(p\)\(a)q(p|ob)q(\){\\)q(psah)q
(}^{$)q(i_+$)q(})-215 1661 y(\\psline\(ag\)\(ag|ob\))-215
1781 y(\\psth\(oa\)\\psth\(ob\)\\rput\(a)q(g|ob)q(\){\\p)q(sgr)q(})-215
1902 y(\045)-215 2022 y(\\psvrd\(oa\)\(ob\){-30}{$v_u\()q(t\)$})813
3341 y
 tx@Dict begin tx@NodeDict begin {199.1692 56.90549 } false /N@C 10
{InitPnode } NewNode end end
 813 3341 a 813 3341 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C known { /N@C load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {-56.90549 14.22636 } false /N@am
10 {InitPnode } NewNode end end
 813
3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {-56.90549 -14.22636 } false /N@ap
10 {InitPnode } NewNode end end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {56.90549 0.0 } false /N@ao 10 {InitPnode
} NewNode end end
 813 3341 a 813
3341 a
 tx@Dict begin tx@NodeDict begin {0.0 -28.45274 } false /N@ag 10 {InitPnode
} NewNode end end
 813 3341 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 0.0 14.22636 tx@NodeDict begin tx@NodeDict /N@am
known { /N@am load GetCenter } { 0 0 } ifelse end  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 0.0 -14.22636 tx@NodeDict begin tx@NodeDict /N@ap
known { /N@ap load GetCenter } { 0 0 } ifelse end  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ tx@NodeDict begin tx@NodeDict /N@ao known { /N@ao
load GetCenter } { 0 0 } ifelse end 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ tx@NodeDict begin tx@NodeDict /N@ag known { /N@ag
load GetCenter } { 0 0 } ifelse end 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  [ -28.45274 -28.45274
-28.45274 28.45274 28.45274 0.0  /Lineto /lineto load def false Polygon
 gsave 1. setgray fill grestore gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 813 3341 a
 tx@Dict begin { -19.91682 -14.22636 } PutCoor PutBegin  end
 813
3341 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.85355 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 4.26773 0.0 -4.26773  /Lineto /lineto load
def false Line  gsave 0.85355 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.85355 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 4.26773 0.0 -4.26773 0.0  /Lineto /lineto load
def false Line  gsave 0.85355 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial 813 3341 a
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341
a
 tx@Dict begin { -19.91682 14.22636 } PutCoor PutBegin  end
 813 3341 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.85355 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 4.26773 0.0 -4.26773 0.0  /Lineto /lineto load
def false Line  gsave 0.85355 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial 813
3341 a
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341 a
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@am known { /N@am
load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 813
3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {-85.35823 -28.45274 } false /N@tpc
10 {InitPnode } NewNode end end
 813 3341 a 813 3341 a
 tx@Dict begin PutEnd  end
 813 3341 a 813
3341 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@am known { /N@am
load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {142.26372 -14.22636 } false /N@oa
10 {InitPnode } NewNode end end
 813 3341 a 813 3341 a
 tx@Dict begin PutEnd  end
 813
3341 a 813 3341 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@am known { /N@am
load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {142.26372 -56.90549 } false /N@ob
10 {InitPnode } NewNode end end
 813 3341 a 813
3341 a
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@C known { /N@C load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {0.0 42.67911 } false /N@F 10 {InitPnode
} NewNode end end
 813
3341 a 813 3341 a
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@tpc known { /N@tpc
load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 813 3341 a 813
3341 a
 tx@Dict begin tx@NodeDict begin {-28.45274 28.45274 } false /N@tp11
10 {InitPnode } NewNode end end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {-28.45274 -28.45274 } false /N@tp12
10 {InitPnode } NewNode end end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {28.45274 28.45274 } false /N@tp21
10 {InitPnode } NewNode end end
 813
3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {28.45274 -28.45274 } false /N@tp22
10 {InitPnode } NewNode end end
 813 3341 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ tx@NodeDict begin tx@NodeDict /N@tp21 known { /N@tp21
load GetCenter } { 0 0 } ifelse end tx@NodeDict begin tx@NodeDict /N@tp11
known { /N@tp11 load GetCenter } { 0 0 } ifelse end  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ tx@NodeDict begin tx@NodeDict /N@tp22 known { /N@tp22
load GetCenter } { 0 0 } ifelse end tx@NodeDict begin tx@NodeDict /N@tp12
known { /N@tp12 load GetCenter } { 0 0 } ifelse end  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -15.6491 -39.83366
15.6491 39.83366 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 813 3341 a
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341
a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tp21
known { /N@tp21 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } NewNode end end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@am
known { /N@am load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 813 3341 a 813 3341 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 813 3341
a 813 3341 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 813 3341 a 813 3341 a
 tx@Dict begin NAngle  RotBegin  end
 813 3341 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 2.84544 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 15.6491 -5.69046 15.6491 5.69046  /Lineto /lineto
load def false Line  gsave 2.84544 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
813 3341 a
 tx@Dict begin RotEnd  end
 813 3341 a 813 3341 a
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 813 3341 a 813 3341 a
 tx@Dict begin { 11.38092 tx@Dict /NCLW known { NCLW add } if 20.95395
9.0 3.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 813 3341 a 726 3366 a Fi(Z\(s\))813
3341 y
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341 a
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tp12
known { /N@tp12 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } NewNode end end
 813
3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tp11
known { /N@tp11 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } NewNode end end
 813 3341 a 813 3341 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 813 3341 a 813
3341 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 813 3341 a 813 3341 a
 tx@Dict begin NAngle  RotBegin  end
 813 3341 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 813 3341 a
 tx@Dict begin RotEnd  end
 813 3341 a 813 3341
a
 tx@Dict begin PutEnd  end
 813 3341 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ tx@NodeDict begin tx@NodeDict /N@oa known { /N@oa
load GetCenter } { 0 0 } ifelse end tx@NodeDict begin tx@NodeDict /N@ao
known { /N@ao load GetCenter } { 0 0 } ifelse end tx@NodeDict begin
tx@NodeDict /N@ao known { /N@ao load GetCenter } { 0 0 } ifelse end
pop tx@NodeDict begin tx@NodeDict /N@F known { /N@F load GetCenter
} { 0 0 } ifelse end exch pop tx@NodeDict begin tx@NodeDict /N@am known
{ /N@am load GetCenter } { 0 0 } ifelse end pop tx@NodeDict begin tx@NodeDict
/N@F known { /N@F load GetCenter } { 0 0 } ifelse end exch pop tx@NodeDict
begin tx@NodeDict /N@am known { /N@am load GetCenter } { 0 0 } ifelse
end  /Lineto /lineto load def false Line  gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore end
 
@endspecial 813
3341 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@F known { /N@F load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 813 3341 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -17.07181 -5.69046
17.07181 5.69046 .5 Frame  gsave 1. setgray fill grestore gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial
813 3341 a
 tx@Dict begin PutEnd  end
 813 3341 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ tx@NodeDict begin tx@NodeDict /N@ob known { /N@ob
load GetCenter } { 0 0 } ifelse end tx@NodeDict begin tx@NodeDict /N@tp22
known { /N@tp22 load GetCenter } { 0 0 } ifelse end  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial
813 3341 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@ap
known { /N@ap load GetCenter } { 0 0 } ifelse end pop tx@NodeDict begin
tx@NodeDict /N@ob known { /N@ob load GetCenter } { 0 0 } ifelse end
exch pop } false /N@@@A 10 {InitPnode } NewNode end end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@ap
known { /N@ap load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 813 3341 a 813 3341
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 813 3341 a 813 3341 a
 tx@Dict begin NAngle  RotBegin  end
 813 3341
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { BeginArrow false 0.4 1.4 5.69046 0. Arrow  EndArrow  } def
[ 2.84544 0.0 -2.84544 0.0  /Lineto /lineto load def false Line  gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 813 3341 a
 tx@Dict begin RotEnd  end
 813
3341 a 813 3341 a
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 813 3341 a 813
3341 a
 tx@Dict begin { 11.38092 tx@Dict /NCLW known { NCLW add } if 11.11961
7.86708 2.63336 NAngle 90 add  Uput exch pop add a PtoC h1 add exch
w1 add exch } PutCoor PutBegin  end
 813 3341 a 767 3363 a Fd(i)800 3378 y Fc(+)813
3341 y
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341 a
 tx@Dict begin PutEnd  end
 813 3341 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ tx@NodeDict begin tx@NodeDict /N@ag known { /N@ag
load GetCenter } { 0 0 } ifelse end pop tx@NodeDict begin tx@NodeDict
/N@ob known { /N@ob load GetCenter } { 0 0 } ifelse end exch pop tx@NodeDict
begin tx@NodeDict /N@ag known { /N@ag load GetCenter } { 0 0 } ifelse
end  /Lineto /lineto load def false Line  gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /DS 5.69046 0. CLW mul
add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1. setgray (b) show grestore (c) show } bind def
tx@NodeDict begin tx@NodeDict /N@oa known { /N@oa load GetCenter }
{ 0 0 } ifelse end Dot end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /DS 5.69046 0. CLW mul
add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot
/Dot { moveto gsave 1. setgray (b) show grestore (c) show } bind def
tx@NodeDict begin tx@NodeDict /N@ob known { /N@ob load GetCenter }
{ 0 0 } ifelse end Dot end
 
@endspecial 813 3341 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ag known { /N@ag
load GetCenter } { 0 0 } ifelse end pop tx@NodeDict begin tx@NodeDict
/N@ob known { /N@ob load GetCenter } { 0 0 } ifelse end exch pop }
PutCoor PutBegin  end
 813
3341 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 0.0 -14.22636 0.0 0.0  /Lineto /lineto load def false
Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 10.243 -14.22636 -10.243 -14.22636  /Lineto
/lineto load def false Line  gsave 1.13791 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 6.40204 -17.21378 -6.40204 -17.21378  /Lineto
/lineto load def false Line  gsave 1.13791 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def [ 2.84544 -19.91682 -2.84544 -19.91682  /Lineto
/lineto load def false Line  gsave 1.13791 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 813 3341 a
 tx@Dict begin PutEnd  end
 813
3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@ob
known { /N@ob load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } NewNode end end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@oa
known { /N@oa load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } NewNode end end
 813 3341 a 813
3341 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 2.  2.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 8.5359
8.5359 0 0 /N@@@A /N@@@B InitNC { yB yA sub xB xA sub Atan dup -30.
 add /AngleA ED -30.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 813 3341 a 813 3341 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 813 3341 a 813 3341 a
 tx@Dict begin { 11.38092 tx@Dict /NCLW known { NCLW add } if 24.48364
9.0 3.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 813
3341 a 712 3366 a Fd(v)759 3381 y Fa(u)804 3366 y Fi(\()p
Fd(t)p Fi(\))813 3341 y
 tx@Dict begin PutEnd  end
 813 3341 a 813 3341 a
 tx@Dict begin PutEnd  end
 813 3341
a 1852 5873 a Fi(5)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
