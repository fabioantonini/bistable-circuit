%!PS-Adobe-2.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: pstype.dvi
%%CreationDate: Tue Dec 02 09:44:46 2003
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMTT12 CMBX12 CMR12
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: C:\Programmi\texmf\miktex\bin\dvips.exe pstype
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.12.02:0944
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMTT12
%!PS-AdobeFont-1.1: CMTT12 1.0
%%CreationDate: 1991 Aug 20 16:45:46
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 59 /semicolon put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 79 /O put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
readonly def
/FontBBox{-1 -234 524 695}readonly def
/UniqueID 5000833 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660FE13FF01BC20148F9C480BCD0E
C81D5BFC66F04993DD73F0BE0AB13F53B1BA79FE5F618A4F672B16C06BE3251E
3BCB599BFA0E6041FBD558475370D693A959259A2699BA6E97CF40435B8E8A4B
426343E145DF14E59028D4E0941AB537E34024E6CDE0EA9AF8038A3260A0358D
D5B1DB53582F0DAB7ADE29CF8DBA0992D5A94672DFF91573F38D9BFD1A57E161
E52DA1B41433C82261E47F79997DF603935D2A187A95F7A25D148FB3C2B6AA32
6B982C32C6B25867871ED7B38E150031A3DE568C8D3731A779EAAF09AC5CE6C5
A129C4147E56882B8068DF37C97C761694F1316AF93E33FF7E0B2F1F252735CE
0D9F7BCE136B06EE967ABE0C8DF24DCBBF99874702ED252B677F407CB39678CC
85DDFC2F45C552BA967E4158165ED16FECC4E32AC4D3B3EB8046DCDD37C92FDF
F1F3710BB8EF5CA358ABACA33C7E5ACAD6BF5DC58BDFC3CF09BA2A38291D45A4
C15FF1916FE2EC47FDC80911EB9C61F5D355BEDFC9DB17588547763AC5F0B1CC
12D2FFB32E0803D37E3281DA9CE36C5433655526ACFB3A301C56FAB09DF07B5D
048B47687348DEB96F3F9C53CE56DDD312B93D3918CD92AF53FB9461864D11B8
0138918D0B1270C54873C4012CDE6F886DB11BCEA04B023EBB43E0D0A06BE725
741D08B9DB688731A6C9886C15A83C28DADCC81385EA239E045E8F3670CE03DB
9EE77ED067036595C9F3B1854343BE3A12E486B6E5A2F8AC44FA5378D28DCCEE
306B0E283AA444423F9A4FF38E2B56DCF67A39CEB2C643DAE86865517D5D0371
CB8797208ADEC637330A3A57902C9A88EDB75A7C16FA9850075D9F19578EC666
1353CC1FC512D59DFF847ACCD72B56698531954A794518DA13E7233051358B12
E79A597DE74CFE1407044BAE98618166E724428B7060BAE2ADD8C246E524285E
9CC004A2463770E3FF844C95B005738815BE3B1FD7E9E9879BB6175A3BB1AD8A
AABC908D7CE0A7518E3EF9DF9441EF3116F94BF698A9B789F367E63FDC7C933C
66FCC67268F27BC7AE5214FB0E075201C13053629B31C538E526A45D8CD4B65C
EC2B43F91E55E22BFD5AD9AEEBC18AA6C345F89B76BB8B0B3CFA70E4A5395372
117CE995AAC654251946A623AA5E04AB010893A20E3B9038B4B2A743A0E9F69E
BAB0F9C3F031F34818CBC50D9943332DAB04F0E5745F05DA7803DFC7719DB057
BC04A721B6D196A84A19576EB21910B7D0B3E331FC03EE1E9229572A9EC83CD1
BDC4E18E46D2094BA514A5C2510509C4CFA0D48AEC9CCE312C48A2F493B08A38
878CC95531E8F4A03A200A20AEEF84245C1CE4F2F51F29FB6D7AC53FE9A5B7C3
A721D0B630CCEA574A9A46F1AC2E826EEB19ED32093499D459711F19AE46914B
BA7C631338E18B5319D2D3544BBC6ECCDC95881AA2C4F833EFC2E2A46CE1E5A2
497E54B838D36B981385DC0107B45CE46704F589947F8F5CF18D7BE371ED1AD9
75CBB4D6B7C7C5757CEE51D8F88A22AAF564B0072AFA6EABF0AD274FCE2100E8
B686BEEB1D88A9FAC524250D69ACD13A4AEF6E40A21E13666AA4EAE4E3EADA50
0CF71E2A443963D6C527F64DBB4AD466BC35075418A9F161D9818F33F6AAE63E
F569CC561A2CA1FA32E3B1D92307E14145D05DE849CCF49472474B11C1E8DF29
D105C5D546434534BAAC0702042FDCF9F557994515F534C8DEC0B3CB089C8E38
D092997B4A1FEEFF4D8E64AACC25927EAB17EC7520827A89CE01DDCD566AAD5E
13FB6D8937C5DF65785C738B36BB092A1B2A3C547F0FB717BD5981F113EA3FA9
C4AD71D8926B820DD4F7927B6751D3547109FB590806CCFCC9D4B6179E7D0E7D
100694C48BD24A19E01AF05FA26E121117B37B835B9E7230BC1F18A3B63394FC
657F8DCF136BC3C2FFB5CC2802C991C7E6420C23E9248AD6C472CDB2A7EBB27D
4AD7EFC5D2265CD72C6EDDABCC373276D0D01F541B284059D507BBF190E6FD1E
7E899D3B508E05F744602EF842BEF6FA0125376784265EB2B7FD22FF6775D77D
27A6E9719C6E7416E6AEDC48DE258F8CF9DC670815029B373CCA2600FE826996
07405CA378A65F74D3B93645218CEEEDC93D7208B98437C7C50B0F64CB9EE1B8
2FFFDEACB8F4BC3A94402CE26E920CCB921643A98F4CA2A7C2FCA07F5B46F4B2
D38AECB258BAB4E75119DDA5F458B853BB9C6749AF1DBB5168227D7CE0B52EB1
F58DB3F22FB6E15CC0A84AF7B93901B0916708870D54A0C61E20ED320360EECF
58A9606313C90B0E305BD405DD8F1AB1F1B7D57BA732FE64EAC435F282C7DFB1
AF3F4ACC8F589F7A8362DA1453C5BD3AC6DAAA8FA88131C213A96F74777A6AF4
C483B3A64F6ADCD57BEA9AAD5554B8F60CD2889B406F99B19ED55DABEA83963F
990A341D5287007F6B7C75D215C70EA62162DFA31A06F584690F78D0C1A0C62C
28F07AAA916690B2C34141700AAD3E137A09825EB036F1140FE982C3B31D9033
93CD3629F8E1E4706D6962ED20D60F429F107BC03F6F30AB83BBA344E6F39F1E
EBBE3241F5C0C2483E86178ACCE6C06D6073E57C6A452A0024D2A36EB4A25013
B3389CE608C643ED50342DE0ED5BF773BC7660EAE8BE8BF13AEC8C704244EE96
71512F0487EDF7E97040F7CD42FB4B5645ED1204E5A0EB545AD8972D0D6DC6C5
19FECC926AE17AB2B2ADF63866E47FF1CB84C91FFC0339DAAABD0709562A50D6
8696FDBE0380EA65F10C2DE8CCA7AED0FFA990EA9A455E295B5B343001E69C1A
6D0E84119A7BD7EEFBA5CF3426CF44EBE534DB18D806A7526D323C2C5804A4E9
8799BE4D21F0FFB2D899F484FDC5A5676C253C988877CDFE5BA6E631FAE77830
C2DC4F516A97203B6BB9205A495BC44096116E6F9F8F07BBBD68AEF5C8032667
164E3D8CC0783FE769964083F8E24D08C3354D5888F1C20DC084A5D0430CBE2E
EF3EB2078073407E35E33BEA07DBD4E07075E539B66CE48E5A6E776894493424
D848EA0C141FA96814F21A26106B3142BA66FEBE5E04375EB479C4D3071AE132
61F1DD2D93969253E25E3EC90D07F9DA72C96BE97194008249A205648C7EDC47
81D54A915149E24177DD008A2A6E0556E8B305F671121D95720E361B0DE8EB65
EE61BD806846C9CA3CDF36D611EA2B9565BC438204488CB92B7503E595B48D20
2B9CC66C98EE83D63D05E2F248D7A85392459DE43C2F92E2B7CC8F3ACFAEF581
118B863AB7265364D278E2CE2DD0E96BF18B9D5A3727A6201CF50BD8E9784BF7
FC93C6DCE84CF1973B22E5639F67702275DC7C18D5B5A7E652AC766BC3B1AC0E
CEFF31C9F7DD397A8D6B1EF0A4E5EAE1891608120BE5991DAA6D475F2E3F187D
92619FDEDC57C86ECCC38E4D0CD1A7D5C972DEA0FE746858B6893AC5EF24A433
EBBB3ADB7E8595272EDAA13DA78AFA6AB8A8D239807C467EB7E3A9147BC79936
D0868CDE71852938EE58114806942566D4399A7DDB75AB1B959E2073D399B08D
CC14AFF50C4D8A92F2DF5D16D48AD9F82E96F6EC30CB7B65E781A50753CFC0B4
AD777F759315445DFA3D60935E90FB1A96BB9BD22A29DA545A00E22A6F3F52B5
487AE92734A9F4C5090E5058C455C885D474151E829C732AB9EF395925473856
1F21B9B777B514285AF9F80BD528D313CF356DC5651DEF039D2ECB64AB3F4899
B5134990EF40774C00FFC43188E7E0670B58922AA91B2779BB6C6D56A9C553F1
EE1E8CCFD20F2D614787AE72187533D99C3D1762D78124E5413E54C2193AA2C9
27D6D803F1EAADE778EBB4676841DE7B2ECA382B460577AAFA7EE402F3B8B01F
8345A5476240E76A224AF742387F8E9705ECF250B0A3CB58F5D1DD65AC860122
3EEE6006B5DBF6E64826AEFEFB5799862C1CDE11626068668016238B271EBD5D
7199B666DFADAFDAB5F9CDE7698216E1032693932AD0EB9BBA3EADE5A85839E3
5AB0FA35F0A86A193C95E3F039A36D4A221587C2191BEB1A83C02940BA195483
15DF0CFD27C33E7C69DDDAB9F5DA8783F82BCBE16F3AAC153D5FBFB3E9044789
1E88643DF6FCF0BE0FC099CC660B8BA0D2510713608E10DA3CEB23189A761616
1C84C98051E31FEF6D8AB2BDB6BDF74964333B63407327D3FD69BCD10D2A82B1
1BCFF1C3D970CB85B132AC3322751BECC1CF5A352130AFB9BED7A2765E0BE7BA
9A40E25464C25CEBF448A1871D7C668C3F572D7D21E8B7835D2708EF5D383305
6106587359D219ABCA1D3EB7BE32CC47B325BDCE590BA318731DB18890B7AAB1
909B02E6F4648C35129158C443636F26026816CC7BF4390ED99CFDC1E0C41562
2BCD5CB067BDF0ED84AB5448D72340CAE8A73C3B44FF1AD027FBBDE5B3E2F406
A486D896AA17F382EBAAF5BCB9DF1603AA64F562BF7410276D2E2706C910181C
666F5523BB662AA65AABFFBA896F30EDC7FB89AA54B6229EC16D805186075EEE
007B1B50F8480ACB5A28F35FE7738436AEA97BF3D90F96CD37B2A9C76EED1CA7
424D97414F8651ACFB6A5E5444B4F4F4A5754BCD67AD6F17CC903802E2642507
2C2F1EE9A71008456DC6D271697EDB07A177C84B994C76977808B8949B71C9D6
EFFEDA1D8BCE1FB70F606F854F7C07BE4E5516DDCA6859D4F8DF4B5625BD55F7
ADD2685DEC634B396C5D3289C2609F28900A96C8512B4EAC414A196124450C13
FC94CDDF564A9E9A029CA4F9DB6FE97699B45B90D9D6621D7754BDDBB7ACC5E3
978A6F7D74628C59630E73C41E4FE64E3806D81DF1F361F3B5A86479CB4A3270
7B5776091551ED59F8214368C1B36AD8812D6DD8F0942DF4D476CAB06056CCED
911347D838400E210FBE842E4505F51555B180166E9476FD2473479B26AB1EDA
7D16AB3BCED4CDC720E51D5E238B60E73AA8C44AD2B8AC0E19BA9AF1457590F1
8A2BD008E06A4037D6F720E40532CA766E4957E737B9F07F33476A1F5771D1E8
0ABE107D74DC81C9862D978F99FD75C5EFF2F4E2FA80960F4DDF885E2E879DCF
22DC632E3BB54068E4882DD6E7546FA20796164EA21D07A13F8EA05064F3A6E3
794DAAF32A0E93415074561E3CE6D25D02225DE200B4D019D8CF8EDEAD95E58D
122A6BA2B09DFB0E0787422333AF1C1C6708303D26E1A4773A4EDDB6FA2189BA
01062CFDA78CEEF2F0155A0B54B2D978FD540779E6C2912E8980A64E9E62ABC7
45E160594FD26DFEB9247CF260A0202D4DEA80F4694E49F7FAAA05E46918D7EE
A663C620A4F396275A36FA4FB51D5AFA0CC3472254DB3D51B3F4A66BBB3D1EAD
42C7EEE6F1AC035FEA1832C0E5CC67DD7A1989EAD0AACB26C41EF08C32709F4E
0AB179B18CA5A26171B0A616FF476EFA7858992D75F39C97A1093011CAE9F87E
9BBAC561D805F870F6755AC22B5E840CDA31E6FBFB4D8893536322CD0585A05B
67D9A6DAAD48DF4D75DB966C1233D12B01CAD1C2ED08D07AC58127B9F9489E1D
2CAD09F1948131E41C8D49A6BF192D91E5DEA30E914C74D074CEA3C5D4834086
ADC2DDF07687FC25660FA62B8AE262E08830518D796C0ACD15D51F5E96FBC628
A8A1A9D989DF555E0AC5C9D9A6A1BD4770062D86D284DEADCABA2473CB1B51CE
17E95531B27E15E72C72DD0D0017D7AE1BE523817E09F523D5C20339AB0DBD2F
558561B76AA2787E31F156447C50BE3D590FAC650D7CEBD7ACE504943B914813
FBFA568FB873275C5D338B3990B96E1CEE474F6797977730A97194925DEF70A2
1C41E28EBBC0C4CC3F6871E6D55ED3848B91218FFE21494959CBAAE3AB83A3BB
819136BD5FFB5D16CF64B520AE9452691CD6E36DC34CEA5791AFC570E0BA2E8A
BC602F44FB88906926E80BA6A8A39A159446754330B53729EA268545F8AA5323
D9448158B0FEC7536206153924955BC3048A6620BDFDE4B1392C862238F4A791
05C1C239FEC3C7CCD3B0645B707233930F7A15FA26E69FEBCE2BDE8436DEEBC0
392C4C5EE97A86A3C54540FEC8AA6239AE86F542AD2CA287F4B8225E60FB75B4
8AD9148D3E97E01A99FE058B4ABE596A7E104202899F68B58C9B6DC8840807CD
B72DE4BA0809944CEA6DE47E19F386C3BA9B7BF89A8FB445E227E467532661E1
24C1321483CDA44F427E120731317082EFCA83B4CD7535598E5CF2AAD513D248
66C3ED7612E967D7DCC96F0BBD84FCFD10E1138B4D8F3A6E0770FE69AEA5CC19
11F3C0993129255D0D05003512690C634ADF4FA80902E38751EEB686F880817B
6784DF55BC396E8C04CC21064738E58E9DA8F779292DD259632D17DA0CB4C5D1
FF89D77C8D328D232725096BCC071ECA7E53011E8D3020D88742623D14D58E7F
C61B5C83172B61F396608A6256D3F2F6F530810B7D5F0ED0F4FDC541BD5343F7
89502A830990AD5ED65F627C63D7BD385A0FB01E92F080BBEE6CA1D531CE163D
FEBAFD1A9F38A0A6E8F7A425329BC1D6591DDEF232D3CD33253B4F671E0904F2
C73975D67FA2CA6FC992BFC6C99F6F92125F1837FFC468C9C0F86E5EFE441ABC
530AABF2FBE69D7DA03D015B838A28143D9205F8072A7E32E0D41BB86CB0FFA5
01D67A7D1C5CE397D7DF24D7AB5B11C480D51E3A397964608DA992E33702CAF7
9698E9C7D3D567D183FFFDB384AE54E4BB3059BAF5E2DB50160FC8D32A8E4163
F8477CFBBA858353055265C8926D01B42D60991A70CFE941F8F277D13D103511
8371872F8D2D02759331E0CF2E3BC96CDABFCC6EF13BFA7C2EC838F13D67ACE9
77EC6191D77C0D2D969A46B5C7FAF9F54CDA03F4F1F320A2A0F124BE27F06385
46BE306E59E45879B5DF9922F9B1A25708C3E9CED3FD7BE495A87246153E0814
4C43D5EED52FF7B16C7AD7FE1CF02A42FF1A64D94F956C6E0CEEE203A7AEF1F5
A240074013F8749DA86FD6C3C7F13733236E8B1C1AFC5414113C8669F9D239B8
489A45DD4770802E544175B8E11DE89F414BD175DCA04A8538E6AEA37CFA4C5D
F4EE97A49053ABE66DCD6C8E474E8D3AD8B6CF52A1F245967796DEF849AB9F31
1EDF98CB98BCFCE6B60D9880C8828457F0CAB2E71EFAC9C16428237F57DA27AB
4FDC12E18921790F34DE8DEE1DC651CEDE935343C4DD2E9122FB5CE0CF37FF02
EFC51D5074F91EBA85C5F374D6A89478D7443B01631A74AB3F5F8AB2EA510058
C02098529FD5B1D5391AB5F5C447F20E61F309B76860572C2551CD714528B0AD
5D98FA6989E2DC92AC0C65C7B20649F199E5B6C9793077B3ABB1F11A90199825
D8523A40C1A3E5F29BD0D0A33C98AF905C203E5255A260F918D93FAD1B7E7422
B17EA7570DEDF718E478559DBEF34C869482FC932F7615B3A06D96D7B2D9459F
7936DBCD2100601C8DDE0B955488228ABF4D1781E4CDCE3A317FB596CE36EDDE
7E538F0A8B6EECE6B1C03558308E05B74C2C01CC12001F1544ED6C36A996460D
916DABCB7FC34D57E76BB512171F1491AAD49102221C0FD101D593B00B96D6ED
AA11ADF7D02B3D35CEAE3EAE33220590B0FCEEEC9A2C50D7E8EAFC5DFDC11FC5
0ED9BFEC3E73FF4CC9FB82654EB4FD59ED9C8E16CC3DBD0BEA39DD00EB39F276
8F2CEFEDFDD386CC8B9D052ABDAA3F86C21F8EBEF72FEBF05150F2CC529DD04D
49CEE4F1013495BF1D45E390399F7647226E4DBC0E165A8ACE99B8D2734128E1
C869AAB5101A1C78A09D331C0D59C50BA57970786EC0C0E5939C2595680056AD
C95D594B2C0147CADA9B4CAE41B1550E5DAC2BB8A9408430368BC3F937F7918A
1F3FDCEB4871F9EA24067168033E89D1F0F4B36B1C7F11ECCC5162CB373E2E11
1D49E255FF4D886E8390BB1ADD7F984F9CAB4F704D9ACCFA77339EC9115D4687
4D71BADD3A269831E926830B4A924DFC3242E7E4713EC6CBC8351E3938373A11
15D1CAE6FDA99058E7189ABB732ACD8984E724950A593B06FE7E53110C2CBACE
DC24F63481DFB44A9EAAE611C9A19FB601BDB08A8225D7B8AEB313F36680D681
744671B6529C70FAFA0047AA3524BA69AC8179CB00A6939F57E4F01011D052DB
20A712F5673E02C8C3FB85F48C47FE451CD0DB0AE91FC5650F9FE6B6CF5339CC
E1140E1024C7A98CC7D7225E922172A9AF0EAE4FBC236E0FB03ED2E35C328D6B
C91D0EE3FA511433818442038C6AE90A44DA6A3CA51A7B4AE690032C46A55CFF
7602FCDD7EE723160ABA374504F1CE83A6DE44721002D3D548168F930BEF6035
4AF4E8EF4D5D68E2D066A2501F263E9F260669233FD190E7C7516E440633DE12
4A5B2BF0B96BCF753491B2315E20ACAD57488DEEDCD8DB3C5027F586A0326AC1
D8934B320983387662F8E1B8096A5EA6681A55D718B3FCE10E3054A0D580118B
1EB1E5F7A0A878FF19363D0A7025011F8253902B16CCAC4A0B2F87A7FA782362
405FA9B64BBBDBFC3777C2F58533F5B7487F80678996BEF8A3F39A1C37511AD3
438AB082A0D46650E6A3F18309D8EC17DA57127E48D8C9389B96411479597712
41E2F04F994D2293D4DDC34AF8F44A1CE6B0B48BEFC435FA9DDADF33CC35A263
14AA37DBC03FFE6282E3B1729895BA2DC7C3D386D9FCA45DF21A1850FC8AB62F
00ED25D346CF734A3E292E92AB9BEC1E4B63C5866E3996124A381A5456E17361
CE0F94F14C408F0ED061C6AFE4AF57F2BEBB978D14282F7AD6DF5B4E969236D6
145F4771E740882D084D8E820EFB0936C2741D68FB1ACFB6DAE67A13236B4233
6ED77308969AB5299B6AEDED216F0694DA5874D0203F44B6EDF8F3BC32566953
4043482D6B62D2E31CE3D3F9126CD2130D76E8A3EE839F2C5F600C128E3A1CD8
E5864E644FA9511A97ED44F1E623E97BB419B70CE14CD21F1323E5DED65E8B68
A35064D6A817E42D9D1A91801B2F28848F5887C0ED9ED1D30F8448B9E7D0BF87
6AA123BCA027FF782AD31E6397407F7A09D3EA3F418CC4EB06DFB57130114B89
E45BFFC19AF743D11F15AB65773E27291A9F1822970F57A53DDDE39F09448805
6D227E13E37F9036DC47C22FCAD37FAD847B8198648C1030D22E0FD1FE2FD532
52269F3676AA5E3D2EE5606667B009C16170B8737269D464E10204E69BB81665
B98B506614EFEAD47B232E41F33F62AA5C92B61964D5180C7FE9E17E6825A43A
ABA077C570DD5796436C17BCC600D28F5C02C40362C2203CE8A100A615866E57
D04A635A71FA1729A7689C9B5364FBB2F2EFBFC3BFE5B1D3D0C486998E23AF68
BDA7758DA4A0EAF119FA93F29056F4DE0C228DBA11A54F78CD6C1BADC91A6E8E
7F402877CA82A59A36B3835087F9B973C4E788F09FA4FB7528140BCE91E7A88A
30B61EB9E84969B6A9A8F408FB44E76B85FD2304D3D82F36A671DF76CC94A912
FF702C601B671DD195D0FE6734ED6874A571EDA400A4985FDC4A845E85AB1278
C66D2A703E8910734C0C3B93B0FA573016B6073D3C3D121757E8DDC8DD548A1A
A66D9370E8311855AEDBF2AFBBB5F9ABA54576315F399EDA92DEA88306E2375F
DC3F9FF741FC2D446E175693AE32341C2C0E6BCAC5AC79503217A3C68565F85D
333C1F1CC0DB74221F019F224E6F613F46532F572E57C1B675A24E5B72B02B1C
10661DD84EE017BDC034573E707D77EE68E3D7CF2E1A8FCA5E5818872A06C058
93F01F5CAE9F8042569CA93838289C2FFC20B3F9A6073F90E3916A7C56BAA769
9E4FB51310D48C3FF60AE9775D8F47561C8053632BE828E8E4B66276CB14EC64
21C8F7DDAD459FB8E565BE5D551A4BC77C3FA75F0B44BC0CDA5AB7CEC5181B5F
B3D3E88A2790EE7267CC8815768FCBE1C8BEEF0C95C30C5EB0BAC893DEFDA4AE
445BC2B546ACA655A2AAA009900560B7C4B5DDEAFA59B5E080DBB8BC1F26AEFA
8E701C8103DC4628793812A122918F582E0D9B972936CB79A1D474DDD3C73606
43664892CC2152C4202A618BBA3DB61174A7E52B4B17778B3E655E9EE949F738
443D65CB40337E1C86C27C9F64D5F8753A27E7802FFB1260878A36E2C5265F8E
C7B08FC68D0B3F8EBF445E30D5615382F619C4E9734AE87A57F8A2E620B02A9F
E16C903565387F3E98CB545690DAF27B60EBCE3A547E16A8F5C7FA53F1F5896C
07DB16CA5083AE48D17081A04CCFAD72C8970D89C9F0FDC916297CA0E1C05E4D
3BF80C3D06E28496D33F713F1A667E9C0EC62A78E802FEC1B07738976CBC28EE
56D7F0EE04154F4D7FAFCBCD29551180E017A54763C2C6E847216F7650DD0E40
D0E235B3080A0672EE42A9CF5D977312F91F9F59C541B061726C0FBD32E70AD5
D566AC5CFEAD6787DD4AB1C08394861CD10BE1C70413D2ACFA912AD6863467EF
2C55FBF1C3F8181050004CF46074519CE89F1D3C6DD5DB32E0E5D9DDEB8946D6
12C62B5A222DC7058F48B5E04B0CB517E997D0C987CAF5D538D93C76FF14EFF9
755B5FE1CB5924AF2DC666D6570EAFE78D67466E9A48F507F7FD42B04D925E6E
1954C3C7FBF7DEBE8D818C0EA52533C72F9D0D881E9D7B04715CC646ADB2A7B2
B42AAE2B500EBE1AC2A1606BC9FE350C690B6152B3F33ABBBDADD5B7AF072144
D10B1E171A61828AAF7B4A781B45536753639FE9317C167CFDC2EB725EA7A42F
AAF4C2E790A88FEDEBE4F596EF0C5065CB17B9575DDA970E710432EF45E2649D
5C15A2A54B1507E570EA938A4CD0ECE9C1D0376E882A730BF0DAE83C714483BB
A5558DD44EA82270940903E18E71A368253587649B7E0CACFFDDF7FAB7826B91
5089D0C40C2711B68B2F5EA6295B0D21060E045EBCE9DB03A7E8AF3D8DFD080A
36623FC5945AE43CCA75652DD9166EAEDD41F6E494B5FD091A5FA830733DBAA1
5FCB2BF13C571EA7BB073FEBB4EE6FD907036D0B2456AF6EFDF3B9F462E2EFCC
ADCA5E9BDF8F8349997A68443BF34CABBF4A88520D1A7D35B123363E1FEC4D27
DBCF1645DB6616AF025EECC1DAD3354BEACB9100D44575FC320F34E33BEC4425
1742C7ECDE26333E1C59FB6671565E806A9B42ED53EC490D6DC065B517F9C7B4
C5473A2EE9ABC82B0FCB3267B2BE6FB63C14F15FA1ADC69F47245C68CD8ED017
DD6BB04EB8FC5FE172B6D64D42F36CDA18034EE27AF1FCF542EFDE0D6B9B7F95
AE567CF8DF4C384D7E0BA67EF510AD10B8A96B64D87C77C6F94ECFB9B6C3027C
DF655A201DEF1DA2653BA3AC66E2E98804A653379503D55E7CA7065968608E19
066BC40606B547D946B861F2EAC768A1BB658A5A5725C25D01113AB79AA7E6E3
BFB358546BE784B8EA2C3AD8A492E6742093AEB5F9FB615CADB598EBF70F1277
0C4E780095476AFB775531A4A4A51D6E047D9659602AF552AF2C9204A4E3E888
0FF5F8A0B5BD33E6C12CCD3FCE5742B0D15FDCA64965A810A9744BBACAF019B4
384859A05186E1B79E79470F90E157BA84ED33A249EF490BBB6E0DF482B7DB67
24272AEFE4AC23DFABA09E2BB7FD9502F1A3FA75B71011F822BB507D37D27207
DA73FD6589EDF5D6194499EFBFF60DC1316120702DBB52C30E0AB0086C1F52D2
6E72744A40FBF653D54822FC82440E751462C7C8B463D6AE8C1A3D83299681F2
DAB16605F4D7A9E4BF677D3CE21AA503083D1B7AD54DF0E9692CF69EBC00FB41
6928BBBC19E8D702B267FF5205CE6D97721FD0785B4801FA1D591F2F2E8F214E
6075AF14D32ECD04B47B56ED8E6C9942F5A5B76715C3A5D0B1947D8C9FE2C68E
AA95312CF204311E96D0A291ED7AA458CDB0C3348ACD8737FA274E31C5C6A550
EC1B020F7DA03645A85ED09DF59697E263D6B344E6C3574F2ADFBA2476EA56A9
8AB361D82F57789B62CE14F87E459BA038B3737B082E4958C6FC3DF62284C34D
B7D59B334266185809CB914E7D5D32962D9198557D94D48B4F6BC72BF6092671
8FDCC044F4617ED193A91BC92A381E4DF50310CEFCE545DC21DD00B63483983D
DF7071847D84A78346A6ECDDB8FDA3E7A17077B1D629E2B56443B074B27A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 73 /I put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueID 5000794 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CB2F237D7E64
23001E10C8A1C2C13B1C06EA9E132989619329C28B226A93D6806BB295C4DD93
EA799974BF812C155309D52CF67AA9BA25B417222640E670E379238010792445
183C89FB4D8A4607148FBB6FDA94293D41637A9A8106948D5EAECF04F4281E42
256C01924F9AA2163D6B0DE0507C215045F8FDDE9796DCF3AFFA25D270BD72C9
283F83B75542E753249C9E61F3CE9B00BE2E663D36BA00AD3844BC03C337BE0C
0AF27E4097D52BE92B6B3720F299594D09E96757ED97010BADD325DC7116C0A9
3A3860A43D11C774269D0345D07F7C17C195EE20D9AEF7570E74974FAE247393
14EF0863639397AE69BE01691D4E1F45382D42CB2D171642B428AB0620868FD1
02FE45ADF1FFF2D15BFBA8C6E11A79FCEC9D00C9643DA7FE2393DED9AC24C39B
5D1CE94F5B60D61EA6A60FFEC7592C0B7928DD9DC84EB19A9D0284784264D9AC
B688F24FD4EEAD9BBAD10656693DFD9CA324A0AB02F22B9487D905E4D82426C2
88A13B099E9A286128320B0D2304E9B52A59EDC1E2FE0A9585A1CA3D7917CD9C
385B51E5E5C4EA29D9451FB2D69CCDD963E7F5291B5CC272C8E67147C2C5F3D5
F03E5F0F9A73F19A3DC028053158C94D8645B99EEFA56F775AD8B6CAF548CD5C
CC455C1EE71A10749166637E3CD6E4887EE800FE2004D1E50EC87E5BB7116A2A
EFBF537EA3B38711A1E69E4718D46B161F77E2D187CFCCF497DC85E06F87337A
9C797AD0A3C2DA7DBD06CB3648E1FB8E76A1608A49D91D31FD02E72F9AE1239D
91BC990A7AC2ED923B1B187ADD0EF1CDACCD2D8D4B0EEF420A6607DC4683F63B
8F95312B44DB0397A2AECC57C7272342AE2476414701E30B00AD357F79D6D191
3E77017BBCD8978DFE7AD5E83AB9F82AFC6F2B9F8C3D16FBD3FBD7EF2C14F22E
091842E4836FA3ADB0C04A4835B6B946C523D991ADA4B488B48A2E5BAF803DCE
1F3F3D808F6A5349B5C12E33D39C483B4FE98CB76F48218E5F0483FE1B4BC864
2F743BCE8C587C6EA560D04D846F680300268DDF0FE4FFD073BB98A7F734B44B
3DF9BC24DC85A362A1D592AA6941FD76F84E5FFFE840D46C40249A59FA171715
A9B6291C14EB6C12CE08904180C622B18D076AD351394D55DEDD9F6443011397
15DD6B665DA5D260E2A950C708F8108FBCC1B6DF9C25CE195BFC1971B120678D
A39F72E462580DCED89528B42CA77C6F8B700359CAB1826DF96E104408EAAAA4
D99C14F00959EFBD6A51BB562557236DE4E05DF04A174CB872626FCE64A98A70
DF359331440A483635E725DEC51D7050AC5423FDBD6584C522212FDD8C40D71E
DE72D5C40604BDBA53E6346950E6448AE94F7FD0DAF4705165AB84484ADAE04A
0A5DBEB1591C93005EF90DF853541C3DD0D781573DF8A895F17FB57C16A70B84
F334E93896A9FFD4B691777530F36E56731D33B97CC40552C3BF4B338B2092CA
34D9AFF6A59FE7E86F56A78D51B06B48465F8A1A11682D59DE78137AD70A6796
E69CDC1A8565AE2AD116E8090BD0E9D8D91F80828BF81B1EF54E112B4CA43C1D
F795498EB73EFD2CFB6C5FAFD4CF99CE2138415F39971CEB41ACC258DF6363BA
F8A647680B10947A111CEBCF7F5F2B5A662ADEF0D1D1B6B3C819F0A84D805C55
7C7DC2FB8102A1AEAD8B8BACAAAA0BF3742D48017F7C98F6C00B37C3A3F25DB0
BAF96C943AF33225E84C53584791BD217B6FD24C52914F046D474A3840D4A790
D24E1F6139B90D0E6F2CB66FC282A16DC28F95A6A72E63493FAA9D0F15BA8297
BFD9CF92CE73F00B631F69A647CD75FB56229CD349FD0CE5C94B81C8B4D875F7
6F202167E93E30999854ED2620C20EDCA9A2624C7EB03B8DDD9EAB520DBB8563
65AD9051AE5B0EEBEB4AEC5832084DC354C3A7293FDF479AA6677ED4B3FA501D
845B179C6CA3B54B8BCAC418F8D880094ABEE22A567A2493E13240ACFB1D917A
8366AED4865580B9F625DACC62FDEA22F47A209147083E6CABA4C9BD6E4334C7
013315C680CC3D72CF29ECF57F2FC538558B4EAAE1C20E5876F3E482EF921E62
ABCEC55804BEB1460D00F3FFFBFEB9A10D6EB9DDF164E4A92E0B6C059E290DD5
35DF562D9E3FBAE36A60C8920FFC09C9B6CEFF0F97A3EF1833718B5ECC9F652C
47B4B270994CCEA59A5AA9A6D6A0140622E36D0F3D1B4568552B472564656FC5
DB19E526F6ED75A2375D9BCFB2DA50F05A76FED7E0FA59D1C426BB2C09297278
9DF7918D15344AB36BEB0510FC4F97477C6160E693CFA08F6BE02811136964E6
8622936A5BFC61B41D369FC07F6B9C3FB6B4856EF9F1C4B8A5720ADDA59FEC04
696A91C8143159F60FB26418E63006FEAE0AF903405ABBDEE04DD186124E4BD4
7E85FCA5D761AD008A5E156CFE0B4C5550ED2C0C270CC03493D2D723D1FFEFED
258B2FAC73C41BBA3982CABF68AB12B930526907D08482A898832731158E07CE
E26F4388F1E967B0C6315AD439E446EED61D0317F59E0C9C6D8593687EEB4FEF
A03AA58F155C6C698556511052883945C9D09D962526009F9736EB976E07AB0E
86AD0E1F33075A209A7143F8AF2162F1F7BE57AA89BE869B8AFC7E1F226355E7
F66DC66C4E63E59B5CAB55A0764550E87AAD931744815D78E1ABEEA4CE93E9E1
1A5FE6C24092C46C877F191DE7BFD23ADC8F8675B06CECDB21A53CAA1D5B0008
47A6D4C0DBF92FDC66BB6C49AFE2CF361C3B81152D08DF1CD22DF11E81156CD6
3FA3A7C618611B8D05D3D8AED031B92517809F448611E47CA5ABE7ECB401B13F
8A7485B8F8B86D848F761F2829461948DF4AF29A7A50BE27222D2393B01A9553
BE67747E51468ED102A12F07CD9DCF69FE5B4E3E20BA586DF7A839B81CC6D94A
BC59FAC38CACCB56441577366D9FFEC6659BBF6D8089EB603D8A4849F7D83793
50659D029773B845499280B81D0EB5236C3403E3236EC75DB09F929C92CCA4D5
AF9CBDAD02D0C29D3AADB278A33971C459CB98BF229B2FD74F5B65ECDC04E015
B9CB5C1800B79EC039FE7105551358B7398C5A3E80648F3004E55D19A595A4D4
DE33CD099BED0A82867D130FE1A2F3994068B7419068F5487FD6860730862708
F1BE270385B93B5EB82E2292D987162FD5BEC61FCA76EBCDA63CDF07C96109B0
AD84D5CFE01B37DB55AAD4313214124D1F0BE2A8BDEEE328A672938B1BBC619D
2C8DD6BD1F54C8996C0002160106EA7EF27DCD084AD36BC21FF1E7923463F93F
741922BF4C197A01C5F7D955D6D9EA1B0D0960194508DEB5D86B2078733C87B6
5C5F0C3AA984B707BE5542BAB2D0413C11713EA543D50B52AAE69419F8442063
79A86341274BE448EDDCA83C7B649EA47C02161BF12F621A1184A9A69FA9DF13
222B7C7BD647F68270B25C9D4E6AFCB11C6BBA86403AB5FBDFEC8457BA498486
6B3FC32FB8D06DD9394581E900E8E983A85D962EBD4F5F94F2B2211B58E0298B
9DBD3B7F468DC0D9E60C6D57296BCF826EC6F566064D438D19DE5CA489670EA5
19EAB7BA76DE3B07C42AC3AF94632F317120AE4991D58754FFC747A0F4BF41EE
11EF24B4BBC435700A500EE336617E52E99D2EFF7E7C6B592985B0ACDDC1FFF2
01A91589136D602CD10958096701670A08F25D21182F74DBA6ADFFD65DFF7E1D
4C8A8AC3FA29A15D8DF36E64D6981FBF88FED061B4458C101B4E1C6FB7D98423
94AD1247042FC4D6A3C332D35D247F99E61BC6B9EEC7B67C19EC927AB0B17F86
7E3DB087D3C4A9AB04BCABF3A98495FF7361C05DC117D99A217F62966408EFEB
48F6E30833FEB2202B96D4DA0604FCEC3EB3E163BC83084DD175CA1727D68129
ADC38111D8B80A7C604FC9F9C314E7CC24334B9593EF9F38C4CB7A3C9496348A
472378CA64664A5B37A4D1E073DC8CB7798AA27D7C9C5A56BCAE912A6C2EA48E
023358132DFB10C2B8B98309708068F0B256D5433413CB457182CC762689E138
274449593BBFDF5DF773AF63AB49E91A9C99CCC0FA43E611976303C54853502A
E873DF4D221C2669D9521F1DC85D07C8A4F771F91BDDDF14FCE765DAE2B167B6
2BF6EEDED752C7A3EBC5F89DE8140A946AA0AC4DB4ACA6973FD76F75876FCDE0
AB54ACC206B1D8BB4DF3F6109D5B32E667F31D1741AA5294E3413C5C29066447
460F3C09B0F949BDE1034A2C11DD46CB2956A0423F9FDBE387688016DD08CA64
87993DCE54AC4FF73C77D3CBAD849ED572D57506E12200E0067E5CFEF8A6B848
65C4787CF12366A61B13B0FBF21F43AE46196FAC9F3125494713D894215809A5
AC70266A2CC8784D52899599286876E830F38804C118EE2016E883D31D5D4451
538F7DC2111A577300A0A445AA5967FC62689979851B1FEE63AEA68895DDB8B8
3EC2D6546862CB7B360ABFFE3B8736CD1B5D5C558B0ED5D7D218BBA29850E5B2
AAB74D73A610C4EE3C2E961EAA8DABD5742F21DF3D031781E8B6C2A4A6BF0A90
8FE9FB42984308B7D2B2AC789E7BFB8229870413942AB873FA003B2623431CB8
A5EDDD68BBEB8F3D9F4485935047801FF835867F7AF0FCCE33ACBCF7EF5B590C
9DD984A0E1C48E92FBD3814D356074FAE72D629900572F773E65EABC6A106289
6FA71A5040CFAD27A4DDE5A16041D496A63D4BDA307180BF0ADCF10542F382A6
B8771D4FC5B9F802AA8C2B33D2BEF0A2C1F0BD84D106C1062AE347488ABC1E44
1BB36043F5D918661C148B5C288F00E8509F8D5F3EB1B0FF1FB7CC2BFE2D2175
918B1F30D092DCD9D8BBC0E0AE67A5BE219C1B4E4923DDC450184F7511795E93
B777C690C1CDE2F4E2913094E7A7917E9FA6CC553D0FCCC003374B82538DCA06
73907165782D53D64730BB7566BB259FB5973FAB1BFADB6A33B2AC9E88C93294
85FAA3932E586C61D8A0E9D8B30818F60FA9EF82119015F44C2F31E03777182A
7AD22123FDDB75BE27F95399E594CE36BBD4BF73F608AD2FFBDD8723B4DDCE01
D083B93936E16AFD911014779B0A6F9A4680AA566449452D75251D7F7FAE86AF
3AAC8D699934B26EEED11789728755B6D41AF8E4B3BFF15E52C33E89575231BD
AF268C129F0F3750641517ABCAB0F3A1519E279F3DC19DA64D433C35512E232A
06BC4A08D708EEF11145DDE8B90BFFF7A5220D6E851343BAE8B3FD25A1CB3335
9082010B50F04E1D1394F02A4F2541B1AB950F9BEBF83C7C2CEB2130A7D5B64C
DD6976F8AA2185802CE18ADE5D3C43413E7D26CEF2D28CB6B7910D8BFC3A94C6
5B523A82FF88BB219A2104025B34845C650DBDE802540D7C69BE5E064366A46C
7372BA97CCDBEA9D4FF71E03727AAE7D56EDB5E404EC2419F303C67FC1A54744
B3A946C6653D85C7ABC7205082816526E5BCC7BD5E716293990C438A4B7C2289
5FB77F37FFB778607246E1711000015B14DA1BA6341B0479967C6B976FE941AD
BD8DF716AEFA030BF5C5F9B6161FD8139AF543DC2D775A3EB75AAFF3A53EFD75
E2EEF2EA19D6D16B34B4EDD8B04BED01855E4587DCE5C665F7D32F0FC782E80C
155EB42430223B95558856AB6283D021225AEDC194E0192ACE41D67AAD749EED
7321A69F15B7EE7BB488E39C50C19FE08CCE6B5E6375C956E2F3D8E24E1A1F6D
0E8FBDAC10E723F2A0B2A75D09425C2BE350FC21363BBA2C7F2B810F4D0B7CBB
5505D64EAD0E278445323B1F89E2773778D61EB9E01768AA4A6BE73A29FEDF5D
164D54EA2D88C6A5414513E9C4A53E40FF4642D40003768198F654EEB284789E
AACC81ADA5D74A88F9ADCFB261DCE3A98BBC508201A9DB89DDBB34DB37E7C7C0
A52F14D4FF657879229F50CD630ADB00BC0A8EFFADF1584F3EF93F4972891369
4C48F684F15888CB20F47650967F85FA275769B5C62CEEDC244463340C8CE99F
8E475A7966AC64BF6545C46FDEE45DC419FB217B9B43F1DEA4C17AF96BBD1EFE
C8E5E8F989D37B1C3569C825946411B7080172FBF2327085BAC500CC4C45EDD7
981FE0F3526BCE2DC747D0A7C62368508BDC4B24A05BF2DA671E24AAE2DD885E
760754A55D369063377346DB0AAA02E29994CC7EE361BE8B669F759A33DCF4EF
8EDDCDD3A457A1C2F17B37E2D70E4140C2E7C400084E120543A088AB68EDEA98
D7CD1A540C7C81D68A07B7B60F443340EC07B40B80B1939E2DF2AF55EA18208B
AC16FD74790A30753544B60E3B3999E937B5653A40D67D43CEB5441E22D40BD0
0C0F80B79DF95D8DC20FE3B37724D103CD10CEEE3262F18D7164D9589E04EB88
74394A6CD755235C334AFB51D6AA9B6F53C2B56C568A6F963F3051BC1EA9CE31
3D17ACC8C61DEB40F97DDE7C9DE38FE91AAB1F98DF55C974C2E350ED52D459B2
A7F02C7A66FFAA7AE0F25B19771FDDB27F8E70F2E34EBFB9AACA8F5D77D8F459
8D48832B4AF25C3317DF1BBB90635F3513008FCD88A4EA77A682E7683EB86F98
76CD5BE8140DEA0F470830569819F5BC8ED3E6E0F9F16F06A846F25E929AFF4D
38DBCEC014CB4E02ECDA03EEBBE3634597294621E6EFEB62CBC8D88296439ADA
35219D9F569724A3218100F6F7852CEB2B19284F9F6F2D95486FB5BF5E784747
C1FAB03CCA2BDA18011C6D65BB5DAC1A056EE0285D543D1BD0C70BAD902074B5
4ADFA1575BC40A27FD0C959C253B11B06A75D2DC891C1F92A06010249FC39AF2
FB902968ED76555F3E1AD8CFA15E2F73B355E6BA766F148D19ECC6007BEDDDAF
DB491C187A4082B9275C82EEC677D3DEAE6D3609BFEF9AFE7167D98B958A04F7
193CF8A7329244168B1308E856F4E0586E966774ECC58AB106577FB8A9B47CB2
848ADEE169C04502BFA2569008D15CC0AC0910FCF32623B7384D842D55835671
AB113FAE1A2D8EF49156F5062C0BC9BC62A1AF301D81CA9E0E3E1FF116F3A3CC
246132377076F50A147792F302D8616D8EDAECCF670AD2CD681A44A5D90D2EBD
2B240B9DCC95D24807431522757DBD60FB888AA50797937C7759EAFD2CC0D34A
22F8415698579C81692FDB1150EBEE99958DA300E214AAD0A0009F0432512E25
0F49FFCF308EDB53E60F6A35DDBDFB8246BC242F95AD1AE5769B272517F20D36
2E78B914972059AD0FBC73DD3B949FDC794D637390E067B9F3383986C47A9D2B
9D857B34D0BBCE93AE083575868A246F75091DEFEE318E7314F515E2CF14843C
E25263667C51D541C891DFE36FCBFE49B60C90F944159DDA14C2E44E26CD2FB5
CC2CBF24BAA5F56EBF4B3D84C9C50AA7C769ABFEDD2A423004E9E7B35AE1E8A5
D1F37179594C008404D63F1E6FC73DFDDC8D96110E889A9C95C2657CFBA9720B
318A726E21C123CF1E44B53C5ECEB153975FA9E64C76B8CE5200A3D0172A8781
90E9743DB0699229242593CF1F070183DE4AFEE1EB9EBE3910CE53164A6D8AC2
B82E9385790FA40E7444324D631BD7192DC40DD93319F83856B1DC0ED194DB0A
63B702E02EBFAAFC943D5B634D7F3390538122C5A817C8F0BCAE031AD6CF9052
86E86758629C7C028B0BD4D6AD2DDE2B499E6D149C726C7BB06CA3ADF808BC01
CAB9BB3C0E24BE5A5950E6E16BC3B0FA633EAD57667EAA257386E654F7A6B7FF
BE50811E2A04B9908B11F3D470156B1B55228A68E30CD4C58B333A1706036A67
A959B7522BA23D6D53D17B21CE37BFCFD4206A7A74D1563FE7E4A7C5C8CBF9F6
34A21653BB95683824166E817048E6C4733F46E5FF82353E3882ED0B76311D55
6F2C6150A7F93FC001E06E99455962475886B8199F65FE21AA050F651EBBF32F
F5BA6BD4B88234A34D24A98357831A5FC9EA6ED54CE304EE753E79B3DE95AA6F
2DF6BD33D197350E564E53CE0C69BC63583665548E685C17660F623D2698C084
6E062AC6AF65E44419B0E909AE561008FAFAB122C18319FCC616DB8C13DABE4F
7B449B2A7DE2943CF048F25C28E2A00D23C44360F3BF926DB1115B0B1FE983A5
599B544209E0C17E156A0C7AF66133B4EC9F50861DE12398A6F5AD8A0EE58002
7CB823DD9B61C87DB7170C6820BA094931CB15BDB3B9986AFF6E0E40129078A5
DC99E057BDA9C4E7A6F8BB65116B31B99948D1440DE97BFE19366AE36B3875A7
9E18D78ACD8DABEA56D36033772142B0D177F444C369B05106B7355F2D40FCD2
9554629F1A59966AFF213503CD2DF6C192292DF71177088B2DF326A3C1BABF3D
093FDC5FC6CA018476B5F9985E4368227C0F69D4E9758C98E2C5D074C4F91C40
36430A3C93EC4EAA8F69AA2C620820F304E92D150299E06632BFB8016F5602B9
474E07731DFE1C7DDEBFCC127C99365BC906FF8CC9204ED585542ABCC5A0AFA0
FE1477AFD4EA025D13CBE9C73CA8FA09BF7CC767DA5C2D9A44C79CAE31173771
5BAF7DD23B07912C95E1FF19BAF401812C79AB85B5E43E46F20EA018637F6823
C058BE9C157D698F205299149180AAD6D372B1DC9A3521FED7128A9CEADF336E
6894875E4C201E8CA8D9B94097A5FF12C6BBFEA5BDC21B9A93908840239794D4
865DBDCABD32A1A7A1BFD4AEDA4C7401BE17EAECE73EC9E532F20988268607D1
96E579E0CF54493533BCC4503CEDB62CB4628A3256963672E525A18781DC0A43
EC532B2727FAB4B43CCA3AB64B7ECBDDA5B6F74693FFEB1A90BFC676C3693D32
C540C7A1B1B19FA263795C893AFA7348709A1A9A14FFF644352280ED12FE2D07
574D6C8312519C35CF5670C397D202B557F3E69AB7B4DC41BF9C1FB5F20FCE22
D057EC0C514C452011F4A92285E32C22DAB45641C91B1E69F1C6E6A512BB3B1C
C6D3430198D698C80F838826EABAC82DB978C60BC3E8928040EAAD724F896F63
E02E9B799545CF466BBCA6E06CEB9C4F0A1E84BFA011780AB06BB602481E0B5A
45B96C4AFF4533BD99F512E7EE48A34920D22532BA53217713CCFA2A19AB5004
C4B8C9AB4C2BB8A4C95DE78BA6EBE91A1F2A10E857754198AC0613073E14585A
D76A92073B2A2B8135CC8DCC57FA5A1F532659CDF3D73DE7B5C99749F8D7CA17
1215E26A186B7DAFE660C2F68702B9C3C8967CCE7CB32B51352B2F6E79220FFD
0AE8AF7939330632844DC2E7B17BAB7F2729BA793C908FB367EEE6DA64CC563C
9B427B8CD56D72E9BD0F4C3799CEF8DA26ECC7F17E089F2CEE0E3F090F7B4E54
2782A7C215790479BF837B8800F3B75F0D2D538C640818361477C3C7D3DF80AD
F6277F8446DF4C241C0DABB48829F54B0F2B7FFBADD9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /colon put
dup 67 /C put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueID 5000769 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2BFEB6A4
E7F16039F8A8224D580B20A20D262DE53217A6AD35FCD0893FF0CE31D8742056
46A8BBA963A9A5118EDE0102830B21CDD36332928CED193AE7DBC471867490ED
AC781D5BA9FFA4CF33120AC5C8B5586E07101A909235A53E1A023D4AC9B5386F
0DDFFB60AC14F4CCDB751AEF8A4CDFFE171337AC321D47562740BC8863DE3DBE
50951E26C3A82F37C8DA8D07024DB81499346E80526F2AEC0EBB3B323BB8E411
C5ACBFD2B5FA6F8E3B3736600A3458C9D3473F384C5890F05C1AD695E4DE9AF0
533EBA9600CDD7D11531BFD5485223C3DFB0A924B4A2141A14FA3F710368604A
1662DC3B96AA69DCB07BBAB4DD9547F0BA8AF5ECBF41F488D6D47E8D6FFBEEC1
8511843FE47A60192DF8265370E11CFC354F6BDEA3633C3C39C13A7E654F805D
F3C2D5612DBEE3EDFA71701D8072D4B8F909DE76919E5B6DE4D86A054CE61FF1
A74239B5E7231947753870792377BE2AB70EFE320D3E51666F5A77015F019F61
E6BF2FE5BC022495D433551AFDA321BA38D52E88270B26E3C38823487F7E5A0A
34939B5061EE6869E53EFDA6988A4C60AD65ECF01531FE6C2A74787C6F836D47
28B64DE591481615B3B7EA2A6784293B99104A235AEF52AA954828A5999C8B9D
79B52D3E7768C590EF827761CB63C0F82E6DEDCF3F45E512C27DACCCE325DE48
0B86BAD5097BB032571987FB6D0070D8929F4316105684D73BA10CA7BCF04473
9ED51E744E2745CDAA8D376C7689715DF906C5EFA369F23D75C4AF720CBA84B9
39F81E73458EC25E1B36AE4855BD20D9C17C65899BD1D9A907B57293D4BF1D96
98D11BC4582A0CD084CA516A647F57263F0FB791C8A0C3FB71744B3E3C536743
7679768888F4B817CFDFC8CC1D83338BD5E665CB1E9F6263BEBFB5FF1F729042
996A8253543EE776BBB709D4BDCC7E0018C58A8494DDD79536A81ED463D6D7CE
30B272C29702CDD6E7BC7029BCB68A09F8CC639E969E07AFE24FE7378D7FE572
00A66C017403900083D0F16DA14C18BF0C16762870D8457828F26A0D56BF8AA0
0DD2B22B34852637B1464C7086FEB4623AEC183E6D2EB5905FB4296232A9C6D6
B0F20FD38D7A744D6B24F4258BD3C7E8F8B481473BEF4018655DF05D787EF692
6F4014B3D20D81DE72B8BE2D362FD0D4B6FD592527ABCBEA197367ED005672C1
6D56EB2203F5C74E2BECC35EF089C53C78D4C869ABBFAB01EAEE5C330F9EFC3A
60614F3CD2AC4FCCB7BC5DD0C99C669F018DDC0818DB0205F46B45D2861CBEB3
E111742EEB9667E074DD361BFDE6617634F933F487E09F0C953259AB365A60C1
2E1AC29362350B9DA397C439D2E0041E09187EBD5576B96A8BBD7AAC13762049
C466CE537B93450F08035B51A963049CA4919C2BBE3B8D7E4D0FC2A0B873BFFD
E9753AACAD65ED7A99716B7EEF3DE7D8DF16DCA52D2610ED711852F6FD93A945
71237E5F0F57D7C303805A89310FE2B254A6EA9C809C365B93CCBA4C98424875
DBAFCE4CF4653519E912434C8CEDB18C3CBBA88DBC792B65EF2766888CF42BFC
2BE7D0074971C3BEE71B8CDA8180BA2F6998006189F8D3AF3F2F6AE5216DDB09
42B7FD7613C0C8212286342D8965EF05640A3F710CC703160D302754BF61AAD9
4C9609446711A6EE87F53E38F64CA65F84C56310842D3D0490C320BD856E3BDE
3E8C3E7E504CC2269D3F96A5997F891C1C109BBE244250FB597DFC3B1E95C0A6
933B8B5AF53E398B689819BB3C9E2E6D893ED3CDCDAE08CE8BFF08412CBD22D8
006D71D28E2B72CFB47D2BF305216C02A94B35DC87CE84E6A37B442AAE0CF5F0
BB34E9716DEEC35E1A00C8DF69DF1D858D1A3F702D5F6AE0890DD516AB76FFF1
737D01489A8E2F796E97CAEA32D53D4F2C560904BB2B62DB2577DC9712221357
F97B20689C3EC7F1AAA01A65DCDC7BEB13F35657D11C0D27FE114126A3DFCDAE
E10F9DC58726329ED2C2109387301A2ED09385D5A1EFE229E99FA5E5F64D88A7
E7E539666121F884CAB7E01037FACC45D953C0F4F61DA6FAFE539BC685C1E44F
EC5BBB109F61FD236A61226F3FB23F8850A8899DBC20BB628266C6B01E461D9C
CE0A10F8826E43F81BFF4A4831D977B42082E49A767670B5FE40E37E0678A84C
8ECD56D33E3A1D388FFF04F0A1DE8CBCF8015363AAEBD593463FE9D911E324C3
371045E99DB2EFD2F6A44CF4B9B7970D61D3674D6467E88D199A452603B65FCB
DCC0E3F12F37959529ABE352C4B38AF1C3305A684D59A58912CF23639B039C5E
C15FE5A7796A2C5F59325FEE1462C7D25408BD9F5B4D8C3E296BC71649C6A1BF
85D2D2C9A87B14C615DB355323D02A17C5183FE441F67A6BA70A1B960816F548
6C1C475A1F54F244D35180EEA3AE8CC2EADD9AA640B6570A6B266A2F07F87A1B
4EFA32DB981A8D91311AC3CDF50D8AE279846BA4045C90CB5B9D12651BE0F619
9A192B516A0FE4989575A94680A08016BFFD447FB6AA59ABAD4EE48FA3E2115E
FA320E6A5692EE1F81F38DDF05A8D8C9690C787004DE461F67FE6B6B516ABD14
C73DE7B4A3DCD18E906A6A5FF3227943F12F03429597369073167C6787EBAA40
BB197D4E054ED1B323CADE850BCD839142CE7D86AA5060ADD5509E932CE65917
DE8D830A3BA020A5515E9C1DDF07D9232533B3B14604248E7FF176E3B5045F5E
CEBFDB8ACE5778F9998C8CB626D2A635E01F1950B3D0C58E01D725CA995B2F65
B670CC28057DFD7B89E9D94CD5ECDFBF56E88DEF170145736127C84D962CA210
4166E5BFF6911645564358EE49A14A91248388B97290D6519C24E720408D2678
DA98E99167E9B77CAD7DC4C25A52AFEDFED10A1D0DD65144FE01BD0C7D3B9550
71CF2B71A73B9815A7B97390010046CD0C205279C1B276F1CF7DC063EBB844D6
A30F62012BB094F8903EA3D5A9FA4D7DF89F7A68754D3369976CF30E935284D2
C669CE2C556E6214810D60FDE4E8F87DC743D6FAA8BC9F46BD6FCD582B7FE552
11002CA1179E1F1B9DC77BC977F7D3B299CBCD31D40667464406A2B8CA6F7A51
F5619439CF4000639034B761563C7C39C2A2679F4CBCAC0E839C2BD870226199
5407A7A78238D923C66DC3F6C114BC1038E49786161CCCCF661035718755F350
771A97A56E6854F6803C6E71FE4C7A4DFAFB3A746516AE05AE3B695CE37E72AD
76C6550B9153FF4C98F35597318D296FBC124433E6EC8A2E930136EB17C5F03C
F14D5AD839DE7D20AA85C6B553AFDBA617C6D0E3103BFC200AFA2F527E549F02
2E5597580CAFB389AE7A7988DE3D47A936D75A768C049D731668106D9CD42A2C
D6C44B6C55AE1CFB86912E5D099638FEAD6B0A06FB9CE1B9BE92F7F92A845C57
98C9ED5E8EC1FDDFF2F3CD7392FE71AAAD4B808F1E9AAA881EC9422AFCA04864
FD272BC2EE955F54609ADE9BC65DEA811F45D6946762B0AB6815C3DE7DAB8C39
EBC7FB5D28457EC3E32B36D96410E726B43B86C6E9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (pstype.dvi)
@start /Fa 130[51 51 51 51 51 51 51 51 51 51 51 51 1[51
51 51 51 51 51 1[51 51 51 51 51 51 51 51 51 1[51 1[51
51 51 11[51 12[51 51 2[51 51 1[51 1[51 51 51 51 51 51
51 51 51 51 51 51 51 51 51 1[51 51 2[51 37[{}55 99.6264
/CMTT12 rf /Fb 134[51 51 1[51 54 38 38 38 1[54 49 54
81 27 51 1[27 54 49 30 43 54 43 1[49 41[49 49 49 49 49
49 49 3[33 3[38 38 40[{}31 99.6264 /CMR12 rf /Fc 134[71
4[52 53 2[75 67 75 112 7[61 75 2[65 29[97 67[{}11 119.552
/CMBX12 rf /Fd 139[46 1[46 1[65 59 65 98 33 2[33 3[52
65 1[65 59 13[65 2[80 2[107 3[42 7[88 7[59 59 5[59 3[33
46[{}21 119.552 /CMR12 rf /Fe 134[102 4[75 76 79 1[108
97 108 161 3[54 2[59 88 108 86 1[94 38[54 58[{}15 172.188
/CMBX12 rf /Ff 134[89 89 3[89 89 2[89 10[89 54[89 46[{}7
172.188 /CMTT12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 45 621 a Ff(pstype.tex)p Fe(:)82
b(protot)-5 b(yp)5 b(es)65 b(of)g(pscirc)g(commands)1279
917 y Fd(A.)38 b(Premoli)e(and)j(I.)g(Maio)1450 1151
y(29)f(Septem)m(b)s(er)g(98)-97 1554 y Fc(Command)45
b(t)l(yp)t(es)-27 1739 y Fb(\(1\))k(headings)-27 1942
y(\(2\))g(en)m(vironmen)m(t)-27 2146 y(\(3\))g(pstric)m(k)34
b(no)s(des)-27 2349 y(\(4\))49 b(auxiliary)33 b(elemen)m(ts)-27
2553 y(\(5\))49 b(2-terminal)32 b(elemen)m(ts)-27 2756
y(\(6\))49 b(reference)34 b(directions)-27 2959 y(\(7\))49
b(m)m(ultip)s(ort)33 b(elemen)m(ts)-97 3308 y Fa(1)52
b(headings)h
(\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045)p
(\045\045\045\045\045\045\045\045)q(\045\045\045\045)q
(\045\045\045\045)q(\045\045\045)q(\045\045\045\045)q(\045\045\045\045)
-97 3429 y(\\documentclass[12pt,a4pap)q(er]{)q(art)q(icle)q(})-97
3549 y(\\usepackage{pscirc3})-97 3790 y
(\\pnode\(\){n1}\\pnode\(\){n2}\\)q(pnod)q(e\(\))q({n3})q(\\pno)q
(de\(\))q({n4)q(}\\pn)q(ode\()q(\){n5)q(}\\p)q(node)q(\(\){n)q(6}\\p)q
(nod)q(e\(\){)q(n7}\\)q(pnod)q(e\(\))q({n8})q(\\pno)q(de\(\))q({n9)q
(}\\pn)q(ode\()q(\){n1)q(0}\\)q(pnod)q(e\(\){)q(n11})q(\\pno)q(de\()q
(\){n1)q(2}\\p)q(node)q(\(\){)q(n13})q(\\pno)q(de\(\))q({n1)q(4}\\p)q
(node)q(\(\){n)q(15})q(\\pno)q(de\(\))q({n16)q(}\\p)q(node)q(\(\){n)q
(17}\\)q(pno)q(de\(\))q({n18)-97 4030 y(2)f(environment)i
(\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045)p
(\045\045\045\045\045\045\045\045\045)q(\045\045\045\045)q
(\045\045\045)q(\045\045\045\045)q(\045\045\045\045)q(\045\045\045)-97
4151 y(\045\045)e(\\psset)h(modifies)g(default)g(units)g(of)f(x)f(and)h
(y,)g(num_length)i(is)e(a)f(real)i(number)-97 4271 y(\045\045)f(with)g
(units)h(\(eg;)f(pt,)g(mm,)g(cm,)g(...\),)h(if)f(units)g(are)g(dropped)
h(cm)f(are)g(assumed)-97 4392 y(\045\045)g(\\psgrids)h(draws)g(a)e
(reference)j(grid)-97 4512 y(\045)-97 4632 y(\045\\psset{unit=)h
(num_length})-97 4753 y(\\begin{pspicture}\(x)h(size,)d(y)e(size\))-97
4873 y(\\psen)-97 4994 y(\045\\psgrid)-97 5234 y(...)h(commands)h
(drawing)h(the)e(circuit)h(...)1852 5637 y Fb(1)p eop
end
%%Page: 2 2
TeXDict begin 2 1 bop -97 573 a Fa(\\end{pspicture})-97
934 y(3)52 b(pstrick)h(nodes)f
(\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045)p
(\045\045\045\045\045\045\045)q(\045\045\045\045)q(\045\045\045)q
(\045\045\045\045)q(\045\045\045\045)q(\045\045\045\045)-97
1054 y(\045\045)g(single)h(node)f(defined)h(by)f(absolute)h(coordinate)
-97 1175 y(\\pnode\(x,y\){node_name})-97 1416 y(\045\045)f(single)h
(node)f(defined)h(by)f(shifted)h(coordinates)-97 1536
y(\045\045)f(ie,)g(node_name)i(is)d(located)i(at)-97
1656 y(\045\045)f(\(x_reference_node_name+dx,)q(y_r)q(efer)q(ence)q
(_nod)q(e_n)q(ame+)q(dy\))-97 1777 y(\\pnoder\(reference_node_na)q
(me\)\()q(dx,)q(dy\){)q(node)q(_nam)q(e})-97 2017 y(\045\045)g(grid)g
(of)g(nodes,)h(llc=lower)g(left)g(corner)g(of)e(the)i(grid)f(frame)-97
2138 y(\\psng\(x_llc_offset,y_llc_)q(offs)q(et\))q(\(x_s)q(tep,)q(y_st)
q(ep\))q({no_)q(x_no)q(des})q({no)q(_y_n)q(odes)q(})-97
2499 y(4)g(auxiliary)h(elements)h
(\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045)p
(\045\045\045\045\045\045\045\045\045)q(\045\045\045\045)q
(\045\045\045\045)q(\045\045\045\045)q(\045\045\045)-97
2619 y(\045\045)e(node)-97 2740 y(\\psn\(x,y\))-97 2860
y(\\psn\(node_name\))-97 3101 y(\045\045)g(terminal)h(head)-97
3221 y(\\psth\(x,y\))-97 3342 y(\\psth\(node_name\))-97
3582 y(\045\045)f(arrow)g(head,)h(plus)f(and)g(minus)h(symbols)g(\(to)f
(be)g(placed)h(by)f(pst)g(commands\))-97 3703 y(\\psah)-97
3823 y(\\plu)-97 3944 y(\\mnu)-97 4184 y(\045\045)g(white)g(spot)h(to)f
(denote)g(conductor)i(crossings)-97 4305 y(\\psdot[dotsize=.25,lineco)q
(lor=)q(whi)q(te]\()q(x,y\))-97 4425 y(\\psdot[dotsize=.25,lineco)q
(lor=)q(whi)q(te]\()q(node)q(_nam)q(e\))-97 4666 y(\045\045)e
(one-terminal)i(with)f(ground)-97 4786 y(\\psgr\(x,y\))-97
4907 y(\\psgr\(node_name\))-97 5147 y(\045\045)f(basic)g(placement)i
(and)e(labelling)i(commands)f(...)-97 5268 y(\045\045)f(relative)h
(placement)-97 5388 y(\\uput{label_distance}[lab)q(el_a)q(ngl)q(e\(u,)q
(r,l,)q(...)58 b(or_degree\)]\(x,y\){label})1852 5637
y Fb(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop -97 573 a Fa(\\uput{label_distance}[lab)q(el_a)q
(ngl)q(e\(u,)q(r,l,)q(...)58 b(or_degree\)]\(node_name\){lab)q(el})-97
693 y(\045\045)52 b(absolute)h(placement)-97 814 y
(\\rput{rotation_angle}\(x,y)q(\){st)q(uff)q(})-97 934
y(\\rput{rotation_angle}\(nod)q(e_na)q(me\))q({stu)q(ff})-97
1175 y(\045\045)f(piecewise)h(linear)g(curve)g(connecting)h(several)f
(points,)g(point)g(coordinates)-97 1295 y(\045\045)f(can)g(be)g
(specified)h(by)f(different)i(formats)-97 1416 y
(\\psline[linestyle=\(dashed)q(,dot)q(ted)q(\)]\045)-97
1536 y(\(x1,y1\)\(node_name2\)\(node_)q(name)q(A|n)q(ode_)q(name)q
(B\)..)q(.)-97 1777 y(\045\045)e(line)g(to)g(connect)h(two)f(nodes)h
(and)f(to)g(bear)g(a)f(current)j(reference)f(direction)-97
1897 y(\045\045)f(\(\\pssa\))-97 2017 y(\\ttput\(plus_node_name\)\(mi)q
(nus_)q(nod)q(e_na)q(me\){)q(})-97 2138 y(\\pssa{arrow_dist}{arrow_w)q
(ay\(0)q(=lo)q(ads,)q(180=)q(sour)q(ces)q(\)})-97 2258
y({label_distance}{label_an)q(gle\()q(u,r)q(,l,.)q(..)57
b(or_degree\)}{label})-97 2499 y(\045\045)52 b(curve)g(connecting)i
(several)f(points,)h(point)e(coordinates)-97 2619 y(\045\045)g(can)g
(be)g(specified)h(by)f(different)i(formats)-97 2740 y(\045\045)e(the)g
(arrow)g(argument)i(produce)f(an)f(arrow)g(head)h(at)f(the)g(hend)g(of)
g(the)g(curve)-97 2860 y(\\pscurve[linestyle=\(dashe)q(d,do)q(tte)q
(d\)]{)q(->}\045)-97 2980 y(\(x1,y1\)\(node_name2\)\(node_)q(name)q
(A|n)q(ode_)q(name)q(B\)..)q(.)-97 3221 y(\045\045)g(arc)g(to)g
(connect)h(two)f(nodes)g(and)h(to)e(bear)i(a)e(current)i(reference)h
(direction)-97 3342 y(\045\045)e(\(\\pssa\))-97 3462
y(\\pcarc[arcangle=)k(]\(minus_node_name\)\(plus_nod)q(e_n)q(ame\))q
(\045)-97 3582 y(\\pssa{arrow_dist}{arrow_w)q(ay\(0)q(=lo)q(ads,)q
(180=)q(sour)q(ces)q(\)})-97 3703 y({label_distance}{label_an)q(gle\()q
(u,r)q(,l,.)q(..)h(or_degree\)}{label})-97 4064 y(5)52
b(two-terminal)i(elements)f
(\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045)p
(\045\045\045\045\045\045)q(\045\045\045\045)q(\045\045\045\045)q
(\045\045\045\045)q(\045\045\045)-97 4184 y(\045\045)f(2-terminal)i
(element)f(and)f(its)g(label,)-97 4305 y(\045\045)g(label_distance>0)j
(and)d(label_angle)j(is)c(referred)j(to)e(the)g(positive)h(x)f(axis)-97
4425 y(\\ttput\(plus_node_name\)\(mi)q(nus_)q(nod)q(e_na)q(me\){)q
(elem)q(ent)q(_nam)q(e})-97 4545 y(\\ncput{\\uput{label_distan)q(ce}[)q
(lab)q(el_a)q(ngle)q(\(u,r)q(,l,)q(...)58 b
(or_degree\)]\(0,0\){label}})-97 4786 y(6)52 b(reference)h(directions)h
(\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045)p
(\045\045\045\045\045\045\045)q(\045\045\045\045)q(\045\045\045\045)q
(\045\045\045\045)q(\045\045\045)-97 4907 y(\045\045)e(free)g(arrow)h
(\(to)f(draw)g(the)g(reference)i(direction)g(of)d(the)h(voltage)i
(between)-97 5027 y(\045\045)e(a)f(node)i(pair)f(and)g(the)g(reference)
i(direction)f(of)f(current)h(entering/leaving)-97 5147
y(\045\045)f(a)f(terminal\))-97 5268 y(\045\045)h(if)g(arc_param)h(>)f
(0)f(the)h(arrow)h(is)f(curved)h(like)f(a)g(right)g(hand)g(corner)-97
5388 y(\045\045)g(label_distance>0)j(and)d(label_angle)j(is)c(referred)
j(to)e(the)g(positive)h(x)f(axis)1852 5637 y Fb(3)p eop
end
%%Page: 4 4
TeXDict begin 4 3 bop -97 573 a Fa(\\psfa\(plus_node_name\)\(min)q
(us_n)q(ode)q(_nam)q(e\){a)q(rc_p)q(ara)q(m})-97 693
y({label_distance}{label_an)q(gle\()q(u,r)q(,l,.)q(..)57
b(or_degree\)}{label})-97 934 y(\045\045)52 b(superimposed)i(arrow)f
(\(to)f(draw)g(a)g(current)h(reference)h(direction)f(on)f(a)g
(terminal\))-97 1054 y(\045\045)g(the)g(command)h(is)f(to)g(be)f
(appended)j(to)e(the)g(command)h(placing)g(the)f(element)-97
1175 y(\045\045)g(whose)g(terminal)i(carries)f(the)f(refenced)h
(current,)-97 1295 y(\045\045)f(arrow_distance)j(shifts)e(the)f(harrow)
h(head)f(of)g(arrow_distance)j(from)d(the)g(element)-97
1416 y(\045\045)g(center)h(toward)g(the)f(positive)h(node,)-97
1536 y(\045\045)f(label_distance>0,)k(and)c(label_angle)i(is)e
(referred)h(to)f(the)g(positive)h(x)f(axis)-97 1656 y
(\\pssa{arrow_dist}{arrow_w)q(ay\(0)q(=or)q(ient)q(atio)q(n)57
b(according)d(to)e(associate)h(reference)h(directions,180=)h(the)d
(opposite)i(orientation\)})-97 1777 y({label_distance}{label_an)q
(gle\()q(u,r)q(,l,.)q(..)j(or_degree\)}{label})-97 2138
y(7)52 b(multiport)h(elements)h
(\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045)p
(\045\045\045\045\045\045\045\045\045)q(\045\045\045\045)q
(\045\045\045\045)q(\045\045\045\045)q(\045\045\045)-97
2258 y(\045\045)e(counter-clockwise)k(OA)-97 2379 y(\045\045)c(node)g
(names)h(at)f(terminal)h(heads)g(are)f(root_node_names\(m,p,o,g\))-97
2499 y(\\psccoa{angle}\(center_nod)q(e\){r)q(oot)q(_nod)q(e_na)q(mes})q
({ov)q(eral)q(l_le)q(ngth)q(})-97 2740 y(\045\045)g(clockwise)h(OA)-97
2860 y(\045\045)f(node)g(names)h(at)f(terminal)h(heads)g(are)f
(root_node_names\(m,p,o,g\))-97 2980 y(\\psen\\pscwoa{angle}\(cente)q
(r_no)q(de\))q({roo)q(t_no)q(de_n)q(ame)q(s}{o)q(vera)q(ll_l)q(eng)q
(th})-97 3221 y(\045\045)g(two-port)h(element)-97 3342
y(\045\045)f(node)g(names)h(at)f(terminal)h(heads)g(are)f
(root_node_names\(11,12\))57 b(left)-97 3462 y(\045\045)52
b(and)g(root_node_names\(21,22\))57 b(right)-97 3582
y(\\pstp{angle}\(center_node\))q({roo)q(t_n)q(ode_)q(name)q(s}{o)q(ver)
q(all_)q(leng)q(th}{)q(por)q(t_wi)q(dth})-97 3823 y(\045\045)52
b(nullor)-97 3944 y(\045\045)g(node)g(names)h(at)f(terminal)h(heads)g
(are)f(root_node_names\(11,12\))57 b(left)-97 4064 y(\045\045)52
b(and)g(root_node_names\(21,22\))57 b(right)-97 4184
y(\\psnn{angle}\(center_node\))q({roo)q(t_n)q(ode_)q(name)q(s}{o)q(ver)
q(all_)q(leng)q(th}{)q(por)q(t_wi)q(dth})-97 4425 y(\045\045)52
b(three-terminal)j(element)-97 4545 y(\045\045)d(node)g(names)h(at)f
(terminal)h(heads)g(are)f(root_node_names\(1,2,g\))-97
4666 y(\\psttt{angle}\(center_node)q(\){ro)q(ot_)q(node)q(_nam)q(es}{)q
(ove)q(rall)q(_len)q(gth})-97 4786 y({terminal_height})-97
5027 y(\045\045)g(three-terminal)j(nullor)-97 5147 y(\045\045)d(node)g
(names)h(at)f(terminal)h(heads)g(are)f(root_node_names\(1,2,g\))-97
5268 y(\\psnnt{angle}\(center_node)q(\){ro)q(ot_)q(node)q(_nam)q(es}{)q
(ove)q(rall)q(_len)q(gth})-97 5388 y({terminal_height})1852
5637 y Fb(4)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop -97 693 a Fa(\045\045)52 b(ideal)g(transformer)
-97 814 y(\045\045)g(node)g(names)h(at)f(terminal)h(heads)g(are)f
(root_node_names\(11,12\))57 b(left)-97 934 y(\045\045)52
b(and)g(root_node_names\(21,22\))57 b(right)-97 1054
y(\\psit{angle}\(center_node\))q({roo)q(t_n)q(ode_)q(name)q(s}{p)q(ort)
q(_wid)q(th})-97 1295 y(\045\045)52 b(ideal)g(gyrator)-97
1416 y(\045\045)g(node)g(names)h(at)f(terminal)h(heads)g(are)f
(root_node_names\(11,12\))57 b(left)-97 1536 y(\045\045)52
b(and)g(root_node_names\(21,22\))57 b(right)-97 1656
y(\\psig{angle}\(center_node\))q({roo)q(t_n)q(ode_)q(name)q(s}{p)q(ort)
q(_wid)q(th})-97 1897 y(\045\045)52 b(coupled)h(inductors)-97
2017 y(\045\045)f(node)g(names)h(at)f(terminal)h(heads)g(are)f
(root_node_names\(11,12\))57 b(left)-97 2138 y(\045\045)52
b(and)g(root_node_names\(21,22\))57 b(right)-97 2258
y(\\psll{angle}\(center_node\))q({roo)q(t_n)q(ode_)q(name)q(s}{p)q(ort)
q(_wid)q(th})1852 5637 y Fb(5)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
